import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o,c,b as n,a as p,e as l,d as s}from"./app.9b6c14fa.js";const i={},u=l(`<p>\u5728\u4F7F\u7528HashMap\u65F6\uFF0C\u5728\u591A\u7EBF\u7A0B\u60C5\u51B5\u4E0B\u6269\u5BB9\u4F1A\u51FA\u73B0CPU\u63A5\u8FD1100%\u7684\u60C5\u51B5\uFF0C\u56E0\u4E3Ahashmap\u5E76\u4E0D\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u901A\u5E38\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5728java\u4F53\u7CFB\u4E2D\u53E4\u8001\u7684hashtable\u7C7B\uFF0C\u8BE5\u7C7B\u57FA\u672C\u4E0A\u6240\u6709\u7684\u65B9\u6CD5\u90FD\u91C7\u7528synchronized\u8FDB\u884C\u7EBF\u7A0B\u5B89\u5168\u7684\u63A7\u5236\uFF0C\u53EF\u60F3\u800C\u77E5\uFF0C\u5728\u9AD8\u5E76\u53D1\u7684\u60C5\u51B5\u4E0B\uFF0C\u6BCF\u6B21\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u80FD\u591F\u83B7\u53D6\u5BF9\u8C61\u76D1\u89C6\u5668\u9501\uFF0C\u8FD9\u6837\u7684\u5E76\u53D1\u6027\u80FD\u7684\u786E\u4E0D\u4EE4\u4EBA\u6EE1\u610F\u3002</p><p>\u53E6\u5916\u4E00\u79CD\u65B9\u5F0F\u901A\u8FC7Collections\u7684<code>Map&lt;K,V&gt; synchronizedMap(Map&lt;K,V&gt; m)</code>\u5C06hashmap\u5305\u88C5\u6210\u4E00\u4E2A\u7EBF\u7A0B\u5B89\u5168\u7684map\u3002\u6BD4\u5982SynchronzedMap\u7684put\u65B9\u6CD5\u6E90\u7801\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	<span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mutex<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> m<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u9645\u4E0ASynchronizedMap\u5B9E\u73B0\u4F9D\u7136\u662F\u91C7\u7528synchronized\u72EC\u5360\u5F0F\u9501\u8FDB\u884C\u7EBF\u7A0B\u5B89\u5168\u7684\u5E76\u53D1\u63A7\u5236\u7684\u3002\u540C\u6837\uFF0C\u8FD9\u79CD\u65B9\u6848\u7684\u6027\u80FD\u4E5F\u662F\u4EE4\u4EBA\u4E0D\u592A\u6EE1\u610F\u7684\u3002\u9488\u5BF9\u8FD9\u79CD\u5883\u51B5\uFF0CDoug Lea\u5927\u5E08\u4E0D\u9057\u4F59\u529B\u7684\u4E3A\u6211\u4EEC\u521B\u9020\u4E86\u4E00\u4E9B\u7EBF\u7A0B\u5B89\u5168\u7684\u5E76\u53D1\u5BB9\u5668\uFF0C\u8BA9\u6BCF\u4E00\u4E2Ajava\u5F00\u53D1\u4EBA\u5458\u500D\u611F\u5E78\u798F\u3002\u76F8\u5BF9\u4E8Ehashmap\u6765\u8BF4\uFF0CConcurrentHashMap\u5C31\u662F\u7EBF\u7A0B\u5B89\u5168\u7684map\uFF0C\u5176\u4E2D<strong>\u5229\u7528\u4E86\u9501\u5206\u6BB5\u7684\u601D\u60F3\u63D0\u9AD8\u4E86\u5E76\u53D1\u5EA6</strong>\u3002</p><p>ConcurrentHashMap\u5728JDK1.6\u7684\u7248\u672C\u7F51\u4E0A\u8D44\u6599\u5F88\u591A\uFF0C\u6709\u5174\u8DA3\u7684\u53EF\u4EE5\u53BB\u770B\u770B\u3002 JDK 1.6\u7248\u672C\u5173\u952E\u8981\u7D20\uFF1A</p><ol><li>segment\u7EE7\u627F\u4E86ReentrantLock\u5145\u5F53\u9501\u7684\u89D2\u8272\uFF0C\u4E3A\u6BCF\u4E00\u4E2Asegment\u63D0\u4F9B\u4E86\u7EBF\u7A0B\u5B89\u5168\u7684\u4FDD\u969C\uFF1B</li><li>segment\u7EF4\u62A4\u4E86\u54C8\u5E0C\u6563\u5217\u8868\u7684\u82E5\u5E72\u4E2A\u6876\uFF0C\u6BCF\u4E2A\u6876\u7531HashEntry\u6784\u6210\u7684\u94FE\u8868\u3002</li></ol><p>\u800C\u5230\u4E86JDK 1.8\u7684ConcurrentHashMap\u5C31\u6709\u4E86\u5F88\u5927\u7684\u53D8\u5316\uFF0C\u5149\u662F\u4EE3\u7801\u91CF\u5C31\u8DB3\u8DB3\u589E\u52A0\u4E86\u5F88\u591A\u30021.8\u7248\u672C\u820D\u5F03\u4E86segment\uFF0C\u5E76\u4E14\u5927\u91CF\u4F7F\u7528\u4E86synchronized\uFF0C\u4EE5\u53CACAS\u65E0\u9501\u64CD\u4F5C\u4EE5\u4FDD\u8BC1ConcurrentHashMap\u64CD\u4F5C\u7684\u7EBF\u7A0B\u5B89\u5168\u6027\u3002</p><p>\u81F3\u4E8E\u4E3A\u4EC0\u4E48\u4E0D\u7528ReentrantLock\u800C\u662FSynchronzied\u5462\uFF1F\u5B9E\u9645\u4E0A\uFF0Csynchronzied\u505A\u4E86\u5F88\u591A\u7684\u4F18\u5316\uFF0C\u5305\u62EC\u504F\u5411\u9501\uFF0C\u8F7B\u91CF\u7EA7\u9501\uFF0C\u91CD\u91CF\u7EA7\u9501\uFF0C\u53EF\u4EE5\u4F9D\u6B21\u5411\u4E0A\u5347\u7EA7\u9501\u72B6\u6001\uFF0C\u4F46\u4E0D\u80FD\u964D\u7EA7\uFF0C\u56E0\u6B64\uFF0C\u4F7F\u7528synchronized\u76F8\u8F83\u4E8EReentrantLock\u7684\u6027\u80FD\u4F1A\u6301\u5E73\u751A\u81F3\u5728\u67D0\u4E9B\u60C5\u51B5\u66F4\u4F18\uFF0C\u5177\u4F53\u7684\u6027\u80FD\u6D4B\u8BD5\u53EF\u4EE5\u53BB\u7F51\u4E0A\u67E5\u9605\u4E00\u4E9B\u8D44\u6599\u3002\u53E6\u5916\uFF0C\u5E95\u5C42\u6570\u636E\u7ED3\u6784\u6539\u53D8\u4E3A\u91C7\u7528\u6570\u7EC4+\u94FE\u8868+\u7EA2\u9ED1\u6811\u7684\u6570\u636E\u5F62\u5F0F\u3002</p><h2 id="\u5173\u952E\u5C5E\u6027\u53CA\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5173\u952E\u5C5E\u6027\u53CA\u7C7B" aria-hidden="true">#</a> \u5173\u952E\u5C5E\u6027\u53CA\u7C7B</h2><p>\u5728\u4E86\u89E3ConcurrentHashMap\u7684\u5177\u4F53\u65B9\u6CD5\u5B9E\u73B0\u524D\uFF0C\u6211\u4EEC\u9700\u8981\u7CFB\u7EDF\u7684\u6765\u770B\u4E00\u4E0B\u51E0\u4E2A\u5173\u952E\u7684\u5730\u65B9\u3002</p><h3 id="concurrenthashmap\u7684\u5173\u952E\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#concurrenthashmap\u7684\u5173\u952E\u5C5E\u6027" aria-hidden="true">#</a> <strong>ConcurrentHashMap\u7684\u5173\u952E\u5C5E\u6027</strong></h3><ol><li><strong>table</strong><code>volatile Node&lt;K,V&gt;[] table</code>:</li></ol><p>\u88C5\u8F7DNode\u7684\u6570\u7EC4\uFF0C\u4F5C\u4E3AConcurrentHashMap\u7684\u6570\u636E\u5BB9\u5668\uFF0C\u91C7\u7528\u61D2\u52A0\u8F7D\u7684\u65B9\u5F0F\uFF0C\u76F4\u5230\u7B2C\u4E00\u6B21\u63D2\u5165\u6570\u636E\u7684\u65F6\u5019\u624D\u4F1A\u8FDB\u884C\u521D\u59CB\u5316\u64CD\u4F5C\uFF0C\u6570\u7EC4\u7684\u5927\u5C0F\u603B\u662F\u4E3A2\u7684\u5E42\u6B21\u65B9\u3002</p><ol start="2"><li><strong>nextTable</strong><code>volatile Node&lt;K,V&gt;[] nextTable;</code></li></ol><p>\u6269\u5BB9\u65F6\u4F7F\u7528\uFF0C\u5E73\u65F6\u4E3Anull\uFF0C\u53EA\u6709\u5728\u6269\u5BB9\u7684\u65F6\u5019\u624D\u4E3A\u975Enull</p><ol start="3"><li><strong>sizeCtl</strong><code>volatile int sizeCtl;</code></li></ol><p>\u8BE5\u5C5E\u6027\u7528\u6765\u63A7\u5236table\u6570\u7EC4\u7684\u5927\u5C0F\uFF0C\u6839\u636E\u662F\u5426\u521D\u59CB\u5316\u548C\u662F\u5426\u6B63\u5728\u6269\u5BB9\u6709\u51E0\u79CD\u60C5\u51B5\uFF1A</p><ul><li><strong>\u5F53\u503C\u4E3A\u8D1F\u6570\u65F6\uFF1A</strong> \u5982\u679C\u4E3A-1\u8868\u793A\u6B63\u5728\u521D\u59CB\u5316\uFF0C\u5982\u679C\u4E3A-N\u5219\u8868\u793A\u5F53\u524D\u6B63\u6709N-1\u4E2A\u7EBF\u7A0B\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C\uFF1B</li><li><strong>\u5F53\u503C\u4E3A\u6B63\u6570\u65F6\uFF1A</strong> \u5982\u679C\u5F53\u524D\u6570\u7EC4\u4E3Anull\u7684\u8BDD\u8868\u793Atable\u5728\u521D\u59CB\u5316\u8FC7\u7A0B\u4E2D\uFF0CsizeCtl\u8868\u793A\u4E3A\u9700\u8981\u65B0\u5EFA\u6570\u7EC4\u7684\u957F\u5EA6\uFF1B</li><li>\u82E5\u5DF2\u7ECF\u521D\u59CB\u5316\u4E86\uFF0C\u8868\u793A\u5F53\u524D\u6570\u636E\u5BB9\u5668\uFF08table\u6570\u7EC4\uFF09\u53EF\u7528\u5BB9\u91CF\u4E5F\u53EF\u4EE5\u7406\u89E3\u6210\u4E34\u754C\u503C\uFF08\u63D2\u5165\u8282\u70B9\u6570\u8D85\u8FC7\u4E86\u8BE5\u4E34\u754C\u503C\u5C31\u9700\u8981\u6269\u5BB9\uFF09\uFF0C\u5177\u4F53\u6307\u4E3A\u6570\u7EC4\u7684\u957F\u5EA6n \u4E58\u4EE5 \u52A0\u8F7D\u56E0\u5B50loadFactor\uFF1B</li><li>\u5F53\u503C\u4E3A0\u65F6\uFF0C\u5373\u6570\u7EC4\u957F\u5EA6\u4E3A\u9ED8\u8BA4\u521D\u59CB\u503C\u3002</li></ul><ol start="4"><li><code>sun.misc.Unsafe U</code></li></ol><p>\u5728ConcurrentHashMapde\u7684\u5B9E\u73B0\u4E2D\u53EF\u4EE5\u770B\u5230\u5927\u91CF\u7684U.compareAndSwapXXXX\u7684\u65B9\u6CD5\u53BB\u4FEE\u6539ConcurrentHashMap\u7684\u4E00\u4E9B\u5C5E\u6027\u3002</p><p>\u8FD9\u4E9B\u65B9\u6CD5\u5B9E\u9645\u4E0A\u662F\u5229\u7528\u4E86CAS\u7B97\u6CD5\u4FDD\u8BC1\u4E86\u7EBF\u7A0B\u5B89\u5168\u6027\uFF0C\u8FD9\u662F\u4E00\u79CD\u4E50\u89C2\u7B56\u7565\uFF0C\u5047\u8BBE\u6BCF\u4E00\u6B21\u64CD\u4F5C\u90FD\u4E0D\u4F1A\u4EA7\u751F\u51B2\u7A81\uFF0C\u5F53\u4E14\u4EC5\u5F53\u51B2\u7A81\u53D1\u751F\u7684\u65F6\u5019\u518D\u53BB\u5C1D\u8BD5\u3002</p><p>\u800CCAS\u64CD\u4F5C\u4F9D\u8D56\u4E8E\u73B0\u4EE3\u5904\u7406\u5668\u6307\u4EE4\u96C6\uFF0C\u901A\u8FC7\u5E95\u5C42<strong>CMPXCHG</strong>\u6307\u4EE4\u5B9E\u73B0\u3002CAS(V,O,N)\u6838\u5FC3\u601D\u60F3\u4E3A\uFF1A<strong>\u82E5\u5F53\u524D\u53D8\u91CF\u5B9E\u9645\u503CV\u4E0E\u671F\u671B\u7684\u65E7\u503CO\u76F8\u540C\uFF0C\u5219\u8868\u660E\u8BE5\u53D8\u91CF\u6CA1\u88AB\u5176\u4ED6\u7EBF\u7A0B\u8FDB\u884C\u4FEE\u6539\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5B89\u5168\u7684\u5C06\u65B0\u503CN\u8D4B\u503C\u7ED9\u53D8\u91CF\uFF1B\u82E5\u5F53\u524D\u53D8\u91CF\u5B9E\u9645\u503CV\u4E0E\u671F\u671B\u7684\u65E7\u503CO\u4E0D\u76F8\u540C\uFF0C\u5219\u8868\u660E\u8BE5\u53D8\u91CF\u5DF2\u7ECF\u88AB\u5176\u4ED6\u7EBF\u7A0B\u505A\u4E86\u5904\u7406\uFF0C\u6B64\u65F6\u5C06\u65B0\u503CN\u8D4B\u7ED9\u53D8\u91CF\u64CD\u4F5C\u5C31\u662F\u4E0D\u5B89\u5168\u7684\uFF0C\u5728\u8FDB\u884C\u91CD\u8BD5</strong>\u3002</p><p>\u800C\u5728\u5927\u91CF\u7684\u540C\u6B65\u7EC4\u4EF6\u548C\u5E76\u53D1\u5BB9\u5668\u7684\u5B9E\u73B0\u4E2D\u4F7F\u7528CAS\u662F\u901A\u8FC7<code>sun.misc.Unsafe</code>\u7C7B\u5B9E\u73B0\u7684\uFF0C\u8BE5\u7C7B\u63D0\u4F9B\u4E86\u4E00\u4E9B\u53EF\u4EE5\u76F4\u63A5\u64CD\u63A7\u5185\u5B58\u548C\u7EBF\u7A0B\u7684\u5E95\u5C42\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3Ajava\u4E2D\u7684\u201C\u6307\u9488\u201D\u3002\u8BE5\u6210\u5458\u53D8\u91CF\u7684\u83B7\u53D6\u662F\u5728\u9759\u6001\u4EE3\u7801\u5757\u4E2D\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">U</span> <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>Unsafe</span><span class="token punctuation">.</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrenthashmap\u4E2D\u5173\u952E\u5185\u90E8\u7C7B" tabindex="-1"><a class="header-anchor" href="#concurrenthashmap\u4E2D\u5173\u952E\u5185\u90E8\u7C7B" aria-hidden="true">#</a> <strong>ConcurrentHashMap\u4E2D\u5173\u952E\u5185\u90E8\u7C7B</strong></h3><h4 id="_1-node" tabindex="-1"><a class="header-anchor" href="#_1-node" aria-hidden="true">#</a> 1. <strong>Node</strong></h4><p>Node\u7C7B\u5B9E\u73B0\u4E86Map.Entry\u63A5\u53E3\uFF0C\u4E3B\u8981\u5B58\u653Ekey-value\u5BF9\uFF0C\u5E76\u4E14\u5177\u6709next\u57DF</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> hash<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">K</span> key<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">V</span> val<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
		<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\u53EF\u4EE5\u770B\u51FA\u5F88\u591A\u5C5E\u6027\u90FD\u662F\u7528volatile\u8FDB\u884C\u4FEE\u9970\u7684\uFF0C\u4E5F\u5C31\u662F\u4E3A\u4E86\u4FDD\u8BC1\u5185\u5B58\u53EF\u89C1\u6027\u3002</p><h4 id="_2-treenode" tabindex="-1"><a class="header-anchor" href="#_2-treenode" aria-hidden="true">#</a> 2. <strong>TreeNode</strong></h4><p>\u6811\u8282\u70B9\uFF0C\u7EE7\u627F\u4E8E\u627F\u8F7D\u6570\u636E\u7684Node\u7C7B\u3002\u800C\u7EA2\u9ED1\u6811\u7684\u64CD\u4F5C\u662F\u9488\u5BF9TreeBin\u7C7B\u7684\uFF0C\u4ECE\u8BE5\u7C7B\u7684\u6CE8\u91CA\u4E5F\u53EF\u4EE5\u770B\u51FA\uFF0C\u4E5F\u5C31\u662FTreeBin\u4F1A\u5C06TreeNode\u8FDB\u884C\u518D\u4E00\u6B21\u5C01\u88C5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token operator">*</span><span class="token operator">*</span>
 <span class="token operator">*</span> <span class="token class-name">Nodes</span> <span class="token keyword">for</span> use in <span class="token class-name">TreeBins</span>
 <span class="token operator">*</span><span class="token operator">/</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> parent<span class="token punctuation">;</span>  <span class="token comment">// red-black tree links</span>
        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> left<span class="token punctuation">;</span>
        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> right<span class="token punctuation">;</span>
        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">;</span>    <span class="token comment">// needed to unlink next upon deletion</span>
        <span class="token keyword">boolean</span> red<span class="token punctuation">;</span>
		<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-treebin" tabindex="-1"><a class="header-anchor" href="#_3-treebin" aria-hidden="true">#</a> 3. <strong>TreeBin</strong></h4><p>\u8FD9\u4E2A\u7C7B\u5E76\u4E0D\u8D1F\u8D23\u5305\u88C5\u7528\u6237\u7684key\u3001value\u4FE1\u606F\uFF0C\u800C\u662F\u5305\u88C5\u7684\u5F88\u591ATreeNode\u8282\u70B9\u3002\u5B9E\u9645\u7684ConcurrentHashMap\u201C\u6570\u7EC4\u201D\u4E2D\uFF0C\u5B58\u653E\u7684\u662FTreeBin\u5BF9\u8C61\uFF0C\u800C\u4E0D\u662FTreeNode\u5BF9\u8C61\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> root<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Thread</span> waiter<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token keyword">int</span> lockState<span class="token punctuation">;</span>
        <span class="token comment">// values for lockState</span>
        <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> WRITER <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// set while holding write lock</span>
        <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> WAITER <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// set when waiting for write lock</span>
        <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> READER <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// increment value for setting read lock</span>
		<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-forwardingnode" tabindex="-1"><a class="header-anchor" href="#_4-forwardingnode" aria-hidden="true">#</a> 4. <strong>ForwardingNode</strong></h4><p>\u5728\u6269\u5BB9\u65F6\u624D\u4F1A\u51FA\u73B0\u7684\u7279\u6B8A\u8282\u70B9\uFF0C\u5176key,value,hash\u5168\u90E8\u4E3Anull\u3002\u5E76\u62E5\u6709nextTable\u6307\u9488\u5F15\u7528\u65B0\u7684table\u6570\u7EC4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ForwardingNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nextTable<span class="token punctuation">;</span>
    <span class="token class-name">ForwardingNode</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>MOVED<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nextTable <span class="token operator">=</span> tab<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cas\u5173\u952E\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#cas\u5173\u952E\u64CD\u4F5C" aria-hidden="true">#</a> <strong>CAS\u5173\u952E\u64CD\u4F5C</strong></h2><p>\u5728\u4E0A\u9762\u6211\u4EEC\u63D0\u53CA\u5230\u5728ConcurrentHashMap\u4E2D\u4F1A\u5927\u91CF\u4F7F\u7528CAS\u4FEE\u6539\u5B83\u7684\u5C5E\u6027\u548C\u4E00\u4E9B\u64CD\u4F5C\u3002\u56E0\u6B64\uFF0C\u5728\u7406\u89E3ConcurrentHashMap\u7684\u65B9\u6CD5\u524D\u6211\u4EEC\u9700\u8981\u4E86\u89E3\u4E0B\u9762\u51E0\u4E2A\u5E38\u7528\u7684\u5229\u7528CAS\u7B97\u6CD5\u6765\u4FDD\u969C\u7EBF\u7A0B\u5B89\u5168\u7684\u64CD\u4F5C\u3002</p><h3 id="_1-tabat" tabindex="-1"><a class="header-anchor" href="#_1-tabat" aria-hidden="true">#</a> 1. <strong>tabAt</strong></h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">tabAt</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">getObjectVolatile</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>i <span class="token operator">&lt;&lt;</span> ASHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> ABASE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u7528\u6765\u83B7\u53D6table\u6570\u7EC4\u4E2D\u7D22\u5F15\u4E3Ai\u7684Node\u5143\u7D20\u3002</p><h3 id="_2-castabat" tabindex="-1"><a class="header-anchor" href="#_2-castabat" aria-hidden="true">#</a> 2. <strong>casTabAt</strong></h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">boolean</span> <span class="token function">casTabAt</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span>
                                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>i <span class="token operator">&lt;&lt;</span> ASHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> ABASE<span class="token punctuation">,</span> c<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5229\u7528CAS\u64CD\u4F5C\u8BBE\u7F6Etable\u6570\u7EC4\u4E2D\u7D22\u5F15\u4E3Ai\u7684\u5143\u7D20</p><h3 id="_3-settabat" tabindex="-1"><a class="header-anchor" href="#_3-settabat" aria-hidden="true">#</a> 3. <strong>setTabAt</strong></h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">setTabAt</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">putObjectVolatile</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>i <span class="token operator">&lt;&lt;</span> ASHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> ABASE<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u7528\u6765\u8BBE\u7F6Etable\u6570\u7EC4\u4E2D\u7D22\u5F15\u4E3Ai\u7684\u5143\u7D20</p><h2 id="\u91CD\u70B9\u65B9\u6CD5\u8BB2\u89E3" tabindex="-1"><a class="header-anchor" href="#\u91CD\u70B9\u65B9\u6CD5\u8BB2\u89E3" aria-hidden="true">#</a> \u91CD\u70B9\u65B9\u6CD5\u8BB2\u89E3</h2><p>\u5728\u719F\u6089\u4E0A\u9762\u7684\u8FD9\u6838\u5FC3\u4FE1\u606F\u4E4B\u540E\uFF0C\u6211\u4EEC\u63A5\u4E0B\u6765\u5C31\u6765\u4F9D\u6B21\u770B\u770B\u51E0\u4E2A\u5E38\u7528\u7684\u65B9\u6CD5\u662F\u600E\u6837\u5B9E\u73B0\u7684\u3002</p><h3 id="\u5B9E\u4F8B\u6784\u9020\u5668\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u6784\u9020\u5668\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u4F8B\u6784\u9020\u5668\u65B9\u6CD5</h3><p>\u5728\u4F7F\u7528ConcurrentHashMap\u7B2C\u4E00\u4EF6\u4E8B\u81EA\u7136\u800C\u7136\u5C31\u662Fnew \u51FA\u6765\u4E00\u4E2AConcurrentHashMap\u5BF9\u8C61\uFF0C\u4E00\u5171\u63D0\u4F9B\u4E86\u5982\u4E0B\u51E0\u4E2A\u6784\u9020\u5668\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 1. \u6784\u9020\u4E00\u4E2A\u7A7A\u7684map\uFF0C\u5373table\u6570\u7EC4\u8FD8\u672A\u521D\u59CB\u5316\uFF0C\u521D\u59CB\u5316\u653E\u5728\u7B2C\u4E00\u6B21\u63D2\u5165\u6570\u636E\u65F6\uFF0C\u9ED8\u8BA4\u5927\u5C0F\u4E3A16</span>
<span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 2. \u7ED9\u5B9Amap\u7684\u5927\u5C0F</span>
<span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> 
<span class="token comment">// 3. \u7ED9\u5B9A\u4E00\u4E2Amap</span>
<span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> m<span class="token punctuation">)</span>
<span class="token comment">// 4. \u7ED9\u5B9Amap\u7684\u5927\u5C0F\u4EE5\u53CA\u52A0\u8F7D\u56E0\u5B50</span>
<span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">)</span>
<span class="token comment">// 5. \u7ED9\u5B9Amap\u5927\u5C0F\uFF0C\u52A0\u8F7D\u56E0\u5B50\u4EE5\u53CA\u5E76\u53D1\u5EA6\uFF08\u9884\u8BA1\u540C\u65F6\u64CD\u4F5C\u6570\u636E\u7684\u7EBF\u7A0B\uFF09</span>
<span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span><span class="token keyword">float</span> loadFactor<span class="token punctuation">,</span> <span class="token keyword">int</span> concurrencyLevel<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ConcurrentHashMap\u4E00\u5171\u7ED9\u6211\u4EEC\u63D0\u4F9B\u4E865\u4E2D\u6784\u9020\u5668\u65B9\u6CD5\uFF0C\u5177\u4F53\u4F7F\u7528\u8BF7\u770B\u6CE8\u91CA\uFF0C\u6211\u4EEC\u6765\u770B\u770B\u7B2C2\u79CD\u6784\u9020\u5668\uFF0C\u4F20\u5165\u6307\u5B9A\u5927\u5C0F\u65F6\u7684\u60C5\u51B5\uFF0C\u8BE5\u6784\u9020\u5668\u6E90\u7801\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ConcurrentHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//1. \u5C0F\u4E8E0\u76F4\u63A5\u629B\u5F02\u5E38</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//2. \u5224\u65AD\u662F\u5426\u8D85\u8FC7\u4E86\u5141\u8BB8\u7684\u6700\u5927\u503C\uFF0C\u8D85\u8FC7\u4E86\u8BDD\u5219\u53D6\u6700\u5927\u503C\uFF0C\u5426\u5219\u518D\u5BF9\u8BE5\u503C\u8FDB\u4E00\u6B65\u5904\u7406</span>
    <span class="token keyword">int</span> cap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>MAXIMUM_CAPACITY <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span>
               MAXIMUM_CAPACITY <span class="token operator">:</span>
               <span class="token function">tableSizeFor</span><span class="token punctuation">(</span>initialCapacity <span class="token operator">+</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//3. \u8D4B\u503C\u7ED9sizeCtl</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>sizeCtl <span class="token operator">=</span> cap<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6BB5\u4EE3\u7801\u7684\u903B\u8F91\u8BF7\u770B\u6CE8\u91CA\uFF0C\u5F88\u5BB9\u6613\u7406\u89E3\uFF0C\u5982\u679C\u5C0F\u4E8E0\u5C31\u76F4\u63A5\u629B\u51FA\u5F02\u5E38\uFF0C\u5982\u679C\u6307\u5B9A\u503C\u5927\u4E8E\u4E86\u6240\u5141\u8BB8\u7684\u6700\u5927\u503C\u7684\u8BDD\u5C31\u53D6\u6700\u5927\u503C\uFF0C\u5426\u5219\uFF0C\u5728\u5BF9\u6307\u5B9A\u503C\u505A\u8FDB\u4E00\u6B65\u5904\u7406\u3002\u6700\u540E\u5C06cap\u8D4B\u503C\u7ED9sizeCtl,\u5173\u4E8EsizeCtl\u7684\u8BF4\u660E\u8BF7\u770B\u4E0A\u9762\u7684\u8BF4\u660E\uFF0C<strong>\u5F53\u8C03\u7528\u6784\u9020\u5668\u65B9\u6CD5\u4E4B\u540E\uFF0CsizeCtl\u7684\u5927\u5C0F\u5E94\u8BE5\u5C31\u4EE3\u8868\u4E86ConcurrentHashMap\u7684\u5927\u5C0F\uFF0C\u5373table\u6570\u7EC4\u957F\u5EA6</strong>\u3002tableSizeFor\u505A\u4E86\u54EA\u4E9B\u4E8B\u60C5\u4E86\uFF1F\u6E90\u7801\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Returns a power of two table size for the given desired capacity.
 * See Hackers Delight, sec 3.2
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> c <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;=</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token operator">?</span> MAXIMUM_CAPACITY <span class="token operator">:</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u6CE8\u91CA\u5C31\u5F88\u6E05\u695A\u4E86\uFF0C\u8BE5\u65B9\u6CD5\u4F1A\u5C06\u8C03\u7528\u6784\u9020\u5668\u65B9\u6CD5\u65F6\u6307\u5B9A\u7684\u5927\u5C0F\u8F6C\u6362\u6210\u4E00\u4E2A2\u7684\u5E42\u6B21\u65B9\u6570\uFF0C\u4E5F\u5C31\u662F\u8BF4ConcurrentHashMap\u7684\u5927\u5C0F\u4E00\u5B9A\u662F2\u7684\u5E42\u6B21\u65B9\uFF0C\u6BD4\u5982\uFF0C\u5F53\u6307\u5B9A\u5927\u5C0F\u4E3A18\u65F6\uFF0C\u4E3A\u4E86\u6EE1\u8DB32\u7684\u5E42\u6B21\u65B9\u7279\u6027\uFF0C\u5B9E\u9645\u4E0AconcurrentHashMapd\u7684\u5927\u5C0F\u4E3A2\u76845\u6B21\u65B9\uFF0832\uFF09\u3002</p><p>\u53E6\u5916\uFF0C\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C<strong>\u8C03\u7528\u6784\u9020\u5668\u65B9\u6CD5\u7684\u65F6\u5019\u5E76\u672A\u6784\u9020\u51FAtable\u6570\u7EC4\uFF08\u53EF\u4EE5\u7406\u89E3\u4E3AConcurrentHashMap\u7684\u6570\u636E\u5BB9\u5668\uFF09\uFF0C\u53EA\u662F\u7B97\u51FAtable\u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u5F53\u7B2C\u4E00\u6B21\u5411ConcurrentHashMap\u63D2\u5165\u6570\u636E\u7684\u65F6\u5019\u624D\u771F\u6B63\u7684\u5B8C\u6210\u521D\u59CB\u5316\u521B\u5EFAtable\u6570\u7EC4\u7684\u5DE5\u4F5C</strong>\u3002</p><h3 id="inittable\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#inittable\u65B9\u6CD5" aria-hidden="true">#</a> initTable\u65B9\u6CD5</h3><p>\u76F4\u63A5\u4E0A\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">initTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token keyword">int</span> sc<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> tab<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sc <span class="token operator">=</span> sizeCtl<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
			<span class="token comment">// 1. \u4FDD\u8BC1\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u6B63\u5728\u8FDB\u884C\u521D\u59CB\u5316\u64CD\u4F5C</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// lost initialization race; just spin</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> tab<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// 2. \u5F97\u51FA\u6570\u7EC4\u7684\u5927\u5C0F</span>
                    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token punctuation">(</span>sc <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> sc <span class="token operator">:</span> DEFAULT_CAPACITY<span class="token punctuation">;</span>
                    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
					<span class="token comment">// 3. \u8FD9\u91CC\u624D\u771F\u6B63\u7684\u521D\u59CB\u5316\u6570\u7EC4</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nt <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    table <span class="token operator">=</span> tab <span class="token operator">=</span> nt<span class="token punctuation">;</span>
					<span class="token comment">// 4. \u8BA1\u7B97\u6570\u7EC4\u4E2D\u53EF\u7528\u7684\u5927\u5C0F\uFF1A\u5B9E\u9645\u5927\u5C0Fn*0.75\uFF08\u52A0\u8F7D\u56E0\u5B50\uFF09</span>
                    sc <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                sizeCtl <span class="token operator">=</span> sc<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> tab<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u7684\u903B\u8F91\u8BF7\u89C1\u6CE8\u91CA\uFF0C\u6709\u53EF\u80FD\u5B58\u5728\u4E00\u4E2A\u60C5\u51B5\u662F\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u8D70\u5230\u8FD9\u4E2A\u65B9\u6CD5\u4E2D\uFF0C\u4E3A\u4E86\u4FDD\u8BC1\u80FD\u591F\u6B63\u786E\u521D\u59CB\u5316\uFF0C\u5728\u7B2C1\u6B65\u4E2D\u4F1A\u5148\u901A\u8FC7if\u8FDB\u884C\u5224\u65AD\uFF0C\u82E5\u5F53\u524D\u5DF2\u7ECF\u6709\u4E00\u4E2A\u7EBF\u7A0B\u6B63\u5728\u521D\u59CB\u5316\u5373sizeCtl\u503C\u53D8\u4E3A-1\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5176\u4ED6\u7EBF\u7A0B\u5728If\u5224\u65AD\u4E3Atrue\u4ECE\u800C\u8C03\u7528Thread.yield()\u8BA9\u51FACPU\u65F6\u95F4\u7247\u3002</p><p>\u6B63\u5728\u8FDB\u884C\u521D\u59CB\u5316\u7684\u7EBF\u7A0B\u4F1A\u8C03\u7528U.compareAndSwapInt\u65B9\u6CD5\u5C06sizeCtl\u6539\u4E3A-1\u5373\u6B63\u5728\u521D\u59CB\u5316\u7684\u72B6\u6001\u3002</p><p>\u53E6\u5916\u8FD8\u9700\u8981\u6CE8\u610F\u7684\u4E8B\u60C5\u662F\uFF0C\u5728\u7B2C\u56DB\u6B65\u4E2D\u4F1A\u8FDB\u4E00\u6B65\u8BA1\u7B97\u6570\u7EC4\u4E2D\u53EF\u7528\u7684\u5927\u5C0F\u5373\u4E3A\u6570\u7EC4\u5B9E\u9645\u5927\u5C0Fn\u4E58\u4EE5\u52A0\u8F7D\u56E0\u5B500.75.\u53EF\u4EE5\u770B\u770B\u8FD9\u91CC\u4E58\u4EE50.75\u662F\u600E\u4E48\u7B97\u7684\uFF0C0.75\u4E3A\u56DB\u5206\u4E4B\u4E09\uFF0C\u8FD9\u91CC<code>n - (n &gt;&gt;&gt; 2)</code>\u662F\u4E0D\u662F\u521A\u597D\u662F<code>n-(1/4)n=(3/4)n</code>\uFF0C\u633A\u6709\u610F\u601D\u7684\u5427:)\u3002</p><p>\u5982\u679C\u9009\u62E9\u662F\u65E0\u53C2\u7684\u6784\u9020\u5668\u7684\u8BDD\uFF0C\u8FD9\u91CC\u5728new Node\u6570\u7EC4\u7684\u65F6\u5019\u4F1A\u4F7F\u7528\u9ED8\u8BA4\u5927\u5C0F\u4E3A<code>DEFAULT_CAPACITY</code>\uFF0816\uFF09\uFF0C\u7136\u540E\u4E58\u4EE5\u52A0\u8F7D\u56E0\u5B500.75\u4E3A12\uFF0C\u4E5F\u5C31\u662F\u8BF4\u6570\u7EC4\u7684\u53EF\u7528\u5927\u5C0F\u4E3A12\u3002</p><h3 id="put\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#put\u65B9\u6CD5" aria-hidden="true">#</a> put\u65B9\u6CD5</h3><p>\u4F7F\u7528ConcurrentHashMap\u6700\u957F\u7528\u7684\u4E5F\u5E94\u8BE5\u662Fput\u548Cget\u65B9\u6CD5\u4E86\u5427\uFF0C\u6211\u4EEC\u5148\u6765\u770B\u770Bput\u65B9\u6CD5\u662F\u600E\u6837\u5B9E\u73B0\u7684\u3002\u8C03\u7528put\u65B9\u6CD5\u65F6\u5B9E\u9645\u5177\u4F53\u5B9E\u73B0\u662FputVal\u65B9\u6CD5\uFF0C\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/** Implementation for put and putIfAbsent */</span>
<span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//1. \u8BA1\u7B97key\u7684hash\u503C</span>
    <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token function">spread</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab <span class="token operator">=</span> table<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> f<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">,</span> fh<span class="token punctuation">;</span>
		<span class="token comment">//2. \u5982\u679C\u5F53\u524Dtable\u8FD8\u6CA1\u6709\u521D\u59CB\u5316\u5148\u8C03\u7528initTable\u65B9\u6CD5\u5C06tab\u8FDB\u884C\u521D\u59CB\u5316</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            tab <span class="token operator">=</span> <span class="token function">initTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//3. tab\u4E2D\u7D22\u5F15\u4E3Ai\u7684\u4F4D\u7F6E\u7684\u5143\u7D20\u4E3Anull\uFF0C\u5219\u76F4\u63A5\u4F7F\u7528CAS\u5C06\u503C\u63D2\u5165\u5373\u53EF</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>f <span class="token operator">=</span> <span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">casTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
                         <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>                   <span class="token comment">// no lock when adding to empty bin</span>
        <span class="token punctuation">}</span>
		<span class="token comment">//4. \u5F53\u524D\u6B63\u5728\u6269\u5BB9</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fh <span class="token operator">=</span> f<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">==</span> MOVED<span class="token punctuation">)</span>
            tab <span class="token operator">=</span> <span class="token function">helpTransfer</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">V</span> oldVal <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">==</span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">//5. \u5F53\u524D\u4E3A\u94FE\u8868\uFF0C\u5728\u94FE\u8868\u4E2D\u63D2\u5165\u65B0\u7684\u952E\u503C\u5BF9</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>fh <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        binCount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> f<span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token class-name">K</span> ek<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                                <span class="token punctuation">(</span><span class="token punctuation">(</span>ek <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span>
                                 <span class="token punctuation">(</span>ek <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ek<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                oldVal <span class="token operator">=</span> e<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent<span class="token punctuation">)</span>
                                    e<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
                                <span class="token keyword">break</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pred <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                pred<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span>
                                                          value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token keyword">break</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
					<span class="token comment">// 6.\u5F53\u524D\u4E3A\u7EA2\u9ED1\u6811\uFF0C\u5C06\u65B0\u7684\u952E\u503C\u5BF9\u63D2\u5165\u5230\u7EA2\u9ED1\u6811\u4E2D</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">TreeBin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span>
                        binCount <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>f<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span>
                                                       value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            oldVal <span class="token operator">=</span> p<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent<span class="token punctuation">)</span>
                                p<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
			<span class="token comment">// 7.\u63D2\u5165\u5B8C\u952E\u503C\u5BF9\u540E\u518D\u6839\u636E\u5B9E\u9645\u5927\u5C0F\u770B\u662F\u5426\u9700\u8981\u8F6C\u6362\u6210\u7EA2\u9ED1\u6811</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> TREEIFY_THRESHOLD<span class="token punctuation">)</span>
                    <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVal <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> oldVal<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
	<span class="token comment">//8.\u5BF9\u5F53\u524D\u5BB9\u91CF\u5927\u5C0F\u8FDB\u884C\u68C0\u67E5\uFF0C\u5982\u679C\u8D85\u8FC7\u4E86\u4E34\u754C\u503C\uFF08\u5B9E\u9645\u5927\u5C0F*\u52A0\u8F7D\u56E0\u5B50\uFF09\u5C31\u9700\u8981\u6269\u5BB9 </span>
    <span class="token function">addCount</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">,</span> binCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>put\u65B9\u6CD5\u7684\u4EE3\u7801\u91CF\u6709\u70B9\u957F\uFF0C\u6211\u4EEC\u6309\u7167\u4E0A\u9762\u7684\u5206\u89E3\u7684\u6B65\u9AA4\u4E00\u6B65\u6B65\u6765\u770B\u3002</p><p><strong>\u4ECE\u6574\u4F53\u800C\u8A00\uFF0C\u4E3A\u4E86\u89E3\u51B3\u7EBF\u7A0B\u5B89\u5168\u7684\u95EE\u9898\uFF0CConcurrentHashMap\u4F7F\u7528\u4E86synchronzied\u548CCAS\u7684\u65B9\u5F0F</strong>\u3002</p><p>\u5728\u4E4B\u524D\u4E86\u89E3\u8FC7HashMap\u4EE5\u53CA1.8\u7248\u672C\u4E4B\u524D\u7684ConcurrenHashMap\u90FD\u5E94\u8BE5\u77E5\u9053ConcurrentHashMap\u7ED3\u6784\u56FE\uFF0C\u4E3A\u4E86\u65B9\u9762\u4E0B\u9762\u7684\u8BB2\u89E3\u8FD9\u91CC\u5148\u76F4\u63A5\u7ED9\u51FA\uFF0C\u5982\u679C\u5BF9\u8FD9\u6709\u7591\u95EE\u7684\u8BDD\uFF0C\u53EF\u4EE5\u5728\u7F51\u4E0A\u968F\u4FBF\u641C\u641C\u5373\u53EF\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/thread/ConcurrentHashMap-01.png" alt="ConcurrentHashMap\u6563\u5217\u6876\u6570\u7EC4\u7ED3\u6784\u793A\u610F\u56FE" loading="lazy"></p><p>\u5982\u56FE\uFF08\u56FE\u7247\u6458\u81EA\u7F51\u7EDC\uFF09\uFF0CConcurrentHashMap\u662F\u4E00\u4E2A\u54C8\u5E0C\u6876\u6570\u7EC4\uFF0C\u5982\u679C\u4E0D\u51FA\u73B0\u54C8\u5E0C\u51B2\u7A81\u7684\u65F6\u5019\uFF0C\u6BCF\u4E2A\u5143\u7D20\u5747\u5300\u7684\u5206\u5E03\u5728\u54C8\u5E0C\u6876\u6570\u7EC4\u4E2D\u3002\u5F53\u51FA\u73B0\u54C8\u5E0C\u51B2\u7A81\u7684\u65F6\u5019\uFF0C\u662F<strong>\u6807\u51C6\u7684\u94FE\u5730\u5740\u7684\u89E3\u51B3\u65B9\u5F0F</strong>\uFF0C\u5C06hash\u503C\u76F8\u540C\u7684\u8282\u70B9\u6784\u6210\u94FE\u8868\u7684\u5F62\u5F0F\uFF0C\u79F0\u4E3A\u201C\u62C9\u94FE\u6CD5\u201D\uFF0C\u53E6\u5916\uFF0C\u57281.8\u7248\u672C\u4E2D\u4E3A\u4E86\u9632\u6B62\u62C9\u94FE\u8FC7\u957F\uFF0C\u5F53\u94FE\u8868\u7684\u957F\u5EA6\u5927\u4E8E8\u7684\u65F6\u5019\u4F1A\u5C06\u94FE\u8868\u8F6C\u6362\u6210\u7EA2\u9ED1\u6811\u3002</p><p>table\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u5B9E\u9645\u4E0A\u662F\u5355\u94FE\u8868\u7684\u5934\u7ED3\u70B9\u6216\u8005\u7EA2\u9ED1\u6811\u7684\u6839\u8282\u70B9\u3002\u5F53\u63D2\u5165\u952E\u503C\u5BF9\u65F6\u9996\u5148\u5E94\u8BE5\u5B9A\u4F4D\u5230\u8981\u63D2\u5165\u7684\u6876\uFF0C\u5373\u63D2\u5165table\u6570\u7EC4\u7684\u7D22\u5F15i\u5904\u3002\u90A3\u4E48\uFF0C\u600E\u6837\u8BA1\u7B97\u5F97\u51FA\u7D22\u5F15i\u5462\uFF1F\u5F53\u7136\u662F\u6839\u636Ekey\u7684hashCode\u503C\u3002</p><h4 id="_1-spread-\u91CD\u54C8\u5E0C-\u4EE5\u51CF\u5C0Fhash\u51B2\u7A81" tabindex="-1"><a class="header-anchor" href="#_1-spread-\u91CD\u54C8\u5E0C-\u4EE5\u51CF\u5C0Fhash\u51B2\u7A81" aria-hidden="true">#</a> 1. spread()\u91CD\u54C8\u5E0C\uFF0C\u4EE5\u51CF\u5C0FHash\u51B2\u7A81</h4><p>\u6211\u4EEC\u77E5\u9053\u5BF9\u4E8E\u4E00\u4E2Ahash\u8868\u6765\u8BF4\uFF0Chash\u503C\u5206\u6563\u7684\u4E0D\u591F\u5747\u5300\u7684\u8BDD\u4F1A\u5927\u5927\u589E\u52A0\u54C8\u5E0C\u51B2\u7A81\u7684\u6982\u7387\uFF0C\u4ECE\u800C\u5F71\u54CD\u5230hash\u8868\u7684\u6027\u80FD\u3002\u56E0\u6B64\u901A\u8FC7spread\u65B9\u6CD5\u8FDB\u884C\u4E86\u4E00\u6B21\u91CDhash\u4ECE\u800C\u5927\u5927\u51CF\u5C0F\u54C8\u5E0C\u51B2\u7A81\u7684\u53EF\u80FD\u6027\u3002spread\u65B9\u6CD5\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">spread</span><span class="token punctuation">(</span><span class="token keyword">int</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>h <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> HASH_BITS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u4E3B\u8981\u662F<strong>\u5C06key\u7684hashCode\u7684\u4F4E16\u4F4D\u4E8E\u9AD816\u4F4D\u8FDB\u884C\u5F02\u6216\u8FD0\u7B97</strong>\uFF0C\u8FD9\u6837\u4E0D\u4EC5\u80FD\u591F\u4F7F\u5F97hash\u503C\u80FD\u591F\u5206\u6563\u80FD\u591F\u5747\u5300\u51CF\u5C0Fhash\u51B2\u7A81\u7684\u6982\u7387\uFF0C\u53E6\u5916\u53EA\u7528\u5230\u4E86\u5F02\u6216\u8FD0\u7B97\uFF0C\u5728\u6027\u80FD\u5F00\u9500\u4E0A\u4E5F\u80FD\u517C\u987E\uFF0C\u505A\u5230\u5E73\u8861\u7684trade-off\u3002</p><h4 id="_2-\u521D\u59CB\u5316table" tabindex="-1"><a class="header-anchor" href="#_2-\u521D\u59CB\u5316table" aria-hidden="true">#</a> 2. \u521D\u59CB\u5316table</h4><p>\u7D27\u63A5\u7740\u5230\u7B2C2\u6B65\uFF0C\u4F1A\u5224\u65AD\u5F53\u524Dtable\u6570\u7EC4\u662F\u5426\u521D\u59CB\u5316\u4E86\uFF0C\u6CA1\u6709\u7684\u8BDD\u5C31\u8C03\u7528initTable\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u8BE5\u65B9\u6CD5\u5728\u4E0A\u9762\u5DF2\u7ECF\u8BB2\u8FC7\u4E86\u3002</p><h4 id="_3-\u80FD\u5426\u76F4\u63A5\u5C06\u65B0\u503C\u63D2\u5165\u5230table\u6570\u7EC4\u4E2D" tabindex="-1"><a class="header-anchor" href="#_3-\u80FD\u5426\u76F4\u63A5\u5C06\u65B0\u503C\u63D2\u5165\u5230table\u6570\u7EC4\u4E2D" aria-hidden="true">#</a> 3. \u80FD\u5426\u76F4\u63A5\u5C06\u65B0\u503C\u63D2\u5165\u5230table\u6570\u7EC4\u4E2D</h4><p>\u4ECE\u4E0A\u9762\u7684\u7ED3\u6784\u793A\u610F\u56FE\u5C31\u53EF\u4EE5\u770B\u51FA\u5B58\u5728\u8FD9\u6837\u4E00\u79CD\u60C5\u51B5\uFF0C\u5982\u679C\u63D2\u5165\u503C\u5F85\u63D2\u5165\u7684\u4F4D\u7F6E\u521A\u597D\u6240\u5728\u7684table\u6570\u7EC4\u4E3Anull\u7684\u8BDD\u5C31\u53EF\u4EE5\u76F4\u63A5\u5C06\u503C\u63D2\u5165\u5373\u53EF\u3002\u90A3\u4E48\u600E\u6837\u6839\u636Ehash\u786E\u5B9A\u5728table\u4E2D\u5F85\u63D2\u5165\u7684\u7D22\u5F15i\u5462\uFF1F\u5F88\u663E\u7136\u53EF\u4EE5\u901A\u8FC7hash\u503C\u4E0E\u6570\u7EC4\u7684\u957F\u5EA6\u53D6\u6A21\u64CD\u4F5C\uFF0C\u4ECE\u800C\u786E\u5B9A\u65B0\u503C\u63D2\u5165\u5230\u6570\u7EC4\u7684\u54EA\u4E2A\u4F4D\u7F6E\u3002\u800C\u4E4B\u524D\u6211\u4EEC\u63D0\u8FC7ConcurrentHashMap\u7684\u5927\u5C0F\u603B\u662F2\u7684\u5E42\u6B21\u65B9\uFF0C(n - 1) &amp; hash\u8FD0\u7B97\u7B49\u4EF7\u4E8E\u5BF9\u957F\u5EA6n\u53D6\u6A21\uFF0C\u4E5F\u5C31\u662Fhash%n\uFF0C\u4F46\u662F\u4F4D\u8FD0\u7B97\u6BD4\u53D6\u6A21\u8FD0\u7B97\u7684\u6548\u7387\u8981\u9AD8\u5F88\u591A\uFF0CDoug lea\u5927\u5E08\u5728\u8BBE\u8BA1\u5E76\u53D1\u5BB9\u5668\u7684\u65F6\u5019\u4E5F\u662F\u5C06\u6027\u80FD\u4F18\u5316\u5230\u4E86\u6781\u81F4\uFF0C\u4EE4\u4EBA\u94A6\u4F69\u3002</p><p>\u786E\u5B9A\u597D\u6570\u7EC4\u7684\u7D22\u5F15i\u540E\uFF0C\u5C31\u53EF\u4EE5\u53EF\u4EE5tabAt()\u65B9\u6CD5\uFF08\u8BE5\u65B9\u6CD5\u5728\u4E0A\u9762\u5DF2\u7ECF\u8BF4\u660E\u4E86\uFF0C\u6709\u7591\u95EE\u53EF\u4EE5\u56DE\u8FC7\u5934\u53BB\u770B\u770B\uFF09\u83B7\u53D6\u8BE5\u4F4D\u7F6E\u4E0A\u7684\u5143\u7D20\uFF0C\u5982\u679C\u5F53\u524DNode f\u4E3Anull\u7684\u8BDD\uFF0C\u5C31\u53EF\u4EE5\u76F4\u63A5\u7528casTabAt\u65B9\u6CD5\u5C06\u65B0\u503C\u63D2\u5165\u5373\u53EF\u3002</p><h4 id="_4-\u5F53\u524D\u662F\u5426\u6B63\u5728\u6269\u5BB9" tabindex="-1"><a class="header-anchor" href="#_4-\u5F53\u524D\u662F\u5426\u6B63\u5728\u6269\u5BB9" aria-hidden="true">#</a> 4.\u5F53\u524D\u662F\u5426\u6B63\u5728\u6269\u5BB9</h4><p>\u5982\u679C\u5F53\u524D\u8282\u70B9\u4E0D\u4E3Anull\uFF0C\u4E14\u8BE5\u8282\u70B9\u4E3A\u7279\u6B8A\u8282\u70B9\uFF08forwardingNode\uFF09\u7684\u8BDD\uFF0C\u5C31\u8BF4\u660E\u5F53\u524DconcurrentHashMap\u6B63\u5728\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C\uFF0C\u5173\u4E8E\u6269\u5BB9\u64CD\u4F5C\uFF0C\u4E0B\u9762\u4F1A\u4F5C\u4E3A\u4E00\u4E2A\u5177\u4F53\u7684\u65B9\u6CD5\u8FDB\u884C\u8BB2\u89E3\u3002</p><p>\u90A3\u4E48\u600E\u6837\u786E\u5B9A\u5F53\u524D\u7684\u8FD9\u4E2ANode\u662F\u4E0D\u662F\u7279\u6B8A\u7684\u8282\u70B9\u4E86\uFF1F\u662F\u901A\u8FC7\u5224\u65AD\u8BE5\u8282\u70B9\u7684hash\u503C\u662F\u4E0D\u662F\u7B49\u4E8E-1\uFF08MOVED\uFF09,\u4EE3\u7801\u4E3A<code>(fh = f.hash) == MOVED</code>\uFF0C\u5BF9MOVED\u7684\u89E3\u91CA\u5728\u6E90\u7801\u4E0A\u4E5F\u5199\u7684\u5F88\u6E05\u695A\u4E86\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MOVED     <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// hash for forwarding nodes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-\u5F53table-i-\u4E3A\u94FE\u8868\u7684\u5934\u7ED3\u70B9-\u5728\u94FE\u8868\u4E2D\u63D2\u5165\u65B0\u503C" tabindex="-1"><a class="header-anchor" href="#_5-\u5F53table-i-\u4E3A\u94FE\u8868\u7684\u5934\u7ED3\u70B9-\u5728\u94FE\u8868\u4E2D\u63D2\u5165\u65B0\u503C" aria-hidden="true">#</a> 5. \u5F53table[i]\u4E3A\u94FE\u8868\u7684\u5934\u7ED3\u70B9\uFF0C\u5728\u94FE\u8868\u4E2D\u63D2\u5165\u65B0\u503C</h4><p>\u5728table[i]\u4E0D\u4E3Anull\u5E76\u4E14\u4E0D\u4E3AforwardingNode\u65F6\uFF0C\u5E76\u4E14\u5F53\u524DNode f\u7684hash\u503C\u5927\u4E8E<code>0\uFF08fh &gt;= 0\uFF09</code>\u7684\u8BDD\u8BF4\u660E\u5F53\u524D\u8282\u70B9f\u4E3A\u5F53\u524D\u6876\u7684\u6240\u6709\u7684\u8282\u70B9\u7EC4\u6210\u7684\u94FE\u8868\u7684\u5934\u7ED3\u70B9\u3002\u90A3\u4E48\u63A5\u4E0B\u6765\uFF0C\u8981\u60F3\u5411ConcurrentHashMap\u63D2\u5165\u65B0\u503C\u7684\u8BDD\u5C31\u662F\u5411\u8FD9\u4E2A\u94FE\u8868\u63D2\u5165\u65B0\u503C\u3002\u901A\u8FC7synchronized (f)\u7684\u65B9\u5F0F\u8FDB\u884C\u52A0\u9501\u4EE5\u5B9E\u73B0\u7EBF\u7A0B\u5B89\u5168\u6027\u3002\u5F80\u94FE\u8868\u4E2D\u63D2\u5165\u8282\u70B9\u7684\u90E8\u5206\u4EE3\u7801\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>fh <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    binCount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> f<span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">K</span> ek<span class="token punctuation">;</span>
		<span class="token comment">// \u627E\u5230hash\u503C\u76F8\u540C\u7684key,\u8986\u76D6\u65E7\u503C\u5373\u53EF</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>ek <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span>
             <span class="token punctuation">(</span>ek <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ek<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            oldVal <span class="token operator">=</span> e<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent<span class="token punctuation">)</span>
                e<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pred <span class="token operator">=</span> e<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">//\u5982\u679C\u5230\u94FE\u8868\u672B\u5C3E\u4ECD\u672A\u627E\u5230\uFF0C\u5219\u76F4\u63A5\u5C06\u65B0\u503C\u63D2\u5165\u5230\u94FE\u8868\u672B\u5C3E\u5373\u53EF</span>
            pred<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span>
                                      value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u90E8\u5206\u4EE3\u7801\u5F88\u597D\u7406\u89E3\uFF0C\u5C31\u662F\u4E24\u79CD\u60C5\u51B5\uFF1A1. \u5728\u94FE\u8868\u4E2D\u5982\u679C\u627E\u5230\u4E86\u4E0E\u5F85\u63D2\u5165\u7684\u952E\u503C\u5BF9\u7684key\u76F8\u540C\u7684\u8282\u70B9\uFF0C\u5C31\u76F4\u63A5\u8986\u76D6\u5373\u53EF\uFF1B2. \u5982\u679C\u76F4\u5230\u627E\u5230\u4E86\u94FE\u8868\u7684\u672B\u5C3E\u90FD\u6CA1\u6709\u627E\u5230\u7684\u8BDD\uFF0C\u5C31\u76F4\u63A5\u5C06\u5F85\u63D2\u5165\u7684\u952E\u503C\u5BF9\u8FFD\u52A0\u5230\u94FE\u8868\u7684\u672B\u5C3E\u5373\u53EF</p><h4 id="_6-\u5F53table-i-\u4E3A\u7EA2\u9ED1\u6811\u7684\u6839\u8282\u70B9-\u5728\u7EA2\u9ED1\u6811\u4E2D\u63D2\u5165\u65B0\u503C" tabindex="-1"><a class="header-anchor" href="#_6-\u5F53table-i-\u4E3A\u7EA2\u9ED1\u6811\u7684\u6839\u8282\u70B9-\u5728\u7EA2\u9ED1\u6811\u4E2D\u63D2\u5165\u65B0\u503C" aria-hidden="true">#</a> 6.\u5F53table[i]\u4E3A\u7EA2\u9ED1\u6811\u7684\u6839\u8282\u70B9\uFF0C\u5728\u7EA2\u9ED1\u6811\u4E2D\u63D2\u5165\u65B0\u503C</h4><p>\u6309\u7167\u4E4B\u524D\u7684\u6570\u7EC4+\u94FE\u8868\u7684\u8BBE\u8BA1\u65B9\u6848\uFF0C\u8FD9\u91CC\u5B58\u5728\u4E00\u4E2A\u95EE\u9898\uFF0C\u5373\u4F7F\u8D1F\u8F7D\u56E0\u5B50\u548CHash\u7B97\u6CD5\u8BBE\u8BA1\u7684\u518D\u5408\u7406\uFF0C\u4E5F\u514D\u4E0D\u4E86\u4F1A\u51FA\u73B0\u62C9\u94FE\u8FC7\u957F\u7684\u60C5\u51B5\uFF0C\u4E00\u65E6\u51FA\u73B0\u62C9\u94FE\u8FC7\u957F\uFF0C\u751A\u81F3\u5728\u6781\u7AEF\u60C5\u51B5\u4E0B\uFF0C\u67E5\u627E\u4E00\u4E2A\u8282\u70B9\u4F1A\u51FA\u73B0\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n)\u7684\u60C5\u51B5\uFF0C\u5219\u4F1A\u4E25\u91CD\u5F71\u54CDConcurrentHashMap\u7684\u6027\u80FD\uFF0C\u4E8E\u662F\uFF0C\u5728JDK1.8\u7248\u672C\u4E2D\uFF0C\u5BF9\u6570\u636E\u7ED3\u6784\u505A\u4E86\u8FDB\u4E00\u6B65\u7684\u4F18\u5316\uFF0C\u5F15\u5165\u4E86\u7EA2\u9ED1\u6811\u3002\u800C\u5F53\u94FE\u8868\u957F\u5EA6\u592A\u957F\uFF08\u9ED8\u8BA4\u8D85\u8FC78\uFF09\u65F6\uFF0C\u94FE\u8868\u5C31\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811\uFF0C\u5229\u7528\u7EA2\u9ED1\u6811\u5FEB\u901F\u589E\u5220\u6539\u67E5\u7684\u7279\u70B9\u63D0\u9AD8ConcurrentHashMap\u7684\u6027\u80FD\uFF0C\u5176\u4E2D\u4F1A\u7528\u5230\u7EA2\u9ED1\u6811\u7684\u63D2\u5165\u3001\u5220\u9664\u3001\u67E5\u627E\u7B49\u7B97\u6CD5\u3002\u5F53table[i]\u4E3A\u7EA2\u9ED1\u6811\u7684\u6811\u8282\u70B9\u65F6\u7684\u64CD\u4F5C\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">TreeBin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span>
    binCount <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>f<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span>
                                   value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        oldVal <span class="token operator">=</span> p<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent<span class="token punctuation">)</span>
            p<span class="token punctuation">.</span>val <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u5728if\u4E2D\u901A\u8FC7<code>f instanceof TreeBin</code>\u5224\u65AD\u5F53\u524Dtable[i]\u662F\u5426\u662F\u6811\u8282\u70B9\uFF0C\u8FD9\u4E0B\u4E5F\u6B63\u597D\u9A8C\u8BC1\u4E86\u6211\u4EEC\u5728\u6700\u4E0A\u9762\u4ECB\u7ECD\u65F6\u8BF4\u7684TreeBin\u4F1A\u5BF9TreeNode\u505A\u8FDB\u4E00\u6B65\u5C01\u88C5\uFF0C\u5BF9\u7EA2\u9ED1\u6811\u8FDB\u884C\u64CD\u4F5C\u7684\u65F6\u5019\u9488\u5BF9\u7684\u662FTreeBin\u800C\u4E0D\u662FTreeNode\u3002\u8FD9\u6BB5\u4EE3\u7801\u5F88\u7B80\u5355\uFF0C\u8C03\u7528putTreeVal\u65B9\u6CD5\u5B8C\u6210\u5411\u7EA2\u9ED1\u6811\u63D2\u5165\u65B0\u8282\u70B9\uFF0C\u540C\u6837\u7684\u903B\u8F91\uFF0C<strong>\u5982\u679C\u5728\u7EA2\u9ED1\u6811\u4E2D\u5B58\u5728\u4E8E\u5F85\u63D2\u5165\u952E\u503C\u5BF9\u7684Key\u76F8\u540C\uFF08hash\u503C\u76F8\u7B49\u5E76\u4E14equals\u65B9\u6CD5\u5224\u65AD\u4E3Atrue\uFF09\u7684\u8282\u70B9\u7684\u8BDD\uFF0C\u5C31\u8986\u76D6\u65E7\u503C\uFF0C\u5426\u5219\u5C31\u5411\u7EA2\u9ED1\u6811\u8FFD\u52A0\u65B0\u8282\u70B9</strong>\u3002</p><h4 id="_7-\u6839\u636E\u5F53\u524D\u8282\u70B9\u4E2A\u6570\u8FDB\u884C\u8C03\u6574" tabindex="-1"><a class="header-anchor" href="#_7-\u6839\u636E\u5F53\u524D\u8282\u70B9\u4E2A\u6570\u8FDB\u884C\u8C03\u6574" aria-hidden="true">#</a> 7. \u6839\u636E\u5F53\u524D\u8282\u70B9\u4E2A\u6570\u8FDB\u884C\u8C03\u6574</h4><p>\u5F53\u5B8C\u6210\u6570\u636E\u65B0\u8282\u70B9\u63D2\u5165\u4E4B\u540E\uFF0C\u4F1A\u8FDB\u4E00\u6B65\u5BF9\u5F53\u524D\u94FE\u8868\u5927\u5C0F\u8FDB\u884C\u8C03\u6574\uFF0C\u8FD9\u90E8\u5206\u4EE3\u7801\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> TREEIFY_THRESHOLD<span class="token punctuation">)</span>
        <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVal <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> oldVal<span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F88\u5BB9\u6613\u7406\u89E3\uFF0C\u5982\u679C\u5F53\u524D\u94FE\u8868\u8282\u70B9\u4E2A\u6570\u5927\u4E8E\u7B49\u4E8E8\uFF08TREEIFY_THRESHOLD\uFF09\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u8C03\u7528treeifyBin\u65B9\u6CD5\u5C06tabel[i]\uFF08\u7B2Ci\u4E2A\u6563\u5217\u6876\uFF09\u62C9\u94FE\u8F6C\u6362\u6210\u7EA2\u9ED1\u6811\u3002</p><p>\u81F3\u6B64\uFF0C\u5173\u4E8EPut\u65B9\u6CD5\u7684\u903B\u8F91\u5C31\u57FA\u672C\u8BF4\u7684\u5DEE\u4E0D\u591A\u4E86\uFF0C\u73B0\u5728\u6765\u505A\u4E00\u4E9B\u603B\u7ED3\uFF1A</p><p>\u6574\u4F53\u6D41\u7A0B\uFF1A</p><ol><li>\u9996\u5148\u5BF9\u4E8E\u6BCF\u4E00\u4E2A\u653E\u5165\u7684\u503C\uFF0C\u9996\u5148\u5229\u7528spread\u65B9\u6CD5\u5BF9key\u7684hashcode\u8FDB\u884C\u4E00\u6B21hash\u8BA1\u7B97\uFF0C\u7531\u6B64\u6765\u786E\u5B9A\u8FD9\u4E2A\u503C\u5728 table\u4E2D\u7684\u4F4D\u7F6E\uFF1B</li><li>\u5982\u679C\u5F53\u524Dtable\u6570\u7EC4\u8FD8\u672A\u521D\u59CB\u5316\uFF0C\u5148\u5C06table\u6570\u7EC4\u8FDB\u884C\u521D\u59CB\u5316\u64CD\u4F5C\uFF1B</li><li>\u5982\u679C\u8FD9\u4E2A\u4F4D\u7F6E\u662Fnull\u7684\uFF0C\u90A3\u4E48\u4F7F\u7528CAS\u64CD\u4F5C\u76F4\u63A5\u653E\u5165\uFF1B</li><li>\u5982\u679C\u8FD9\u4E2A\u4F4D\u7F6E\u5B58\u5728\u7ED3\u70B9\uFF0C\u8BF4\u660E\u53D1\u751F\u4E86hash\u78B0\u649E\uFF0C\u9996\u5148\u5224\u65AD\u8FD9\u4E2A\u8282\u70B9\u7684\u7C7B\u578B\u3002\u5982\u679C\u8BE5\u8282\u70B9fh==MOVED(\u4EE3\u8868forwardingNode,\u6570\u7EC4\u6B63\u5728\u8FDB\u884C\u6269\u5BB9)\u7684\u8BDD\uFF0C\u8BF4\u660E\u6B63\u5728\u8FDB\u884C\u6269\u5BB9\uFF1B</li><li>\u5982\u679C\u662F\u94FE\u8868\u8282\u70B9\uFF08fh&gt;0\uFF09,\u5219\u5F97\u5230\u7684\u7ED3\u70B9\u5C31\u662Fhash\u503C\u76F8\u540C\u7684\u8282\u70B9\u7EC4\u6210\u7684\u94FE\u8868\u7684\u5934\u8282\u70B9\u3002\u9700\u8981\u4F9D\u6B21\u5411\u540E\u904D\u5386\u786E\u5B9A\u8FD9\u4E2A\u65B0\u52A0\u5165\u7684\u503C\u6240\u5728\u4F4D\u7F6E\u3002\u5982\u679C\u9047\u5230key\u76F8\u540C\u7684\u8282\u70B9\uFF0C\u5219\u53EA\u9700\u8981\u8986\u76D6\u8BE5\u7ED3\u70B9\u7684value\u503C\u5373\u53EF\u3002\u5426\u5219\u4F9D\u6B21\u5411\u540E\u904D\u5386\uFF0C\u76F4\u5230\u94FE\u8868\u5C3E\u63D2\u5165\u8FD9\u4E2A\u7ED3\u70B9\uFF1B</li><li>\u5982\u679C\u8FD9\u4E2A\u8282\u70B9\u7684\u7C7B\u578B\u662FTreeBin\u7684\u8BDD\uFF0C\u76F4\u63A5\u8C03\u7528\u7EA2\u9ED1\u6811\u7684\u63D2\u5165\u65B9\u6CD5\u8FDB\u884C\u63D2\u5165\u65B0\u7684\u8282\u70B9\uFF1B</li><li>\u63D2\u5165\u5B8C\u8282\u70B9\u4E4B\u540E\u518D\u6B21\u68C0\u67E5\u94FE\u8868\u957F\u5EA6\uFF0C\u5982\u679C\u957F\u5EA6\u5927\u4E8E8\uFF0C\u5C31\u628A\u8FD9\u4E2A\u94FE\u8868\u8F6C\u6362\u6210\u7EA2\u9ED1\u6811\uFF1B</li><li>\u5BF9\u5F53\u524D\u5BB9\u91CF\u5927\u5C0F\u8FDB\u884C\u68C0\u67E5\uFF0C\u5982\u679C\u8D85\u8FC7\u4E86\u4E34\u754C\u503C\uFF08\u5B9E\u9645\u5927\u5C0F*\u52A0\u8F7D\u56E0\u5B50\uFF09\u5C31\u9700\u8981\u6269\u5BB9\u3002</li></ol><h3 id="get\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#get\u65B9\u6CD5" aria-hidden="true">#</a> get\u65B9\u6CD5</h3><p>\u770B\u5B8C\u4E86put\u65B9\u6CD5\u518D\u6765\u770Bget\u65B9\u6CD5\u5C31\u5F88\u5BB9\u6613\u4E86\uFF0C\u7528\u9006\u5411\u601D\u7EF4\u53BB\u770B\u5C31\u597D\uFF0C\u8FD9\u6837\u5B58\u7684\u8BDD\u6211\u53CD\u8FC7\u6765\u8FD9\u4E48\u53D6\u5C31\u597D\u4E86\u3002get\u65B9\u6CD5\u6E90\u7801\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">,</span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> eh<span class="token punctuation">;</span> <span class="token class-name">K</span> ek<span class="token punctuation">;</span>
	<span class="token comment">// 1. \u91CDhash</span>
    <span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token function">spread</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
        <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 2. table[i]\u6876\u8282\u70B9\u7684key\u4E0E\u67E5\u627E\u7684key\u76F8\u540C\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>eh <span class="token operator">=</span> e<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">==</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ek <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>ek <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ek<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> e<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
		<span class="token comment">// 3. \u5F53\u524D\u8282\u70B9hash\u5C0F\u4E8E0\u8BF4\u660E\u4E3A\u6811\u8282\u70B9\uFF0C\u5728\u7EA2\u9ED1\u6811\u4E2D\u67E5\u627E\u5373\u53EF</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>eh <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> p<span class="token punctuation">.</span>val <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//4. \u4ECE\u94FE\u8868\u4E2D\u67E5\u627E\uFF0C\u67E5\u627E\u5230\u5219\u8FD4\u56DE\u8BE5\u8282\u70B9\u7684value\uFF0C\u5426\u5219\u5C31\u8FD4\u56DEnull\u5373\u53EF</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> h <span class="token operator">&amp;&amp;</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span>ek <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>ek <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ek<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> e<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u7684\u903B\u8F91\u8BF7\u770B\u6CE8\u91CA\uFF0C\u9996\u5148\u5148\u770B\u5F53\u524D\u7684hash\u6876\u6570\u7EC4\u8282\u70B9\u5373table[i]\u662F\u5426\u4E3A\u67E5\u627E\u7684\u8282\u70B9\uFF0C\u82E5\u662F\u5219\u76F4\u63A5\u8FD4\u56DE\uFF1B\u82E5\u4E0D\u662F\uFF0C\u5219\u7EE7\u7EED\u518D\u770B\u5F53\u524D\u662F\u4E0D\u662F\u6811\u8282\u70B9\uFF1F\u901A\u8FC7\u770B\u8282\u70B9\u7684hash\u503C\u662F\u5426\u4E3A\u5C0F\u4E8E0\uFF0C\u5982\u679C\u5C0F\u4E8E0\u5219\u4E3A\u6811\u8282\u70B9\u3002\u5982\u679C\u662F\u6811\u8282\u70B9\u5728\u7EA2\u9ED1\u6811\u4E2D\u67E5\u627E\u8282\u70B9\uFF1B\u5982\u679C\u4E0D\u662F\u6811\u8282\u70B9\uFF0C\u90A3\u5C31\u53EA\u5269\u4E0B\u4E3A\u94FE\u8868\u7684\u5F62\u5F0F\u7684\u4E00\u79CD\u53EF\u80FD\u6027\u4E86\uFF0C\u5C31\u5411\u540E\u904D\u5386\u67E5\u627E\u8282\u70B9\uFF0C\u82E5\u67E5\u627E\u5230\u5219\u8FD4\u56DE\u8282\u70B9\u7684value\u5373\u53EF\uFF0C\u82E5\u6CA1\u6709\u627E\u5230\u5C31\u8FD4\u56DEnull\u3002</p><h3 id="transfer\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#transfer\u65B9\u6CD5" aria-hidden="true">#</a> transfer\u65B9\u6CD5</h3><p>\u5F53ConcurrentHashMap\u5BB9\u91CF\u4E0D\u8DB3\u7684\u65F6\u5019\uFF0C\u9700\u8981\u5BF9table\u8FDB\u884C\u6269\u5BB9\u3002\u8FD9\u4E2A\u65B9\u6CD5\u7684\u57FA\u672C\u601D\u60F3\u8DDFHashMap\u662F\u5F88\u50CF\u7684\uFF0C\u4F46\u662F\u7531\u4E8E\u5B83\u662F\u652F\u6301\u5E76\u53D1\u6269\u5BB9\u7684\uFF0C\u6240\u4EE5\u8981\u590D\u6742\u7684\u591A\u3002\u539F\u56E0\u662F\u5B83\u652F\u6301\u591A\u7EBF\u7A0B\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C\uFF0C\u800C\u5E76\u6CA1\u6709\u52A0\u9501\u3002\u6211\u60F3\u8FD9\u6837\u505A\u7684\u76EE\u7684\u4E0D\u4EC5\u4EC5\u662F\u4E3A\u4E86\u6EE1\u8DB3concurrent\u7684\u8981\u6C42\uFF0C\u800C\u662F\u5E0C\u671B\u5229\u7528\u5E76\u53D1\u5904\u7406\u53BB\u51CF\u5C11\u6269\u5BB9\u5E26\u6765\u7684\u65F6\u95F4\u5F71\u54CD\u3002transfer\u65B9\u6CD5\u6E90\u7801\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nextTab<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">,</span> stride<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>stride <span class="token operator">=</span> <span class="token punctuation">(</span>NCPU <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">/</span> NCPU <span class="token operator">:</span> n<span class="token punctuation">)</span> <span class="token operator">&lt;</span> MIN_TRANSFER_STRIDE<span class="token punctuation">)</span>
        stride <span class="token operator">=</span> MIN_TRANSFER_STRIDE<span class="token punctuation">;</span> <span class="token comment">// subdivide range</span>
	<span class="token comment">//1. \u65B0\u5EFANode\u6570\u7EC4\uFF0C\u5BB9\u91CF\u4E3A\u4E4B\u524D\u7684\u4E24\u500D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nextTab <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// initiating</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nt <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            nextTab <span class="token operator">=</span> nt<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment">// try to cope with OOME</span>
            sizeCtl <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        nextTable <span class="token operator">=</span> nextTab<span class="token punctuation">;</span>
        transferIndex <span class="token operator">=</span> n<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> nextn <span class="token operator">=</span> nextTab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
	<span class="token comment">//2. \u65B0\u5EFAforwardingNode\u5F15\u7528\uFF0C\u5728\u4E4B\u540E\u4F1A\u7528\u5230</span>
    <span class="token class-name">ForwardingNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> fwd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForwardingNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>nextTab<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> advance <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> finishing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// to ensure sweep before committing nextTab</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> bound <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> f<span class="token punctuation">;</span> <span class="token keyword">int</span> fh<span class="token punctuation">;</span>
        <span class="token comment">// 3. \u786E\u5B9A\u904D\u5386\u4E2D\u7684\u7D22\u5F15i</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>advance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> nextIndex<span class="token punctuation">,</span> nextBound<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">--</span>i <span class="token operator">&gt;=</span> bound <span class="token operator">||</span> finishing<span class="token punctuation">)</span>
                advance <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>nextIndex <span class="token operator">=</span> transferIndex<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                i <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                advance <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span>compareAndSwapInt
                     <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> TRANSFERINDEX<span class="token punctuation">,</span> nextIndex<span class="token punctuation">,</span>
                      nextBound <span class="token operator">=</span> <span class="token punctuation">(</span>nextIndex <span class="token operator">&gt;</span> stride <span class="token operator">?</span>
                                   nextIndex <span class="token operator">-</span> stride <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                bound <span class="token operator">=</span> nextBound<span class="token punctuation">;</span>
                i <span class="token operator">=</span> nextIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
                advance <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
		<span class="token comment">//4.\u5C06\u539F\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u590D\u5236\u5230\u65B0\u6570\u7EC4\u4E2D\u53BB</span>
		<span class="token comment">//4.5 for\u5FAA\u73AF\u9000\u51FA\uFF0C\u6269\u5BB9\u7ED3\u675F\u4FEE\u6539sizeCtl\u5C5E\u6027</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">&gt;=</span> n <span class="token operator">||</span> i <span class="token operator">+</span> n <span class="token operator">&gt;=</span> nextn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> sc<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>finishing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                nextTable <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                table <span class="token operator">=</span> nextTab<span class="token punctuation">;</span>
                sizeCtl <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc <span class="token operator">=</span> sizeCtl<span class="token punctuation">,</span> sc <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sc <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token function">resizeStamp</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> RESIZE_STAMP_SHIFT<span class="token punctuation">)</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                finishing <span class="token operator">=</span> advance <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                i <span class="token operator">=</span> n<span class="token punctuation">;</span> <span class="token comment">// recheck before commit</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
		<span class="token comment">//4.1 \u5F53\u524D\u6570\u7EC4\u4E2D\u7B2Ci\u4E2A\u5143\u7D20\u4E3Anull\uFF0C\u7528CAS\u8BBE\u7F6E\u6210\u7279\u6B8A\u8282\u70B9forwardingNode(\u53EF\u4EE5\u7406\u89E3\u6210\u5360\u4F4D\u7B26)</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>f <span class="token operator">=</span> <span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            advance <span class="token operator">=</span> <span class="token function">casTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> fwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//4.2 \u5982\u679C\u904D\u5386\u5230ForwardingNode\u8282\u70B9  \u8BF4\u660E\u8FD9\u4E2A\u70B9\u5DF2\u7ECF\u88AB\u5904\u7406\u8FC7\u4E86 \u76F4\u63A5\u8DF3\u8FC7  \u8FD9\u91CC\u662F\u63A7\u5236\u5E76\u53D1\u6269\u5BB9\u7684\u6838\u5FC3</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fh <span class="token operator">=</span> f<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">==</span> MOVED<span class="token punctuation">)</span>
            advance <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// already processed</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">==</span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> ln<span class="token punctuation">,</span> hn<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>fh <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token comment">//4.3 \u5904\u7406\u5F53\u524D\u8282\u70B9\u4E3A\u94FE\u8868\u7684\u5934\u7ED3\u70B9\u7684\u60C5\u51B5\uFF0C\u6784\u9020\u4E24\u4E2A\u94FE\u8868\uFF0C\u4E00\u4E2A\u662F\u539F\u94FE\u8868  \u53E6\u4E00\u4E2A\u662F\u539F\u94FE\u8868\u7684\u53CD\u5E8F\u6392\u5217</span>
                        <span class="token keyword">int</span> runBit <span class="token operator">=</span> fh <span class="token operator">&amp;</span> n<span class="token punctuation">;</span>
                        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> lastRun <span class="token operator">=</span> f<span class="token punctuation">;</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> f<span class="token punctuation">.</span>next<span class="token punctuation">;</span> p <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">int</span> b <span class="token operator">=</span> p<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> n<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">!=</span> runBit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                runBit <span class="token operator">=</span> b<span class="token punctuation">;</span>
                                lastRun <span class="token operator">=</span> p<span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>runBit <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            ln <span class="token operator">=</span> lastRun<span class="token punctuation">;</span>
                            hn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            hn <span class="token operator">=</span> lastRun<span class="token punctuation">;</span>
                            ln <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> f<span class="token punctuation">;</span> p <span class="token operator">!=</span> lastRun<span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">int</span> ph <span class="token operator">=</span> p<span class="token punctuation">.</span>hash<span class="token punctuation">;</span> <span class="token class-name">K</span> pk <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">;</span> <span class="token class-name">V</span> pv <span class="token operator">=</span> p<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ph <span class="token operator">&amp;</span> n<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                                ln <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>ph<span class="token punctuation">,</span> pk<span class="token punctuation">,</span> pv<span class="token punctuation">,</span> ln<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">else</span>
                                hn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>ph<span class="token punctuation">,</span> pk<span class="token punctuation">,</span> pv<span class="token punctuation">,</span> hn<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                       <span class="token comment">//\u5728nextTable\u7684i\u4F4D\u7F6E\u4E0A\u63D2\u5165\u4E00\u4E2A\u94FE\u8868</span>
                         <span class="token function">setTabAt</span><span class="token punctuation">(</span>nextTab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> ln<span class="token punctuation">)</span><span class="token punctuation">;</span>
                         <span class="token comment">//\u5728nextTable\u7684i+n\u7684\u4F4D\u7F6E\u4E0A\u63D2\u5165\u53E6\u4E00\u4E2A\u94FE\u8868</span>
                         <span class="token function">setTabAt</span><span class="token punctuation">(</span>nextTab<span class="token punctuation">,</span> i <span class="token operator">+</span> n<span class="token punctuation">,</span> hn<span class="token punctuation">)</span><span class="token punctuation">;</span>
                         <span class="token comment">//\u5728table\u7684i\u4F4D\u7F6E\u4E0A\u63D2\u5165forwardNode\u8282\u70B9  \u8868\u793A\u5DF2\u7ECF\u5904\u7406\u8FC7\u8BE5\u8282\u70B9</span>
                         <span class="token function">setTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> fwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
                         <span class="token comment">//\u8BBE\u7F6Eadvance\u4E3Atrue \u8FD4\u56DE\u5230\u4E0A\u9762\u7684while\u5FAA\u73AF\u4E2D \u5C31\u53EF\u4EE5\u6267\u884Ci--\u64CD\u4F5C</span>
                         advance <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
					<span class="token comment">//4.4 \u5904\u7406\u5F53\u524D\u8282\u70B9\u662FTreeBin\u65F6\u7684\u60C5\u51B5\uFF0C\u64CD\u4F5C\u548C\u4E0A\u9762\u7684\u7C7B\u4F3C</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">TreeBin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>f<span class="token punctuation">;</span>
                        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> lo <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hi <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> hiTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token keyword">int</span> lc <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> hc <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> t<span class="token punctuation">.</span>first<span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">int</span> h <span class="token operator">=</span> e<span class="token punctuation">.</span>hash<span class="token punctuation">;</span>
                            <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span>
                                <span class="token punctuation">(</span>h<span class="token punctuation">,</span> e<span class="token punctuation">.</span>key<span class="token punctuation">,</span> e<span class="token punctuation">.</span>val<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>h <span class="token operator">&amp;</span> n<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>prev <span class="token operator">=</span> loTail<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                    lo <span class="token operator">=</span> p<span class="token punctuation">;</span>
                                <span class="token keyword">else</span>
                                    loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
                                loTail <span class="token operator">=</span> p<span class="token punctuation">;</span>
                                <span class="token operator">++</span>lc<span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>prev <span class="token operator">=</span> hiTail<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                    hi <span class="token operator">=</span> p<span class="token punctuation">;</span>
                                <span class="token keyword">else</span>
                                    hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
                                hiTail <span class="token operator">=</span> p<span class="token punctuation">;</span>
                                <span class="token operator">++</span>hc<span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                        ln <span class="token operator">=</span> <span class="token punctuation">(</span>lc <span class="token operator">&lt;=</span> UNTREEIFY_THRESHOLD<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">untreeify</span><span class="token punctuation">(</span>lo<span class="token punctuation">)</span> <span class="token operator">:</span>
                            <span class="token punctuation">(</span>hc <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>lo<span class="token punctuation">)</span> <span class="token operator">:</span> t<span class="token punctuation">;</span>
                        hn <span class="token operator">=</span> <span class="token punctuation">(</span>hc <span class="token operator">&lt;=</span> UNTREEIFY_THRESHOLD<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">untreeify</span><span class="token punctuation">(</span>hi<span class="token punctuation">)</span> <span class="token operator">:</span>
                            <span class="token punctuation">(</span>lc <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">TreeBin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hi<span class="token punctuation">)</span> <span class="token operator">:</span> t<span class="token punctuation">;</span>
                        <span class="token function">setTabAt</span><span class="token punctuation">(</span>nextTab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> ln<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">setTabAt</span><span class="token punctuation">(</span>nextTab<span class="token punctuation">,</span> i <span class="token operator">+</span> n<span class="token punctuation">,</span> hn<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">setTabAt</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">,</span> fwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        advance <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u903B\u8F91\u8BF7\u770B\u6CE8\u91CA,\u6574\u4E2A\u6269\u5BB9\u64CD\u4F5C\u5206\u4E3A<strong>\u4E24\u4E2A\u90E8\u5206</strong>\uFF1A</p><p><strong>\u7B2C\u4E00\u90E8\u5206</strong>\u662F\u6784\u5EFA\u4E00\u4E2AnextTable,\u5B83\u7684\u5BB9\u91CF\u662F\u539F\u6765\u7684\u4E24\u500D\uFF0C\u8FD9\u4E2A\u64CD\u4F5C\u662F\u5355\u7EBF\u7A0B\u5B8C\u6210\u7684\u3002\u65B0\u5EFAtable\u6570\u7EC4\u7684\u4EE3\u7801\u4E3A:<code>Node&lt;K,V&gt;[] nt = (Node&lt;K,V&gt;[])new Node&lt;?,?&gt;[n &lt;&lt; 1]</code>,\u5728\u539F\u5BB9\u91CF\u5927\u5C0F\u7684\u57FA\u7840\u4E0A\u53F3\u79FB\u4E00\u4F4D\u3002</p><p><strong>\u7B2C\u4E8C\u4E2A\u90E8\u5206</strong>\u5C31\u662F\u5C06\u539F\u6765table\u4E2D\u7684\u5143\u7D20\u590D\u5236\u5230nextTable\u4E2D\uFF0C\u4E3B\u8981\u662F\u904D\u5386\u590D\u5236\u7684\u8FC7\u7A0B\u3002 \u6839\u636E\u8FD0\u7B97\u5F97\u5230\u5F53\u524D\u904D\u5386\u7684\u6570\u7EC4\u7684\u4F4D\u7F6Ei\uFF0C\u7136\u540E\u5229\u7528tabAt\u65B9\u6CD5\u83B7\u5F97i\u4F4D\u7F6E\u7684\u5143\u7D20\u518D\u8FDB\u884C\u5224\u65AD\uFF1A</p><ol><li>\u5982\u679C\u8FD9\u4E2A\u4F4D\u7F6E\u4E3A\u7A7A\uFF0C\u5C31\u5728\u539Ftable\u4E2D\u7684i\u4F4D\u7F6E\u653E\u5165forwardNode\u8282\u70B9\uFF0C\u8FD9\u4E2A\u4E5F\u662F\u89E6\u53D1\u5E76\u53D1\u6269\u5BB9\u7684\u5173\u952E\u70B9\uFF1B</li><li>\u5982\u679C\u8FD9\u4E2A\u4F4D\u7F6E\u662FNode\u8282\u70B9\uFF08fh&gt;=0\uFF09\uFF0C\u5982\u679C\u5B83\u662F\u4E00\u4E2A\u94FE\u8868\u7684\u5934\u8282\u70B9\uFF0C\u5C31\u6784\u9020\u4E00\u4E2A\u53CD\u5E8F\u94FE\u8868\uFF0C\u628A\u4ED6\u4EEC\u5206\u522B\u653E\u5728nextTable\u7684i\u548Ci+n\u7684\u4F4D\u7F6E\u4E0A</li><li>\u5982\u679C\u8FD9\u4E2A\u4F4D\u7F6E\u662FTreeBin\u8282\u70B9\uFF08fh&lt;0\uFF09\uFF0C\u4E5F\u505A\u4E00\u4E2A\u53CD\u5E8F\u5904\u7406\uFF0C\u5E76\u4E14\u5224\u65AD\u662F\u5426\u9700\u8981untreefi\uFF0C\u628A\u5904\u7406\u7684\u7ED3\u679C\u5206\u522B\u653E\u5728nextTable\u7684i\u548Ci+n\u7684\u4F4D\u7F6E\u4E0A</li><li>\u904D\u5386\u8FC7\u6240\u6709\u7684\u8282\u70B9\u4EE5\u540E\u5C31\u5B8C\u6210\u4E86\u590D\u5236\u5DE5\u4F5C\uFF0C\u8FD9\u65F6\u8BA9nextTable\u4F5C\u4E3A\u65B0\u7684table\uFF0C\u5E76\u4E14\u66F4\u65B0sizeCtl\u4E3A\u65B0\u5BB9\u91CF\u76840.75\u500D \uFF0C\u5B8C\u6210\u6269\u5BB9\u3002\u8BBE\u7F6E\u4E3A\u65B0\u5BB9\u91CF\u76840.75\u500D\u4EE3\u7801\u4E3A <code>sizeCtl = (n &lt;&lt; 1) - (n &gt;&gt;&gt; 1)</code>\uFF0C\u4ED4\u7EC6\u4F53\u4F1A\u4E0B\u662F\u4E0D\u662F\u5F88\u5DE7\u5999\uFF0Cn&lt;&lt;1\u76F8\u5F53\u4E8En\u53F3\u79FB\u4E00\u4F4D\u8868\u793An\u7684\u4E24\u500D\u53732n,n&gt;&gt;&gt;1\u5DE6\u53F3\u4E00\u4F4D\u76F8\u5F53\u4E8En\u9664\u4EE52\u53730.5n,\u7136\u540E\u4E24\u8005\u76F8\u51CF\u4E3A2n-0.5n=1.5n,\u662F\u4E0D\u662F\u521A\u597D\u7B49\u4E8E\u65B0\u5BB9\u91CF\u76840.75\u500D\u53732n*0.75=1.5n\u3002\u6700\u540E\u7528\u4E00\u4E2A\u793A\u610F\u56FE\u6765\u8FDB\u884C\u603B\u7ED3\uFF08\u56FE\u7247\u6458\u81EA\u7F51\u7EDC\uFF09\uFF1A</li></ol><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/thread/ConcurrentHashMap-02.png" alt="ConcurrentHashMap\u6269\u5BB9\u793A\u610F\u56FE" loading="lazy"></p><h3 id="\u4E0Esize\u76F8\u5173\u7684\u4E00\u4E9B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E0Esize\u76F8\u5173\u7684\u4E00\u4E9B\u65B9\u6CD5" aria-hidden="true">#</a> \u4E0Esize\u76F8\u5173\u7684\u4E00\u4E9B\u65B9\u6CD5</h3><p>\u5BF9\u4E8EConcurrentHashMap\u6765\u8BF4\uFF0C\u8FD9\u4E2Atable\u91CC\u5230\u5E95\u88C5\u4E86\u591A\u5C11\u4E1C\u897F\u5176\u5B9E\u662F\u4E2A\u4E0D\u786E\u5B9A\u7684\u6570\u91CF\uFF0C\u56E0\u4E3A<strong>\u4E0D\u53EF\u80FD\u5728\u8C03\u7528size()\u65B9\u6CD5\u7684\u65F6\u5019\u50CFGC\u7684\u201Cstop the world\u201D\u4E00\u6837\u8BA9\u5176\u4ED6\u7EBF\u7A0B\u90FD\u505C\u4E0B\u6765\u8BA9\u4F60\u53BB\u7EDF\u8BA1\uFF0C\u56E0\u6B64\u53EA\u80FD\u8BF4\u8FD9\u4E2A\u6570\u91CF\u662F\u4E2A\u4F30\u8BA1\u503C\u3002\u5BF9\u4E8E\u8FD9\u4E2A\u4F30\u8BA1\u503C</strong>\uFF0CConcurrentHashMap\u4E5F\u662F\u5927\u8D39\u5468\u7AE0\u624D\u8BA1\u7B97\u51FA\u6765\u7684\u3002</p><p>\u4E3A\u4E86\u7EDF\u8BA1\u5143\u7D20\u4E2A\u6570\uFF0CConcurrentHashMap\u5B9A\u4E49\u4E86\u4E00\u4E9B\u53D8\u91CF\u548C\u4E00\u4E2A\u5185\u90E8\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * A padded cell for distributing counts.  Adapted from LongAdder
 * and Striped64.  See their internal docs for explanation.
 */</span>
<span class="token annotation punctuation">@sun.misc.Contended</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">CounterCell</span> <span class="token punctuation">{</span>
    <span class="token keyword">volatile</span> <span class="token keyword">long</span> value<span class="token punctuation">;</span>
    <span class="token class-name">CounterCell</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> value <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/******************************************/</span> 

<span class="token doc-comment comment">/**
 * \u5B9E\u9645\u4E0A\u4FDD\u5B58\u7684\u662Fhashmap\u4E2D\u7684\u5143\u7D20\u4E2A\u6570  \u5229\u7528CAS\u9501\u8FDB\u884C\u66F4\u65B0
 \u4F46\u5B83\u5E76\u4E0D\u7528\u8FD4\u56DE\u5F53\u524Dhashmap\u7684\u5143\u7D20\u4E2A\u6570 

 */</span>
<span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">long</span> baseCount<span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * Spinlock (locked via CAS) used when resizing and/or creating CounterCells.
 */</span>
<span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> cellsBusy<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Table of counter cells. When non-null, size is a power of 2.
 */</span>
<span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">CounterCell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> counterCells<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="mappingcount\u4E0Esize\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#mappingcount\u4E0Esize\u65B9\u6CD5" aria-hidden="true">#</a> <strong>mappingCount\u4E0Esize\u65B9\u6CD5</strong></h4><p><strong>mappingCount</strong>\u4E0E<strong>size</strong>\u65B9\u6CD5\u7684\u7C7B\u4F3C \u4ECE\u7ED9\u51FA\u7684\u6CE8\u91CA\u6765\u770B\uFF0C\u5E94\u8BE5\u4F7F\u7528mappingCount\u4EE3\u66FFsize\u65B9\u6CD5 \u4E24\u4E2A\u65B9\u6CD5\u90FD\u6CA1\u6709\u76F4\u63A5\u8FD4\u56DEbasecount \u800C\u662F\u7EDF\u8BA1\u4E00\u6B21\u8FD9\u4E2A\u503C\uFF0C\u800C\u8FD9\u4E2A\u503C\u5176\u5B9E\u4E5F\u662F\u4E00\u4E2A\u5927\u6982\u7684\u6570\u503C\uFF0C\u56E0\u6B64\u53EF\u80FD\u5728\u7EDF\u8BA1\u7684\u65F6\u5019\u6709\u5176\u4ED6\u7EBF\u7A0B\u6B63\u5728\u6267\u884C\u63D2\u5165\u6216\u5220\u9664\u64CD\u4F5C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> n <span class="token operator">=</span> <span class="token function">sumCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span>
            <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">:</span>
            <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 <span class="token doc-comment comment">/**
 * Returns the number of mappings. This method should be used
 * instead of <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">size</span></span><span class="token punctuation">}</span> because a ConcurrentHashMap may
 * contain more mappings than can be represented as an int. The
 * value returned is an estimate; the actual count may differ if
 * there are concurrent insertions or removals.
 *
 * <span class="token keyword">@return</span> the number of mappings
 * <span class="token keyword">@since</span> 1.8
 */</span>
<span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">mappingCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> n <span class="token operator">=</span> <span class="token function">sumCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0L</span> <span class="token operator">:</span> n<span class="token punctuation">;</span> <span class="token comment">// ignore transient negative values</span>
<span class="token punctuation">}</span>

 <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token function">sumCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">CounterCell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as <span class="token operator">=</span> counterCells<span class="token punctuation">;</span> <span class="token class-name">CounterCell</span> a<span class="token punctuation">;</span>
    <span class="token keyword">long</span> sum <span class="token operator">=</span> baseCount<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> as<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                sum <span class="token operator">+=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">;</span><span class="token comment">//\u6240\u6709counter\u7684\u503C\u6C42\u548C</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="addcount\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#addcount\u65B9\u6CD5" aria-hidden="true">#</a> <strong>addCount\u65B9\u6CD5</strong></h4><p>\u5728put\u65B9\u6CD5\u7ED3\u5C3E\u5904\u8C03\u7528\u4E86addCount\u65B9\u6CD5\uFF0C\u628A\u5F53\u524DConcurrentHashMap\u7684\u5143\u7D20\u4E2A\u6570+1\u8FD9\u4E2A\u65B9\u6CD5\u4E00\u5171\u505A\u4E86\u4E24\u4EF6\u4E8B,\u66F4\u65B0baseCount\u7684\u503C\uFF0C\u68C0\u6D4B\u662F\u5426\u8FDB\u884C\u6269\u5BB9\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">addCount</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> check<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">CounterCell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> as<span class="token punctuation">;</span> <span class="token keyword">long</span> b<span class="token punctuation">,</span> s<span class="token punctuation">;</span>
    <span class="token comment">//\u5229\u7528CAS\u65B9\u6CD5\u66F4\u65B0baseCount\u7684\u503C </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>as <span class="token operator">=</span> counterCells<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span>
        <span class="token operator">!</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> BASECOUNT<span class="token punctuation">,</span> b <span class="token operator">=</span> baseCount<span class="token punctuation">,</span> s <span class="token operator">=</span> b <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CounterCell</span> a<span class="token punctuation">;</span> <span class="token keyword">long</span> v<span class="token punctuation">;</span> <span class="token keyword">int</span> m<span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> uncontended <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>as <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> as<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
            <span class="token punctuation">(</span>a <span class="token operator">=</span> as<span class="token punctuation">[</span><span class="token class-name">ThreadLocalRandom</span><span class="token punctuation">.</span><span class="token function">getProbe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> m<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span>
            <span class="token operator">!</span><span class="token punctuation">(</span>uncontended <span class="token operator">=</span>
              <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> CELLVALUE<span class="token punctuation">,</span> v <span class="token operator">=</span> a<span class="token punctuation">.</span>value<span class="token punctuation">,</span> v <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">fullAddCount</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> uncontended<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>check <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        s <span class="token operator">=</span> <span class="token function">sumCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u5982\u679Ccheck\u503C\u5927\u4E8E\u7B49\u4E8E0 \u5219\u9700\u8981\u68C0\u9A8C\u662F\u5426\u9700\u8981\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>check <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> nt<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> sc<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>s <span class="token operator">&gt;=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">(</span>sc <span class="token operator">=</span> sizeCtl<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
               <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&lt;</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">resizeStamp</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>sc <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sc <span class="token operator">&gt;&gt;&gt;</span> RESIZE_STAMP_SHIFT<span class="token punctuation">)</span> <span class="token operator">!=</span> rs <span class="token operator">||</span> sc <span class="token operator">==</span> rs <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">||</span>
                    sc <span class="token operator">==</span> rs <span class="token operator">+</span> MAX_RESIZERS <span class="token operator">||</span> <span class="token punctuation">(</span>nt <span class="token operator">=</span> nextTable<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span>
                    transferIndex <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                 <span class="token comment">//\u5982\u679C\u5DF2\u7ECF\u6709\u5176\u4ED6\u7EBF\u7A0B\u5728\u6267\u884C\u6269\u5BB9\u64CD\u4F5C</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc<span class="token punctuation">,</span> sc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token function">transfer</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> nt<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u5F53\u524D\u7EBF\u7A0B\u662F\u552F\u4E00\u7684\u6216\u662F\u7B2C\u4E00\u4E2A\u53D1\u8D77\u6269\u5BB9\u7684\u7EBF\u7A0B  \u6B64\u65F6nextTable=null</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SIZECTL<span class="token punctuation">,</span> sc<span class="token punctuation">,</span>
                                         <span class="token punctuation">(</span>rs <span class="token operator">&lt;&lt;</span> RESIZE_STAMP_SHIFT<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token function">transfer</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            s <span class="token operator">=</span> <span class="token function">sumCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>JDK6,7\u4E2D\u7684ConcurrentHashmap\u4E3B\u8981\u4F7F\u7528Segment\u6765\u5B9E\u73B0\u51CF\u5C0F\u9501\u7C92\u5EA6\uFF0C\u5206\u5272\u6210\u82E5\u5E72\u4E2ASegment\uFF0C\u5728put\u7684\u65F6\u5019\u9700\u8981\u9501\u4F4FSegment\uFF0Cget\u65F6\u5019\u4E0D\u52A0\u9501\uFF0C\u4F7F\u7528volatile\u6765\u4FDD\u8BC1\u53EF\u89C1\u6027\uFF0C\u5F53\u8981\u7EDF\u8BA1\u5168\u5C40\u65F6\uFF08\u6BD4\u5982size\uFF09\uFF0C\u9996\u5148\u4F1A\u5C1D\u8BD5\u591A\u6B21\u8BA1\u7B97modcount\u6765\u786E\u5B9A\uFF0C\u8FD9\u51E0\u6B21\u5C1D\u8BD5\u4E2D\uFF0C\u662F\u5426\u6709\u5176\u4ED6\u7EBF\u7A0B\u8FDB\u884C\u4E86\u4FEE\u6539\u64CD\u4F5C\uFF0C\u5982\u679C\u6CA1\u6709\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DEsize\u3002\u5982\u679C\u6709\uFF0C\u5219\u9700\u8981\u4F9D\u6B21\u9501\u4F4F\u6240\u6709\u7684Segment\u6765\u8BA1\u7B97\u3002</p><p>1.8\u4E4B\u524Dput\u5B9A\u4F4D\u8282\u70B9\u65F6\u8981\u5148\u5B9A\u4F4D\u5230\u5177\u4F53\u7684segment\uFF0C\u7136\u540E\u518D\u5728segment\u4E2D\u5B9A\u4F4D\u5230\u5177\u4F53\u7684\u6876\u3002\u800C\u57281.8\u7684\u65F6\u5019\u6452\u5F03\u4E86segment\u81C3\u80BF\u7684\u8BBE\u8BA1\uFF0C\u76F4\u63A5\u9488\u5BF9\u7684\u662FNode[] tale\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E00\u4E2A\u6876\uFF0C\u8FDB\u4E00\u6B65\u51CF\u5C0F\u4E86\u9501\u7C92\u5EA6\u3002\u5E76\u4E14\u9632\u6B62\u62C9\u94FE\u8FC7\u957F\u5BFC\u81F4\u6027\u80FD\u4E0B\u964D\uFF0C\u5F53\u94FE\u8868\u957F\u5EA6\u5927\u4E8E8\u7684\u65F6\u5019\u91C7\u7528\u7EA2\u9ED1\u6811\u7684\u8BBE\u8BA1\u3002</p><p>\u4E3B\u8981\u8BBE\u8BA1\u4E0A\u7684\u53D8\u5316\u6709\u4EE5\u4E0B\u51E0\u70B9:</p><ol><li>\u4E0D\u91C7\u7528segment\u800C\u91C7\u7528node\uFF0C\u9501\u4F4Fnode\u6765\u5B9E\u73B0\u51CF\u5C0F\u9501\u7C92\u5EA6\u3002</li><li>\u8BBE\u8BA1\u4E86MOVED\u72B6\u6001 \u5F53resize\u7684\u4E2D\u8FC7\u7A0B\u4E2D \u7EBF\u7A0B2\u8FD8\u5728put\u6570\u636E\uFF0C\u7EBF\u7A0B2\u4F1A\u5E2E\u52A9resize\u3002</li><li>\u4F7F\u75283\u4E2ACAS\u64CD\u4F5C\u6765\u786E\u4FDDnode\u7684\u4E00\u4E9B\u64CD\u4F5C\u7684\u539F\u5B50\u6027\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u4EE3\u66FF\u4E86\u9501\u3002</li><li>sizeCtl\u7684\u4E0D\u540C\u503C\u6765\u4EE3\u8868\u4E0D\u540C\u542B\u4E49\uFF0C\u8D77\u5230\u4E86\u63A7\u5236\u7684\u4F5C\u7528\u3002</li><li>\u91C7\u7528synchronized\u800C\u4E0D\u662FReentrantLock</li></ol>`,131),k=s("\u66F4\u591A\u5173\u4E8E1.7\u7248\u672C\u4E0E1.8\u7248\u672C\u7684ConcurrentHashMap\u7684\u5B9E\u73B0\u5BF9\u6BD4\uFF0C\u53EF\u4EE5\u53C2\u8003"),r={href:"http://www.jianshu.com/p/e694f1e868ec",target:"_blank",rel:"noopener noreferrer"},d=s("\u8FD9\u7BC7\u6587\u7AE0"),v=s("\u3002"),m=n("hr",null,null,-1),b=n("p",null,"\u7F16\u8F91\uFF1A\u6C89\u9ED8\u738B\u4E8C\uFF0C\u5185\u5BB9\u5927\u90E8\u5206\u6765\u6E90\u4EE5\u4E0B\u4E09\u4E2A\u5F00\u6E90\u4ED3\u5E93\uFF1A",-1),h={href:"http://concurrent.redspider.group/",target:"_blank",rel:"noopener noreferrer"},g=s("\u6DF1\u5165\u6D45\u51FA Java \u591A\u7EBF\u7A0B"),y={href:"https://github.com/CL0610/Java-concurrency",target:"_blank",rel:"noopener noreferrer"},w=s("\u5E76\u53D1\u7F16\u7A0B\u77E5\u8BC6\u603B\u7ED3"),f={href:"https://github.com/CoderLeixiaoshuai/java-eight-part",target:"_blank",rel:"noopener noreferrer"},C=s("Java\u516B\u80A1\u6587"),T=n("img",{src:"http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/xingbiaogongzhonghao.png"},null,-1);function x(V,N){const a=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[k,n("a",r,[d,p(a)]),v]),m,n("blockquote",null,[b,n("ul",null,[n("li",null,[n("a",h,[g,p(a)])]),n("li",null,[n("a",y,[w,p(a)])]),n("li",null,[n("a",f,[C,p(a)])])])]),T])}var M=t(i,[["render",x],["__file","ConcurrentHashMap.html.vue"]]);export{M as default};
