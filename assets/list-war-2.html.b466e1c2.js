import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.9b6c14fa.js";const t={},e=p(`<h1 id="java\u4E2Darraylist\u548Clinkedlist\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#java\u4E2Darraylist\u548Clinkedlist\u7684\u533A\u522B" aria-hidden="true">#</a> Java\u4E2DArrayList\u548CLinkedList\u7684\u533A\u522B</h1><h3 id="_01\u3001arraylist-\u662F\u5982\u4F55\u5B9E\u73B0\u7684" tabindex="-1"><a class="header-anchor" href="#_01\u3001arraylist-\u662F\u5982\u4F55\u5B9E\u73B0\u7684" aria-hidden="true">#</a> 01\u3001ArrayList \u662F\u5982\u4F55\u5B9E\u73B0\u7684\uFF1F</h3><p>ArrayList \u5B9E\u73B0\u4E86 List \u63A5\u53E3\uFF0C\u7EE7\u627F\u4E86 AbstractList \u62BD\u8C61\u7C7B\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/list-war-2-01.png" alt="" loading="lazy"></p><p>\u5E95\u5C42\u662F\u57FA\u4E8E\u6570\u7EC4\u5B9E\u73B0\u7684\uFF0C\u5E76\u4E14\u5B9E\u73B0\u4E86\u52A8\u6001\u6269\u5BB9</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
        <span class="token keyword">implements</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">RandomAccess</span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_CAPACITY <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">transient</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ArrayList \u8FD8\u5B9E\u73B0\u4E86 RandomAccess \u63A5\u53E3\uFF0C\u8FD9\u662F\u4E00\u4E2A\u6807\u8BB0\u63A5\u53E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RandomAccess</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5185\u90E8\u662F\u7A7A\u7684\uFF0C\u6807\u8BB0\u201C\u5B9E\u73B0\u4E86\u8FD9\u4E2A\u63A5\u53E3\u7684\u7C7B\u652F\u6301\u5FEB\u901F\uFF08\u901A\u5E38\u662F\u56FA\u5B9A\u65F6\u95F4\uFF09\u968F\u673A\u8BBF\u95EE\u201D\u3002\u5FEB\u901F\u968F\u673A\u8BBF\u95EE\u662F\u4EC0\u4E48\u610F\u601D\u5462\uFF1F\u5C31\u662F\u8BF4\u4E0D\u9700\u8981\u904D\u5386\uFF0C\u5C31\u53EF\u4EE5\u901A\u8FC7\u4E0B\u6807\uFF08\u7D22\u5F15\uFF09\u76F4\u63A5\u8BBF\u95EE\u5230\u5185\u5B58\u5730\u5740\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">checkIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">elementData</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">E</span> <span class="token function">elementData</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> elementData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ArrayList \u8FD8\u5B9E\u73B0\u4E86 Cloneable \u63A5\u53E3\uFF0C\u8FD9\u8868\u660E ArrayList \u662F\u652F\u6301\u62F7\u8D1D\u7684\u3002ArrayList \u5185\u90E8\u7684\u786E\u4E5F\u91CD\u5199\u4E86 Object \u7C7B\u7684 <code>clone()</code> \u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        v<span class="token punctuation">.</span>elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        v<span class="token punctuation">.</span>modCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> v<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">CloneNotSupportedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// this shouldn&#39;t happen, since we are Cloneable</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InternalError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ArrayList \u8FD8\u5B9E\u73B0\u4E86 Serializable \u63A5\u53E3\uFF0C\u540C\u6837\u662F\u4E00\u4E2A\u6807\u8BB0\u63A5\u53E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5185\u90E8\u4E5F\u662F\u7A7A\u7684\uFF0C\u6807\u8BB0\u201C\u5B9E\u73B0\u4E86\u8FD9\u4E2A\u63A5\u53E3\u7684\u7C7B\u652F\u6301\u5E8F\u5217\u5316\u201D\u3002\u5E8F\u5217\u5316\u662F\u4EC0\u4E48\u610F\u601D\u5462\uFF1FJava \u7684\u5E8F\u5217\u5316\u662F\u6307\uFF0C\u5C06\u5BF9\u8C61\u8F6C\u6362\u6210\u4EE5\u5B57\u8282\u5E8F\u5217\u7684\u5F62\u5F0F\u6765\u8868\u793A\uFF0C\u8FD9\u4E9B\u5B57\u8282\u5E8F\u4E2D\u5305\u542B\u4E86\u5BF9\u8C61\u7684\u5B57\u6BB5\u548C\u65B9\u6CD5\u3002\u5E8F\u5217\u5316\u540E\u7684\u5BF9\u8C61\u53EF\u4EE5\u88AB\u5199\u5230\u6570\u636E\u5E93\u3001\u5199\u5230\u6587\u4EF6\uFF0C\u4E5F\u53EF\u7528\u4E8E\u7F51\u7EDC\u4F20\u8F93\u3002</p><p>\u773C\u775B\u96EA\u4EAE\u7684\u5C0F\u4F19\u4F34\u53EF\u80FD\u4F1A\u6CE8\u610F\u5230\uFF0CArrayList \u4E2D\u7684\u5173\u952E\u5B57\u6BB5 elementData \u4F7F\u7528\u4E86 transient \u5173\u952E\u5B57\u4FEE\u9970\uFF0C\u8FD9\u4E2A\u5173\u952E\u5B57\u7684\u4F5C\u7528\u662F\uFF0C\u8BA9\u5B83\u4FEE\u9970\u7684\u5B57\u6BB5\u4E0D\u88AB\u5E8F\u5217\u5316\u3002</p><p>\u8FD9\u4E0D\u524D\u540E\u77DB\u76FE\u5417\uFF1F\u4E00\u4E2A\u7C7B\u65E2\u7136\u5B9E\u73B0\u4E86 Serilizable \u63A5\u53E3\uFF0C\u80AF\u5B9A\u662F\u60F3\u8981\u88AB\u5E8F\u5217\u5316\u7684\uFF0C\u5BF9\u5427\uFF1F\u90A3\u4E3A\u4EC0\u4E48\u4FDD\u5B58\u5173\u952E\u6570\u636E\u7684 elementData \u53C8\u4E0D\u60F3\u88AB\u5E8F\u5217\u5316\u5462?</p><p>\u8FD9\u8FD8\u5F97\u4ECE \u201CArrayList \u662F\u57FA\u4E8E\u6570\u7EC4\u5B9E\u73B0\u7684\u201D\u5F00\u59CB\u8BF4\u8D77\u3002\u5927\u5BB6\u90FD\u77E5\u9053\uFF0C\u6570\u7EC4\u662F\u5B9A\u957F\u7684\uFF0C\u5C31\u662F\u8BF4\uFF0C\u6570\u7EC4\u4E00\u65E6\u58F0\u660E\u4E86\uFF0C\u957F\u5EA6\uFF08\u5BB9\u91CF\uFF09\u5C31\u662F\u56FA\u5B9A\u7684\uFF0C\u4E0D\u80FD\u50CF\u67D0\u4E9B\u4E1C\u897F\u4E00\u6837\u4F38\u7F29\u81EA\u5982\u3002\u8FD9\u5C31\u5F88\u9EBB\u70E6\uFF0C\u6570\u7EC4\u4E00\u65E6\u88C5\u6EE1\u4E86\uFF0C\u5C31\u4E0D\u80FD\u6DFB\u52A0\u65B0\u7684\u5143\u7D20\u8FDB\u6765\u4E86\u3002</p><p>ArrayList \u4E0D\u60F3\u50CF\u6570\u7EC4\u8FD9\u6837\u6D3B\u7740\uFF0C\u5B83\u60F3\u80FD\u5C48\u80FD\u4F38\uFF0C\u6240\u4EE5\u5B83\u5B9E\u73B0\u4E86\u52A8\u6001\u6269\u5BB9\u3002\u4E00\u65E6\u5728\u6DFB\u52A0\u5143\u7D20\u7684\u65F6\u5019\uFF0C\u53D1\u73B0\u5BB9\u91CF\u7528\u6EE1\u4E86 <code>s == elementData.length</code>\uFF0C\u5C31\u6309\u7167\u539F\u6765\u6570\u7EC4\u7684 1.5 \u500D\uFF08<code>oldCapacity &gt;&gt; 1</code>\uFF09\u8FDB\u884C\u6269\u5BB9\u3002\u6269\u5BB9\u4E4B\u540E\uFF0C\u518D\u5C06\u539F\u6709\u7684\u6570\u7EC4\u590D\u5236\u5230\u65B0\u5206\u914D\u7684\u5185\u5B58\u5730\u5740\u4E0A <code>Arrays.copyOf(elementData, newCapacity)</code>\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData<span class="token punctuation">,</span> <span class="token keyword">int</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
        elementData <span class="token operator">=</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
    size <span class="token operator">=</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">grow</span><span class="token punctuation">(</span>size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCapacity <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span> elementData <span class="token operator">!=</span> DEFAULTCAPACITY_EMPTY_ELEMENTDATA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> <span class="token class-name">ArraysSupport</span><span class="token punctuation">.</span><span class="token function">newLength</span><span class="token punctuation">(</span>oldCapacity<span class="token punctuation">,</span>
                minCapacity <span class="token operator">-</span> oldCapacity<span class="token punctuation">,</span> <span class="token comment">/* minimum growth */</span>
                oldCapacity <span class="token operator">&gt;&gt;</span> <span class="token number">1</span>           <span class="token comment">/* preferred growth */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> elementData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>DEFAULT_CAPACITY<span class="token punctuation">,</span> minCapacity<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u52A8\u6001\u6269\u5BB9\u610F\u5473\u7740\u4EC0\u4E48\uFF1F\u5927\u5BB6\u4F19\u60F3\u4E00\u4E0B\u3002\u55EF\uFF0C\u8FD8\u662F\u6211\u6765\u544A\u8BC9\u5927\u5BB6\u7B54\u6848\u5427\uFF0C\u6709\u70B9\u8FEB\u4E0D\u53CA\u5F85\u3002</p><p>\u610F\u5473\u7740\u6570\u7EC4\u7684\u5B9E\u9645\u5927\u5C0F\u53EF\u80FD\u6C38\u8FDC\u65E0\u6CD5\u88AB\u586B\u6EE1\u7684\uFF0C\u603B\u6709\u591A\u4F59\u51FA\u6765\u7A7A\u7F6E\u7684\u5185\u5B58\u7A7A\u95F4\u3002</p><p>\u6BD4\u5982\u8BF4\uFF0C\u9ED8\u8BA4\u7684\u6570\u7EC4\u5927\u5C0F\u662F 10\uFF0C\u5F53\u6DFB\u52A0\u7B2C 11 \u4E2A\u5143\u7D20\u7684\u65F6\u5019\uFF0C\u6570\u7EC4\u7684\u957F\u5EA6\u6269\u5BB9\u4E86 1.5 \u500D\uFF0C\u4E5F\u5C31\u662F 15\uFF0C\u610F\u5473\u7740\u8FD8\u6709 4 \u4E2A\u5185\u5B58\u7A7A\u95F4\u662F\u95F2\u7F6E\u7684\uFF0C\u5BF9\u5427\uFF1F</p><p>\u5E8F\u5217\u5316\u7684\u65F6\u5019\uFF0C\u5982\u679C\u628A\u6574\u4E2A\u6570\u7EC4\u90FD\u5E8F\u5217\u5316\u7684\u8BDD\uFF0C\u662F\u4E0D\u662F\u5C31\u591A\u5E8F\u5217\u5316\u4E86 4 \u4E2A\u5185\u5B58\u7A7A\u95F4\u3002\u5F53\u5B58\u50A8\u7684\u5143\u7D20\u6570\u91CF\u975E\u5E38\u975E\u5E38\u591A\u7684\u65F6\u5019\uFF0C\u95F2\u7F6E\u7684\u7A7A\u95F4\u5C31\u975E\u5E38\u975E\u5E38\u5927\uFF0C\u5E8F\u5217\u5316\u8017\u8D39\u7684\u65F6\u95F4\u5C31\u4F1A\u975E\u5E38\u975E\u5E38\u591A\u3002</p><p>\u4E8E\u662F\uFF0CArrayList \u505A\u4E86\u4E00\u4E2A\u6109\u5FEB\u800C\u53C8\u806A\u660E\u7684\u51B3\u5B9A\uFF0C\u5185\u90E8\u63D0\u4F9B\u4E86\u4E24\u4E2A\u79C1\u6709\u65B9\u6CD5 writeObject \u548C readObject \u6765\u5B8C\u6210\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectOutputStream</span> s<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span> <span class="token punctuation">{</span>
    <span class="token comment">// Write out element count, and any hidden stuff</span>
    <span class="token keyword">int</span> expectedModCount <span class="token operator">=</span> modCount<span class="token punctuation">;</span>
    s<span class="token punctuation">.</span><span class="token function">defaultWriteObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Write out size as capacity for behavioral compatibility with clone()</span>
    s<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Write out all elements in the proper order.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        s<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>modCount <span class="token operator">!=</span> expectedModCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE writeObject \u65B9\u6CD5\u7684\u6E90\u7801\u4E2D\u53EF\u4EE5\u770B\u5F97\u51FA\uFF0C\u5B83\u4F7F\u7528\u4E86 ArrayList \u7684\u5B9E\u9645\u5927\u5C0F size \u800C\u4E0D\u662F\u6570\u7EC4\u7684\u957F\u5EA6\uFF08<code>elementData.length</code>\uFF09\u6765\u4F5C\u4E3A\u5143\u7D20\u7684\u4E0A\u9650\u8FDB\u884C\u5E8F\u5217\u5316\u3002</p><p>\u6B64\u5904\u5E94\u8BE5\u6709\u638C\u58F0\u554A\uFF01\u4E0D\u662F\u4E3A\u6211\uFF0C\u4E3A Java \u6E90\u7801\u7684\u4F5C\u8005\u4EEC\uFF0C\u4ED6\u4EEC\u771F\u7684\u662F\u592A\u5389\u5BB3\u4E86\uFF0C\u53EF\u4EE5\u7528\u4E24\u4E2A\u8BCD\u6765\u5F62\u5BB9\u4ED6\u4EEC\u2014\u2014\u6B9A\u7CBE\u7AED\u8651\u3001\u7CBE\u76CA\u6C42\u7CBE\u3002</p><h3 id="_02\u3001linkedlist-\u662F\u5982\u4F55\u5B9E\u73B0\u7684" tabindex="-1"><a class="header-anchor" href="#_02\u3001linkedlist-\u662F\u5982\u4F55\u5B9E\u73B0\u7684" aria-hidden="true">#</a> 02\u3001LinkedList \u662F\u5982\u4F55\u5B9E\u73B0\u7684\uFF1F</h3><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/list-war-2-02.png" alt="" loading="lazy"></p><p>LinkedList \u662F\u4E00\u4E2A\u7EE7\u627F\u81EA AbstractSequentialList \u7684\u53CC\u5411\u94FE\u8868\uFF0C\u56E0\u6B64\u5B83\u4E5F\u53EF\u4EE5\u88AB\u5F53\u4F5C\u5806\u6808\u3001\u961F\u5217\u6216\u53CC\u7AEF\u961F\u5217\u8FDB\u884C\u64CD\u4F5C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">extends</span> <span class="token class-name">AbstractSequentialList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">implements</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Deque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span>
<span class="token punctuation">{</span>
    <span class="token keyword">transient</span> <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">;</span>
    <span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> last<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LinkedList \u5185\u90E8\u5B9A\u4E49\u4E86\u4E00\u4E2A Node \u8282\u70B9\uFF0C\u5B83\u5305\u542B 3 \u4E2A\u90E8\u5206\uFF1A\u5143\u7D20\u5185\u5BB9 item\uFF0C\u524D\u5F15\u7528 prev \u548C\u540E\u5F15\u7528 next\u3002\u4EE3\u7801\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">E</span> item<span class="token punctuation">;</span>
    <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
    <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">;</span>

    <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">,</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>item <span class="token operator">=</span> element<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LinkedList \u8FD8\u5B9E\u73B0\u4E86 Cloneable \u63A5\u53E3\uFF0C\u8FD9\u8868\u660E LinkedList \u662F\u652F\u6301\u62F7\u8D1D\u7684\u3002</p><p>LinkedList \u8FD8\u5B9E\u73B0\u4E86 Serializable \u63A5\u53E3\uFF0C\u8FD9\u8868\u660E LinkedList \u662F\u652F\u6301\u5E8F\u5217\u5316\u7684\u3002\u773C\u775B\u96EA\u4EAE\u7684\u5C0F\u4F19\u4F34\u53EF\u80FD\u53C8\u6CE8\u610F\u5230\u4E86\uFF0CLinkedList \u4E2D\u7684\u5173\u952E\u5B57\u6BB5 size\u3001first\u3001last \u90FD\u4F7F\u7528\u4E86 transient \u5173\u952E\u5B57\u4FEE\u9970\uFF0C\u8FD9\u4E0D\u53C8\u77DB\u76FE\u4E86\u5417\uFF1F\u5230\u5E95\u662F\u60F3\u5E8F\u5217\u5316\u8FD8\u662F\u4E0D\u60F3\u5E8F\u5217\u5316\uFF1F</p><p>\u7B54\u6848\u662F LinkedList \u60F3\u6309\u7167\u81EA\u5DF1\u7684\u65B9\u5F0F\u5E8F\u5217\u5316\uFF0C\u6765\u770B\u5B83\u81EA\u5DF1\u5B9E\u73B0\u7684 <code>writeObject()</code> \u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectOutputStream</span> s<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span> <span class="token punctuation">{</span>
    <span class="token comment">// Write out any hidden serialization magic</span>
    s<span class="token punctuation">.</span><span class="token function">defaultWriteObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Write out size</span>
    s<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Write out all elements in the proper order.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">)</span>
        s<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53D1\u73B0\u6CA1\uFF1FLinkedList \u5728\u5E8F\u5217\u5316\u7684\u65F6\u5019\u53EA\u4FDD\u7559\u4E86\u5143\u7D20\u7684\u5185\u5BB9 item\uFF0C\u5E76\u6CA1\u6709\u4FDD\u7559\u5143\u7D20\u7684\u524D\u540E\u5F15\u7528\u3002\u8FD9\u6837\u5C31\u8282\u7701\u4E86\u4E0D\u5C11\u5185\u5B58\u7A7A\u95F4\uFF0C\u5BF9\u5427\uFF1F</p><p>\u90A3\u6709\u4E9B\u5C0F\u4F19\u4F34\u53EF\u80FD\u5C31\u7591\u60D1\u4E86\uFF0C\u53EA\u4FDD\u7559\u5143\u7D20\u5185\u5BB9\uFF0C\u4E0D\u4FDD\u7559\u524D\u540E\u5F15\u7528\uFF0C\u90A3\u53CD\u5E8F\u5217\u5316\u7684\u65F6\u5019\u600E\u4E48\u529E\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectInputStream</span> s<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
    <span class="token comment">// Read in any hidden serialization magic</span>
    s<span class="token punctuation">.</span><span class="token function">defaultReadObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Read in size</span>
    <span class="token keyword">int</span> size <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Read in all elements in the proper order.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token function">linkLast</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">linkLast</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> l <span class="token operator">=</span> last<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    last <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        first <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        l<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F for \u5FAA\u73AF\u4E2D\u7684 <code>linkLast()</code> \u65B9\u6CD5\uFF0C\u5B83\u53EF\u4EE5\u628A\u94FE\u8868\u91CD\u65B0\u94FE\u63A5\u8D77\u6765\uFF0C\u8FD9\u6837\u5C31\u6062\u590D\u4E86\u94FE\u8868\u5E8F\u5217\u5316\u4E4B\u524D\u7684\u987A\u5E8F\u3002\u5F88\u5999\uFF0C\u5BF9\u5427\uFF1F</p><p>\u548C ArrayList \u76F8\u6BD4\uFF0CLinkedList \u6CA1\u6709\u5B9E\u73B0 RandomAccess \u63A5\u53E3\uFF0C\u8FD9\u662F\u56E0\u4E3A LinkedList \u5B58\u50A8\u6570\u636E\u7684\u5185\u5B58\u5730\u5740\u662F\u4E0D\u8FDE\u7EED\u7684\uFF0C\u6240\u4EE5\u4E0D\u652F\u6301\u968F\u673A\u8BBF\u95EE\u3002</p><h3 id="_03\u3001arraylist-\u548C-linkedlist-\u65B0\u589E\u5143\u7D20\u65F6\u7A76\u7ADF\u8C01\u5FEB" tabindex="-1"><a class="header-anchor" href="#_03\u3001arraylist-\u548C-linkedlist-\u65B0\u589E\u5143\u7D20\u65F6\u7A76\u7ADF\u8C01\u5FEB" aria-hidden="true">#</a> 03\u3001ArrayList \u548C LinkedList \u65B0\u589E\u5143\u7D20\u65F6\u7A76\u7ADF\u8C01\u5FEB\uFF1F</h3><p>\u524D\u9762\u6211\u4EEC\u5DF2\u7ECF\u4ECE\u591A\u4E2A\u7EF4\u5EA6\u4E86\u89E3\u4E86 ArrayList \u548C LinkedList \u7684\u5B9E\u73B0\u539F\u7406\u548C\u5404\u81EA\u7684\u7279\u70B9\u3002\u90A3\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u5C31\u6765\u804A\u804A ArrayList \u548C LinkedList \u5728\u65B0\u589E\u5143\u7D20\u65F6\u7A76\u7ADF\u8C01\u5FEB\uFF1F</p><p><strong>1\uFF09ArrayList</strong></p><p>ArrayList \u65B0\u589E\u5143\u7D20\u6709\u4E24\u79CD\u60C5\u51B5\uFF0C\u4E00\u79CD\u662F\u76F4\u63A5\u5C06\u5143\u7D20\u6DFB\u52A0\u5230\u6570\u7EC4\u672B\u5C3E\uFF0C\u4E00\u79CD\u662F\u5C06\u5143\u7D20\u63D2\u5165\u5230\u6307\u5B9A\u4F4D\u7F6E\u3002</p><p>\u6DFB\u52A0\u5230\u6570\u7EC4\u672B\u5C3E\u7684\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token function">add</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> elementData<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData<span class="token punctuation">,</span> <span class="token keyword">int</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
        elementData <span class="token operator">=</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
    size <span class="token operator">=</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F88\u7B80\u5355\uFF0C\u5148\u5224\u65AD\u662F\u5426\u9700\u8981\u6269\u5BB9\uFF0C\u7136\u540E\u76F4\u63A5\u901A\u8FC7\u7D22\u5F15\u5C06\u5143\u7D20\u6DFB\u52A0\u5230\u672B\u5C3E\u3002</p><p>\u63D2\u5165\u5230\u6307\u5B9A\u4F4D\u7F6E\u7684\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">rangeCheckForAdd</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> s<span class="token punctuation">;</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> size<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span>elementData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>elementData<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>
        elementData <span class="token operator">=</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> index<span class="token punctuation">,</span>
            elementData<span class="token punctuation">,</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
            s <span class="token operator">-</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> element<span class="token punctuation">;</span>
    size <span class="token operator">=</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5148\u68C0\u67E5\u63D2\u5165\u7684\u4F4D\u7F6E\u662F\u5426\u5728\u5408\u7406\u7684\u8303\u56F4\u4E4B\u5185\uFF0C\u7136\u540E\u5224\u65AD\u662F\u5426\u9700\u8981\u6269\u5BB9\uFF0C\u518D\u628A\u8BE5\u4F4D\u7F6E\u4EE5\u540E\u7684\u5143\u7D20\u590D\u5236\u5230\u65B0\u6DFB\u52A0\u5143\u7D20\u7684\u4F4D\u7F6E\u4E4B\u540E\uFF0C\u6700\u540E\u901A\u8FC7\u7D22\u5F15\u5C06\u5143\u7D20\u6DFB\u52A0\u5230\u6307\u5B9A\u7684\u4F4D\u7F6E\u3002\u8FD9\u79CD\u60C5\u51B5\u662F\u975E\u5E38\u4F24\u7684\uFF0C\u6027\u80FD\u4F1A\u6BD4\u8F83\u5DEE\u3002</p><p><strong>2\uFF09LinkedList</strong></p><p>LinkedList \u65B0\u589E\u5143\u7D20\u4E5F\u6709\u4E24\u79CD\u60C5\u51B5\uFF0C\u4E00\u79CD\u662F\u76F4\u63A5\u5C06\u5143\u7D20\u6DFB\u52A0\u5230\u961F\u5C3E\uFF0C\u4E00\u79CD\u662F\u5C06\u5143\u7D20\u63D2\u5165\u5230\u6307\u5B9A\u4F4D\u7F6E\u3002</p><p>\u6DFB\u52A0\u5230\u961F\u5C3E\u7684\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">linkLast</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">linkLast</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> l <span class="token operator">=</span> last<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    last <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        first <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        l<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5148\u5C06\u961F\u5C3E\u7684\u8282\u70B9 last \u5B58\u653E\u5230\u4E34\u65F6\u53D8\u91CF l \u4E2D\uFF08\u4E0D\u662F\u8BF4\u4E0D\u5EFA\u8BAE\u4F7F\u7528 I \u4F5C\u4E3A\u53D8\u91CF\u540D\u5417\uFF1FJava \u7684\u4F5C\u8005\u4EEC\u660E\u77E5\u6545\u72AF\u554A\uFF09\uFF0C\u7136\u540E\u751F\u6210\u65B0\u7684 Node \u8282\u70B9\uFF0C\u5E76\u8D4B\u7ED9 last\uFF0C\u5982\u679C l \u4E3A null\uFF0C\u8BF4\u660E\u662F\u7B2C\u4E00\u6B21\u6DFB\u52A0\uFF0C\u6240\u4EE5 first \u4E3A\u65B0\u7684\u8282\u70B9\uFF1B\u5426\u5219\u5C06\u65B0\u7684\u8282\u70B9\u8D4B\u7ED9\u4E4B\u524D last \u7684 next\u3002</p><p>\u63D2\u5165\u5230\u6307\u5B9A\u4F4D\u7F6E\u7684\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">E</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkPositionIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> size<span class="token punctuation">)</span>
        <span class="token function">linkLast</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token function">linkBefore</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">node</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// assert isElementIndex(index);</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> last<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> index<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
            x <span class="token operator">=</span> x<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">linkBefore</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">,</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> succ<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// assert succ != null;</span>
    <span class="token keyword">final</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> pred <span class="token operator">=</span> succ<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> e<span class="token punctuation">,</span> succ<span class="token punctuation">)</span><span class="token punctuation">;</span>
    succ<span class="token punctuation">.</span>prev <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pred <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        first <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        pred<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5148\u68C0\u67E5\u63D2\u5165\u7684\u4F4D\u7F6E\u662F\u5426\u5728\u5408\u7406\u7684\u8303\u56F4\u4E4B\u5185\uFF0C\u7136\u540E\u5224\u65AD\u63D2\u5165\u7684\u4F4D\u7F6E\u662F\u5426\u662F\u961F\u5C3E\uFF0C\u5982\u679C\u662F\uFF0C\u6DFB\u52A0\u5230\u961F\u5C3E\uFF1B\u5426\u5219\u6267\u884C <code>linkBefore()</code> \u65B9\u6CD5\u3002</p><p>\u5728\u6267\u884C <code>linkBefore()</code> \u65B9\u6CD5\u4E4B\u524D\uFF0C\u4F1A\u8C03\u7528 <code>node()</code> \u65B9\u6CD5\u67E5\u627E\u6307\u5B9A\u4F4D\u7F6E\u4E0A\u7684\u5143\u7D20\uFF0C\u8FD9\u4E00\u6B65\u662F\u9700\u8981\u904D\u5386 LinkedList \u7684\u3002\u5982\u679C\u63D2\u5165\u7684\u4F4D\u7F6E\u9760\u524D\u524D\u534A\u6BB5\uFF0C\u5C31\u4ECE\u961F\u5934\u5F00\u59CB\u5F80\u540E\u627E\uFF1B\u5426\u5219\u4ECE\u961F\u5C3E\u5F80\u524D\u627E\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5982\u679C\u63D2\u5165\u7684\u4F4D\u7F6E\u8D8A\u9760\u8FD1 LinkedList \u7684\u4E2D\u95F4\u4F4D\u7F6E\uFF0C\u904D\u5386\u6240\u82B1\u8D39\u7684\u65F6\u95F4\u5C31\u8D8A\u591A\u3002</p><p>\u627E\u5230\u6307\u5B9A\u4F4D\u7F6E\u4E0A\u7684\u5143\u7D20\uFF08succ\uFF09\u4E4B\u540E\uFF0C\u5C31\u5F00\u59CB\u6267\u884C <code>linkBefore()</code> \u65B9\u6CD5\u4E86\uFF0C\u5148\u5C06 succ \u7684\u524D\u4E00\u4E2A\u8282\u70B9\uFF08prev\uFF09\u5B58\u653E\u5230\u4E34\u65F6\u53D8\u91CF pred \u4E2D\uFF0C\u7136\u540E\u751F\u6210\u65B0\u7684 Node \u8282\u70B9\uFF08newNode\uFF09\uFF0C\u5E76\u5C06 succ \u7684\u524D\u4E00\u4E2A\u8282\u70B9\u53D8\u66F4\u4E3A newNode\uFF0C\u5982\u679C pred \u4E3A null\uFF0C\u8BF4\u660E\u63D2\u5165\u7684\u662F\u961F\u5934\uFF0C\u6240\u4EE5 first \u4E3A\u65B0\u8282\u70B9\uFF1B\u5426\u5219\u5C06 pred \u7684\u540E\u4E00\u4E2A\u8282\u70B9\u53D8\u66F4\u4E3A newNode\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/list-war-2-03.png" alt="" loading="lazy"></p><p>\u7ECF\u8FC7\u6E90\u7801\u5206\u6790\u4EE5\u540E\uFF0C\u5C0F\u4F19\u4F34\u4EEC\u662F\u4E0D\u662F\u5728\u60F3\uFF1A\u201C\u597D\u50CF ArrayList \u5728\u65B0\u589E\u5143\u7D20\u7684\u65F6\u5019\u6548\u7387\u5E76\u4E0D\u4E00\u5B9A\u6BD4 LinkedList \u4F4E\u554A\uFF01\u201D</p><p>\u5F53\u4E24\u8005\u7684\u8D77\u59CB\u957F\u5EA6\u662F\u4E00\u6837\u7684\u60C5\u51B5\u4E0B\uFF1A</p><ul><li>\u5982\u679C\u662F\u4ECE\u96C6\u5408\u7684\u5934\u90E8\u65B0\u589E\u5143\u7D20\uFF0CArrayList \u82B1\u8D39\u7684\u65F6\u95F4\u5E94\u8BE5\u6BD4 LinkedList \u591A\uFF0C\u56E0\u4E3A\u9700\u8981\u5BF9\u5934\u90E8\u4EE5\u540E\u7684\u5143\u7D20\u8FDB\u884C\u590D\u5236\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayListTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addFromHeaderTest</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">long</span> timeStart <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">long</span> timeEnd <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ArrayList\u4ECE\u96C6\u5408\u5934\u90E8\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F4&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>timeEnd <span class="token operator">-</span> timeStart<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> \u5FAE\u4FE1\u641C\u300C\u6C89\u9ED8\u738B\u4E8C\u300D\uFF0C\u56DE\u590D\u5173\u952E\u5B57 PDF
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedListTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addFromHeaderTest</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> timeStart <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            list<span class="token punctuation">.</span><span class="token function">addFirst</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">long</span> timeEnd <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;LinkedList\u4ECE\u96C6\u5408\u5934\u90E8\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F4&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>timeEnd <span class="token operator">-</span> timeStart<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>num \u4E3A 10000\uFF0C\u4EE3\u7801\u5B9E\u6D4B\u540E\u7684\u65F6\u95F4\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ArrayList\u4ECE\u96C6\u5408\u5934\u90E8\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F4595
LinkedList\u4ECE\u96C6\u5408\u5934\u90E8\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F415
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>ArrayList \u82B1\u8D39\u7684\u65F6\u95F4\u6BD4 LinkedList \u8981\u591A\u5F88\u591A\u3002</p><ul><li>\u5982\u679C\u662F\u4ECE\u96C6\u5408\u7684\u4E2D\u95F4\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\uFF0CArrayList \u82B1\u8D39\u7684\u65F6\u95F4\u641E\u4E0D\u597D\u8981\u6BD4 LinkedList \u5C11\uFF0C\u56E0\u4E3A LinkedList \u9700\u8981\u904D\u5386\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayListTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addFromMidTest</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">long</span> timeStart <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> temp <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>temp <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">long</span> timeEnd <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ArrayList\u4ECE\u96C6\u5408\u4E2D\u95F4\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F4&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>timeEnd <span class="token operator">-</span> timeStart<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedListTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addFromMidTest</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> timeStart <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> temp <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>temp <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">long</span> timeEnd <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;LinkedList\u4ECE\u96C6\u5408\u4E2D\u95F4\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F4&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>timeEnd <span class="token operator">-</span> timeStart<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>num \u4E3A 10000\uFF0C\u4EE3\u7801\u5B9E\u6D4B\u540E\u7684\u65F6\u95F4\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ArrayList\u4ECE\u96C6\u5408\u4E2D\u95F4\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F41
LinkedList\u4ECE\u96C6\u5408\u4E2D\u95F4\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F4101
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>ArrayList \u82B1\u8D39\u7684\u65F6\u95F4\u6BD4 LinkedList \u8981\u5C11\u5F88\u591A\u5F88\u591A\u3002</p><ul><li>\u5982\u679C\u662F\u4ECE\u96C6\u5408\u7684\u5C3E\u90E8\u65B0\u589E\u5143\u7D20\uFF0CArrayList \u82B1\u8D39\u7684\u65F6\u95F4\u5E94\u8BE5\u6BD4 LinkedList \u5C11\uFF0C\u56E0\u4E3A\u6570\u7EC4\u662F\u4E00\u6BB5\u8FDE\u7EED\u7684\u5185\u5B58\u7A7A\u95F4\uFF0C\u4E5F\u4E0D\u9700\u8981\u590D\u5236\u6570\u7EC4\uFF1B\u800C\u94FE\u8868\u9700\u8981\u521B\u5EFA\u65B0\u7684\u5BF9\u8C61\uFF0C\u524D\u540E\u5F15\u7528\u4E5F\u8981\u91CD\u65B0\u6392\u5217\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayListTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addFromTailTest</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">long</span> timeStart <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">long</span> timeEnd <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ArrayList\u4ECE\u96C6\u5408\u5C3E\u90E8\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F4&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>timeEnd <span class="token operator">-</span> timeStart<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedListTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addFromTailTest</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> timeStart <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">long</span> timeEnd <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;LinkedList\u4ECE\u96C6\u5408\u5C3E\u90E8\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F4&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>timeEnd <span class="token operator">-</span> timeStart<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>num \u4E3A 10000\uFF0C\u4EE3\u7801\u5B9E\u6D4B\u540E\u7684\u65F6\u95F4\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ArrayList\u4ECE\u96C6\u5408\u5C3E\u90E8\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F469
LinkedList\u4ECE\u96C6\u5408\u5C3E\u90E8\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F4193
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>ArrayList \u82B1\u8D39\u7684\u65F6\u95F4\u6BD4 LinkedList \u8981\u5C11\u4E00\u4E9B\u3002</p><p>\u8FD9\u6837\u7684\u7ED3\u8BBA\u548C\u9884\u671F\u7684\u662F\u4E0D\u662F\u4E0D\u592A\u76F8\u7B26\uFF1FArrayList \u5728\u6DFB\u52A0\u5143\u7D20\u7684\u65F6\u5019\u5982\u679C\u4E0D\u6D89\u53CA\u5230\u6269\u5BB9\uFF0C\u6027\u80FD\u5728\u4E24\u79CD\u60C5\u51B5\u4E0B\uFF08\u4E2D\u95F4\u4F4D\u7F6E\u65B0\u589E\u5143\u7D20\u3001\u5C3E\u90E8\u65B0\u589E\u5143\u7D20\uFF09\u6BD4 LinkedList \u597D\u5F88\u591A\uFF0C\u53EA\u6709\u5934\u90E8\u65B0\u589E\u5143\u7D20\u7684\u65F6\u5019\u6BD4 LinkedList \u5DEE\uFF0C\u56E0\u4E3A\u6570\u7EC4\u590D\u5236\u7684\u539F\u56E0\u3002</p><p>\u5F53\u7136\u4E86\uFF0C\u5982\u679C\u6D89\u53CA\u5230\u6570\u7EC4\u6269\u5BB9\u7684\u8BDD\uFF0CArrayList \u7684\u6027\u80FD\u5C31\u6CA1\u90A3\u4E48\u53EF\u89C2\u4E86\uFF0C\u56E0\u4E3A\u6269\u5BB9\u7684\u65F6\u5019\u4E5F\u8981\u590D\u5236\u6570\u7EC4\u3002</p><h3 id="_04\u3001arraylist-\u548C-linkedlist-\u5220\u9664\u5143\u7D20\u65F6\u7A76\u7ADF\u8C01\u5FEB" tabindex="-1"><a class="header-anchor" href="#_04\u3001arraylist-\u548C-linkedlist-\u5220\u9664\u5143\u7D20\u65F6\u7A76\u7ADF\u8C01\u5FEB" aria-hidden="true">#</a> 04\u3001ArrayList \u548C LinkedList \u5220\u9664\u5143\u7D20\u65F6\u7A76\u7ADF\u8C01\u5FEB\uFF1F</h3><p><strong>1\uFF09ArrayList</strong></p><p>ArrayList \u5220\u9664\u5143\u7D20\u7684\u65F6\u5019\uFF0C\u6709\u4E24\u79CD\u65B9\u5F0F\uFF0C\u4E00\u79CD\u662F\u76F4\u63A5\u5220\u9664\u5143\u7D20\uFF08<code>remove(Object)</code>\uFF09\uFF0C\u9700\u8981\u76F4\u5148\u904D\u5386\u6570\u7EC4\uFF0C\u627E\u5230\u5143\u7D20\u5BF9\u5E94\u7684\u7D22\u5F15\uFF1B\u4E00\u79CD\u662F\u6309\u7167\u7D22\u5F15\u5220\u9664\u5143\u7D20\uFF08<code>remove(int)</code>\uFF09\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> es <span class="token operator">=</span> elementData<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    found<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>es<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span> found<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>es<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span> found<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">fastRemove</span><span class="token punctuation">(</span>es<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">checkIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> es <span class="token operator">=</span> elementData<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span> <span class="token class-name">E</span> oldValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> es<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">fastRemove</span><span class="token punctuation">(</span>es<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u4ECE\u672C\u8D28\u4E0A\u8BB2\uFF0C\u90FD\u662F\u4E00\u6837\u7684\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u6700\u540E\u8C03\u7528\u7684\u90FD\u662F <code>fastRemove(Object, int)</code> \u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">fastRemove</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> es<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> newSize<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>newSize <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> i<span class="token punctuation">)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>es<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> es<span class="token punctuation">,</span> i<span class="token punctuation">,</span> newSize <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    es<span class="token punctuation">[</span>size <span class="token operator">=</span> newSize<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u6E90\u7801\u53EF\u4EE5\u770B\u5F97\u51FA\uFF0C\u53EA\u8981\u5220\u9664\u7684\u4E0D\u662F\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u90FD\u9700\u8981\u6570\u7EC4\u91CD\u7EC4\u3002\u5220\u9664\u7684\u5143\u7D20\u4F4D\u7F6E\u8D8A\u9760\u524D\uFF0C\u4EE3\u4EF7\u5C31\u8D8A\u5927\u3002</p><p><strong>2\uFF09LinkedList</strong></p><p>LinkedList \u5220\u9664\u5143\u7D20\u7684\u65F6\u5019\uFF0C\u6709\u56DB\u79CD\u5E38\u7528\u7684\u65B9\u5F0F\uFF1A</p><ul><li><code>remove(int)</code>\uFF0C\u5220\u9664\u6307\u5B9A\u4F4D\u7F6E\u4E0A\u7684\u5143\u7D20</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkElementIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5148\u68C0\u67E5\u7D22\u5F15\uFF0C\u518D\u8C03\u7528 <code>node(int)</code> \u65B9\u6CD5\uFF08 \u524D\u540E\u534A\u6BB5\u904D\u5386\uFF0C\u548C\u65B0\u589E\u5143\u7D20\u64CD\u4F5C\u4E00\u6837\uFF09\u627E\u5230\u8282\u70B9 Node\uFF0C\u7136\u540E\u8C03\u7528 <code>unlink(Node)</code> \u89E3\u9664\u8282\u70B9\u7684\u524D\u540E\u5F15\u7528\uFF0C\u540C\u65F6\u66F4\u65B0\u524D\u8282\u70B9\u7684\u540E\u5F15\u7528\u548C\u540E\u8282\u70B9\u7684\u524D\u5F15\u7528\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token class-name">E</span> <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// assert x != null;</span>
        <span class="token keyword">final</span> <span class="token class-name">E</span> element <span class="token operator">=</span> x<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev <span class="token operator">=</span> x<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>prev <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            first <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            prev<span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
            x<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            last <span class="token operator">=</span> prev<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            next<span class="token punctuation">.</span>prev <span class="token operator">=</span> prev<span class="token punctuation">;</span>
            x<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        x<span class="token punctuation">.</span>item <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        size<span class="token operator">--</span><span class="token punctuation">;</span>
        modCount<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> element<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>remove(Object)</code>\uFF0C\u76F4\u63A5\u5220\u9664\u5143\u7D20</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>item <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">unlink</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">unlink</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u662F\u5148\u524D\u540E\u534A\u6BB5\u904D\u5386\uFF0C\u627E\u5230\u8981\u5220\u9664\u7684\u5143\u7D20\u540E\u8C03\u7528 <code>unlink(Node)</code>\u3002</p><ul><li><code>removeFirst()</code>\uFF0C\u5220\u9664\u7B2C\u4E00\u4E2A\u8282\u70B9</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">removeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> f <span class="token operator">=</span> first<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">unlinkFirst</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token class-name">E</span> <span class="token function">unlinkFirst</span><span class="token punctuation">(</span><span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// assert f == first &amp;&amp; f != null;</span>
    <span class="token keyword">final</span> <span class="token class-name">E</span> element <span class="token operator">=</span> f<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> f<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    f<span class="token punctuation">.</span>item <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    f<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// help GC</span>
    first <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        last <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        next<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    size<span class="token operator">--</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5220\u9664\u7B2C\u4E00\u4E2A\u8282\u70B9\u5C31\u4E0D\u9700\u8981\u904D\u5386\u4E86\uFF0C\u53EA\u9700\u8981\u628A\u7B2C\u4E8C\u4E2A\u8282\u70B9\u66F4\u65B0\u4E3A\u7B2C\u4E00\u4E2A\u8282\u70B9\u5373\u53EF\u3002</p><ul><li><code>removeLast()</code>\uFF0C\u5220\u9664\u6700\u540E\u4E00\u4E2A\u8282\u70B9</li></ul><p>\u5220\u9664\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u548C\u5220\u9664\u7B2C\u4E00\u4E2A\u8282\u70B9\u7C7B\u4F3C\uFF0C\u53EA\u9700\u8981\u628A\u5012\u6570\u7B2C\u4E8C\u4E2A\u8282\u70B9\u66F4\u65B0\u4E3A\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u5373\u53EF\u3002</p><p>\u53EF\u4EE5\u770B\u5F97\u51FA\uFF0CLinkedList \u5728\u5220\u9664\u6BD4\u8F83\u9760\u524D\u548C\u6BD4\u8F83\u9760\u540E\u7684\u5143\u7D20\u65F6\uFF0C\u975E\u5E38\u9AD8\u6548\uFF0C\u4F46\u5982\u679C\u5220\u9664\u7684\u662F\u4E2D\u95F4\u4F4D\u7F6E\u7684\u5143\u7D20\uFF0C\u6548\u7387\u5C31\u6BD4\u8F83\u4F4E\u4E86\u3002</p><p>\u8FD9\u91CC\u5C31\u4E0D\u518D\u505A\u4EE3\u7801\u6D4B\u8BD5\u4E86\uFF0C\u611F\u5174\u8DA3\u7684\u5C0F\u4F19\u4F34\u53EF\u4EE5\u81EA\u5DF1\u8BD5\u8BD5\uFF0C\u7ED3\u679C\u548C\u65B0\u589E\u5143\u7D20\u4FDD\u6301\u4E00\u81F4\uFF1A</p><ul><li><p>\u4ECE\u96C6\u5408\u5934\u90E8\u5220\u9664\u5143\u7D20\u65F6\uFF0CArrayList \u82B1\u8D39\u7684\u65F6\u95F4\u6BD4 LinkedList \u591A\u5F88\u591A\uFF1B</p></li><li><p>\u4ECE\u96C6\u5408\u4E2D\u95F4\u4F4D\u7F6E\u5220\u9664\u5143\u7D20\u65F6\uFF0CArrayList \u82B1\u8D39\u7684\u65F6\u95F4\u6BD4 LinkedList \u5C11\u5F88\u591A\uFF1B</p></li><li><p>\u4ECE\u96C6\u5408\u5C3E\u90E8\u5220\u9664\u5143\u7D20\u65F6\uFF0CArrayList \u82B1\u8D39\u7684\u65F6\u95F4\u6BD4 LinkedList \u5C11\u4E00\u70B9\u3002</p></li></ul><p>\u6211\u672C\u5730\u7684\u7EDF\u8BA1\u7ED3\u679C\u5982\u4E0B\u6240\u793A\uFF0C\u5C0F\u4F19\u4F34\u4EEC\u53EF\u4EE5\u4F5C\u4E3A\u53C2\u8003\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ArrayList\u4ECE\u96C6\u5408\u5934\u90E8\u4F4D\u7F6E\u5220\u9664\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F4380
LinkedList\u4ECE\u96C6\u5408\u5934\u90E8\u4F4D\u7F6E\u5220\u9664\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F44
ArrayList\u4ECE\u96C6\u5408\u4E2D\u95F4\u4F4D\u7F6E\u5220\u9664\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F4381
LinkedList\u4ECE\u96C6\u5408\u4E2D\u95F4\u4F4D\u7F6E\u5220\u9664\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F45922
ArrayList\u4ECE\u96C6\u5408\u5C3E\u90E8\u4F4D\u7F6E\u5220\u9664\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F48
LinkedList\u4ECE\u96C6\u5408\u5C3E\u90E8\u4F4D\u7F6E\u5220\u9664\u5143\u7D20\u82B1\u8D39\u7684\u65F6\u95F412
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_05\u3001arraylist-\u548C-linkedlist-\u904D\u5386\u5143\u7D20\u65F6\u7A76\u7ADF\u8C01\u5FEB" tabindex="-1"><a class="header-anchor" href="#_05\u3001arraylist-\u548C-linkedlist-\u904D\u5386\u5143\u7D20\u65F6\u7A76\u7ADF\u8C01\u5FEB" aria-hidden="true">#</a> 05\u3001ArrayList \u548C LinkedList \u904D\u5386\u5143\u7D20\u65F6\u7A76\u7ADF\u8C01\u5FEB\uFF1F</h3><p><strong>1\uFF09ArrayList</strong></p><p>\u904D\u5386 ArrayList \u627E\u5230\u67D0\u4E2A\u5143\u7D20\u7684\u8BDD\uFF0C\u901A\u5E38\u6709\u4E24\u79CD\u5F62\u5F0F\uFF1A</p><ul><li><code>get(int)</code>\uFF0C\u6839\u636E\u7D22\u5F15\u627E\u5143\u7D20</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">checkIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">elementData</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E ArrayList \u662F\u7531\u6570\u7EC4\u5B9E\u73B0\u7684\uFF0C\u6240\u4EE5\u6839\u636E\u7D22\u5F15\u627E\u5143\u7D20\u975E\u5E38\u7684\u5FEB\uFF0C\u4E00\u6B65\u5230\u4F4D\u3002</p><ul><li><code>indexOf(Object)</code>\uFF0C\u6839\u636E\u5143\u7D20\u627E\u7D22\u5F15</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">indexOfRange</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">indexOfRange</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> es <span class="token operator">=</span> elementData<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>es<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>es<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E\u5143\u7D20\u627E\u7D22\u5F15\u7684\u8BDD\uFF0C\u5C31\u9700\u8981\u904D\u5386\u6574\u4E2A\u6570\u7EC4\u4E86\uFF0C\u4ECE\u5934\u5230\u5C3E\u4F9D\u6B21\u627E\u3002</p><p><strong>2\uFF09LinkedList</strong></p><p>\u904D\u5386 LinkedList \u627E\u5230\u67D0\u4E2A\u5143\u7D20\u7684\u8BDD\uFF0C\u901A\u5E38\u4E5F\u6709\u4E24\u79CD\u5F62\u5F0F\uFF1A</p><ul><li><code>get(int)</code>\uFF0C\u627E\u6307\u5B9A\u4F4D\u7F6E\u4E0A\u7684\u5143\u7D20</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkElementIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65E2\u7136\u9700\u8981\u8C03\u7528 <code>node(int)</code> \u65B9\u6CD5\uFF0C\u5C31\u610F\u5473\u7740\u9700\u8981\u524D\u540E\u534A\u6BB5\u904D\u5386\u4E86\u3002</p><ul><li><code>indexOf(Object)</code>\uFF0C\u627E\u5143\u7D20\u6240\u5728\u7684\u4F4D\u7F6E</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>item <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> index<span class="token punctuation">;</span>
            index<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span> x <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> index<span class="token punctuation">;</span>
            index<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u904D\u5386\u6574\u4E2A\u94FE\u8868\uFF0C\u548C ArrayList \u7684 <code>indexOf()</code> \u7C7B\u4F3C\u3002</p><p>\u90A3\u5728\u6211\u4EEC\u5BF9\u96C6\u5408\u904D\u5386\u7684\u65F6\u5019\uFF0C\u901A\u5E38\u6709\u4E24\u79CD\u505A\u6CD5\uFF0C\u4E00\u79CD\u662F\u4F7F\u7528 for \u5FAA\u73AF\uFF0C\u4E00\u79CD\u662F\u4F7F\u7528\u8FED\u4EE3\u5668\uFF08Iterator\uFF09\u3002</p><p>\u5982\u679C\u4F7F\u7528\u7684\u662F for \u5FAA\u73AF\uFF0C\u53EF\u60F3\u800C\u77E5 LinkedList \u5728 get \u7684\u65F6\u5019\u6027\u80FD\u4F1A\u975E\u5E38\u5DEE\uFF0C\u56E0\u4E3A\u6BCF\u4E00\u6B21\u5916\u5C42\u7684 for \u5FAA\u73AF\uFF0C\u90FD\u8981\u6267\u884C\u4E00\u6B21 <code>node(int)</code> \u65B9\u6CD5\u8FDB\u884C\u524D\u540E\u534A\u6BB5\u7684\u904D\u5386\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">node</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// assert isElementIndex(index);</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> last<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> index<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
            x <span class="token operator">=</span> x<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u5982\u679C\u4F7F\u7528\u7684\u662F\u8FED\u4EE3\u5668\u5462\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> it <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FED\u4EE3\u5668\u53EA\u4F1A\u8C03\u7528\u4E00\u6B21 <code>node(int)</code> \u65B9\u6CD5\uFF0C\u5728\u6267\u884C <code>list.iterator()</code> \u7684\u65F6\u5019\uFF1A\u5148\u8C03\u7528 AbstractSequentialList \u7C7B\u7684 <code>iterator()</code> \u65B9\u6CD5\uFF0C\u518D\u8C03\u7528 AbstractList \u7C7B\u7684 <code>listIterator()</code> \u65B9\u6CD5\uFF0C\u518D\u8C03\u7528 LinkedList \u7C7B\u7684 <code>listIterator(int)</code> \u65B9\u6CD5\uFF0C\u5982\u4E0B\u56FE\u6240\u793A\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/list-war-2-04.png" alt="" loading="lazy"></p><p>\u6700\u540E\u8FD4\u56DE\u7684\u662F LinkedList \u7C7B\u7684\u5185\u90E8\u79C1\u6709\u7C7B ListItr \u5BF9\u8C61\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkPositionIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>ListItr</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">ListItr</span> <span class="token keyword">implements</span> <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> lastReturned<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">LinkedList<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> nextIndex<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> expectedModCount <span class="token operator">=</span> modCount<span class="token punctuation">;</span>

    <span class="token class-name">ListItr</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// assert isPositionIndex(index);</span>
        next <span class="token operator">=</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> size<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        nextIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> nextIndex <span class="token operator">&lt;</span> size<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        lastReturned <span class="token operator">=</span> next<span class="token punctuation">;</span>
        next <span class="token operator">=</span> next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        nextIndex<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> lastReturned<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C ListItr \u7684\u6784\u9020\u65B9\u6CD5\u65F6\u8C03\u7528\u4E86\u4E00\u6B21 <code>node(int)</code> \u65B9\u6CD5\uFF0C\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u8282\u70B9\u3002\u5728\u6B64\u4E4B\u540E\uFF0C\u8FED\u4EE3\u5668\u5C31\u6267\u884C <code>hasNext()</code> \u5224\u65AD\u6709\u6CA1\u6709\u4E0B\u4E00\u4E2A\uFF0C\u6267\u884C <code>next()</code> \u65B9\u6CD5\u4E0B\u4E00\u4E2A\u8282\u70B9\u3002</p><p>\u7531\u6B64\uFF0C\u53EF\u4EE5\u5F97\u51FA\u8FD9\u6837\u7684\u7ED3\u8BBA\uFF1A<strong>\u904D\u5386 LinkedList \u7684\u65F6\u5019\uFF0C\u5343\u4E07\u4E0D\u8981\u4F7F\u7528 for \u5FAA\u73AF\uFF0C\u8981\u4F7F\u7528\u8FED\u4EE3\u5668\u3002</strong></p><p>\u4E5F\u5C31\u662F\u8BF4\uFF0Cfor \u5FAA\u73AF\u904D\u5386\u7684\u65F6\u5019\uFF0CArrayList \u82B1\u8D39\u7684\u65F6\u95F4\u8FDC\u5C0F\u4E8E LinkedList\uFF1B\u8FED\u4EE3\u5668\u904D\u5386\u7684\u65F6\u5019\uFF0C\u4E24\u8005\u6027\u80FD\u5DEE\u4E0D\u591A\u3002</p><h3 id="_06\u3001\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#_06\u3001\u603B\u7ED3" aria-hidden="true">#</a> 06\u3001\u603B\u7ED3</h3><p>\u82B1\u4E86\u4E24\u5929\u65F6\u95F4\uFF0C\u7EC8\u4E8E\u809D\u5B8C\u4E86\uFF01\u76F8\u4FE1\u770B\u5B8C\u8FD9\u7BC7\u6587\u7AE0\u540E\uFF0C\u518D\u6709\u9762\u8BD5\u5B98\u95EE\u4F60 ArrayList \u548C LinkedList \u6709\u4EC0\u4E48\u533A\u522B\u7684\u8BDD\uFF0C\u4F60\u4E00\u5B9A\u4F1A\u80F8\u6709\u6210\u7AF9\u5730\u548C\u4ED6\u626F\u4E0A\u534A\u5C0F\u65F6\u4E86\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/xingbiaogongzhonghao.png" alt="" loading="lazy"></p>`,141),o=[e];function c(l,i){return s(),a("div",null,o)}var r=n(t,[["render",c],["__file","list-war-2.html.vue"]]);export{r as default};
