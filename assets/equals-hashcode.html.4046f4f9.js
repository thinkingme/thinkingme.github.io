import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.9b6c14fa.js";const t={},e=p(`<h1 id="\u4E00\u6B21\u6027\u641E\u6E05\u695Aequals\u548Chashcode" tabindex="-1"><a class="header-anchor" href="#\u4E00\u6B21\u6027\u641E\u6E05\u695Aequals\u548Chashcode" aria-hidden="true">#</a> \u4E00\u6B21\u6027\u641E\u6E05\u695Aequals\u548ChashCode</h1><p>\u201C\u4E8C\u54E5\uFF0C\u6211\u5728\u8BFB\u300AEffective Java\u300B \u7684\u65F6\u5019\uFF0C\u7B2C 11 \u6761\u89C4\u7EA6\u8BF4\u91CD\u5199 equals \u7684\u65F6\u5019\u5FC5\u987B\u8981\u91CD\u5199 hashCode \u65B9\u6CD5\uFF0C\u8FD9\u662F\u4E3A\u4EC0\u4E48\u5440\uFF1F\u201D\u4E09\u59B9\u5355\u5200\u76F4\u5165\u5730\u95EE\u3002</p><p>\u201C\u4E09\u59B9\u554A\uFF0C\u8FD9\u4E2A\u95EE\u9898\u95EE\u5F97\u975E\u5E38\u597D\uFF0C\u56E0\u4E3A\u5B83\u4E5F\u662F\u9762\u8BD5\u4E2D\u7ECF\u5E38\u8003\u7684\u4E00\u4E2A\u77E5\u8BC6\u70B9\u3002\u4ECA\u5929\u54E5\u5C31\u5E26\u4F60\u6765\u68B3\u7406\u4E00\u4E0B\u3002\u201D\u6211\u8BF4\u3002</p><p>Java \u662F\u4E00\u95E8\u9762\u5411\u5BF9\u8C61\u7684\u7F16\u7A0B\u8BED\u8A00\uFF0C\u6240\u6709\u7684\u7C7B\u90FD\u4F1A\u9ED8\u8BA4\u7EE7\u627F\u81EA Object \u7C7B\uFF0C\u800C Object \u7684\u4E2D\u6587\u610F\u601D\u5C31\u662F\u201C\u5BF9\u8C61\u201D\u3002</p><p>Object \u7C7B\u4E2D\u6709\u8FD9\u4E48\u4E24\u4E2A\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1\uFF09hashCode \u65B9\u6CD5</p><p>\u8FD9\u662F\u4E00\u4E2A\u672C\u5730\u65B9\u6CD5\uFF0C\u7528\u6765\u8FD4\u56DE\u5BF9\u8C61\u7684\u54C8\u5E0C\u503C\uFF08\u4E00\u4E2A\u6574\u6570\uFF09\u3002\u5728 Java \u7A0B\u5E8F\u6267\u884C\u671F\u95F4\uFF0C\u5BF9\u540C\u4E00\u4E2A\u5BF9\u8C61\u591A\u6B21\u8C03\u7528\u8BE5\u65B9\u6CD5\u5FC5\u987B\u8FD4\u56DE\u76F8\u540C\u7684\u54C8\u5E0C\u503C\u3002</p><p>2\uFF09equals \u65B9\u6CD5</p><p>\u5BF9\u4E8E\u4EFB\u4F55\u975E\u7A7A\u5F15\u7528 x \u548C y\uFF0C\u5F53\u4E14\u4EC5\u5F53 x \u548C y \u5F15\u7528\u7684\u662F\u540C\u4E00\u4E2A\u5BF9\u8C61\u65F6\uFF0Cequals \u65B9\u6CD5\u624D\u8FD4\u56DE true\u3002</p><p>\u201C\u4E8C\u54E5\uFF0C\u770B\u8D77\u6765\u4E24\u4E2A\u65B9\u6CD5\u4E4B\u95F4\u6CA1\u6709\u4EFB\u4F55\u5173\u8054\u554A\uFF1F\u201D\u4E09\u59B9\u8D28\u7591\u9053\u3002</p><p>\u201C\u5355\u4ECE\u8FD9\u4E24\u6BB5\u89E3\u91CA\u4E0A\u6765\u770B\uFF0C\u7684\u786E\u662F\u8FD9\u6837\u7684\u3002\u201D\u6211\u89E3\u91CA\u9053\uFF0C\u201C\u4F46\u4E24\u4E2A\u65B9\u6CD5\u7684 doc \u6587\u6863\u4E2D\u8FD8\u6709\u8FD9\u6837\u4E24\u6761\u4FE1\u606F\u3002\u201D</p><p>\u7B2C\u4E00\uFF0C\u5982\u679C\u4E24\u4E2A\u5BF9\u8C61\u8C03\u7528 equals \u65B9\u6CD5\u8FD4\u56DE\u7684\u7ED3\u679C\u4E3A true\uFF0C\u90A3\u4E48\u4E24\u4E2A\u5BF9\u8C61\u8C03\u7528 hashCode \u65B9\u6CD5\u8FD4\u56DE\u7684\u7ED3\u679C\u4E5F\u5FC5\u7136\u76F8\u540C\u2014\u2014\u6765\u81EA hashCode \u65B9\u6CD5\u7684 doc \u6587\u6863\u3002</p><p>\u7B2C\u4E8C\uFF0C\u6BCF\u5F53\u91CD\u5199 equals \u65B9\u6CD5\u65F6\uFF0ChashCode \u65B9\u6CD5\u4E5F\u9700\u8981\u91CD\u5199\uFF0C\u4EE5\u4FBF\u7EF4\u62A4\u4E0A\u4E00\u6761\u89C4\u7EA6\u3002</p><p>\u201C\u54E6\uFF0C\u8FD9\u6837\u8BB2\u7684\u8BDD\uFF0C\u4E24\u4E2A\u65B9\u6CD5\u786E\u5B9E\u5173\u8054\u4E0A\u4E86\uFF0C\u4F46\u7A76\u7ADF\u662F\u4E3A\u4EC0\u4E48\u5462\uFF1F\u201D\u4E09\u59B9\u629B\u51FA\u4E86\u7EC8\u6781\u4E00\u95EE\u3002</p><p>\u201ChashCode \u65B9\u6CD5\u7684\u4F5C\u7528\u662F\u7528\u6765\u83B7\u53D6\u54C8\u5E0C\u503C\uFF0C\u800C\u8BE5\u54C8\u5E0C\u503C\u7684\u4F5C\u7528\u662F\u7528\u6765\u786E\u5B9A\u5BF9\u8C61\u5728\u54C8\u5E0C\u8868\u4E2D\u7684\u7D22\u5F15\u4F4D\u7F6E\u3002\u201D\u6211\u8BF4\u3002</p><p>\u54C8\u5E0C\u8868\u7684\u5178\u578B\u4EE3\u8868\u5C31\u662F HashMap\uFF0C\u5B83\u5B58\u50A8\u7684\u662F\u952E\u503C\u5BF9\uFF0C\u80FD\u6839\u636E\u952E\u5FEB\u901F\u5730\u68C0\u7D22\u51FA\u5BF9\u5E94\u7684\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662F HashMap \u7684 get \u65B9\u6CD5\uFF0C\u901A\u8FC7\u952E\u6765\u83B7\u53D6\u503C\u7684\u65B9\u6CD5\u3002\u5B83\u4F1A\u8C03\u7528 getNode \u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">,</span> e<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span>first <span class="token operator">=</span> tab<span class="token punctuation">[</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>first<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> <span class="token comment">// always check first node</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> first<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> first<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token keyword">instanceof</span> <span class="token class-name">HashMap<span class="token punctuation">.</span>TreeNode</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HashMap<span class="token punctuation">.</span>TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>first<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTreeNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">do</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                        <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u5E38\u60C5\u51B5\uFF08\u6CA1\u6709\u53D1\u751F\u54C8\u5E0C\u51B2\u7A81\uFF09\u4E0B\uFF0C<code>first = tab[(n - 1) &amp; hash]</code> \u5C31\u662F\u952E\u5BF9\u5E94\u7684\u503C\u3002<strong>\u6309\u7167\u65F6\u95F4\u590D\u6742\u5EA6\u6765\u8BF4\u7684\u8BDD\uFF0C\u53EF\u8868\u793A\u4E3A O(1)</strong>\u3002</p><p>\u5982\u679C\u53D1\u751F\u54C8\u5E0C\u51B2\u7A81\uFF0C\u4E5F\u5C31\u662F <code>if ((e = first.next) != null) {}</code> \u5B50\u53E5\u4E2D\uFF0C\u53EF\u4EE5\u770B\u5230\u5982\u679C\u8282\u70B9\u4E0D\u662F\u7EA2\u9ED1\u6811\u7684\u65F6\u5019\uFF0C\u4F1A\u901A\u8FC7 do-while \u5FAA\u73AF\u8BED\u53E5\u5224\u65AD\u952E\u662F\u5426 equals \u8FD4\u56DE\u5BF9\u5E94\u503C\u7684\u3002<strong>\u6309\u7167\u65F6\u95F4\u590D\u6742\u5EA6\u6765\u8BF4\u7684\u8BDD\uFF0C\u53EF\u8868\u793A\u4E3A O(n)</strong>\u3002</p><p>HashMap \u662F\u901A\u8FC7\u62C9\u94FE\u6CD5\u6765\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u7684\uFF0C\u4E5F\u5C31\u662F\u5982\u679C\u53D1\u751F\u54C8\u5E0C\u51B2\u7A81\uFF0C\u540C\u4E00\u4E2A\u952E\u7684\u5751\u4F4D\u4F1A\u653E\u597D\u591A\u4E2A\u503C\uFF0C\u8D85\u8FC7 8 \u4E2A\u503C\u540E\u6539\u4E3A\u7EA2\u9ED1\u6811\uFF0C\u4E3A\u4E86\u63D0\u9AD8\u67E5\u8BE2\u7684\u6548\u7387\u3002</p><p>\u663E\u7136\uFF0C\u4ECE\u65F6\u95F4\u590D\u6742\u5EA6\u4E0A\u6765\u770B\u7684\u8BDD O(n) \u6BD4 O(1) \u7684\u6027\u80FD\u8981\u5DEE\uFF0C\u8FD9\u4E5F\u6B63\u662F\u54C8\u5E0C\u8868\u7684\u4EF7\u503C\u6240\u5728\u3002</p><p>\u201CO(n) \u548C O(1) \u662F\u4EC0\u4E48\u5440\uFF1F\u201D\u4E09\u59B9\u6709\u4E9B\u4E0D\u89E3\u3002</p><p>\u201C\u8FD9\u662F\u65F6\u95F4\u590D\u6742\u5EA6\u7684\u4E00\u79CD\u8868\u793A\u65B9\u6CD5\uFF0C\u968F\u540E\u4E8C\u54E5\u4E13\u95E8\u7ED9\u4F60\u8BB2\u4E00\u4E0B\u3002\u7B80\u5355\u8BF4\u4E00\u4E0B n \u548C 1 \u7684\u610F\u601D\uFF0C\u5F88\u663E\u7136\uFF0Cn \u548C 1 \u90FD\u4EE3\u8868\u7684\u662F\u4EE3\u7801\u6267\u884C\u7684\u6B21\u6570\uFF0C\u5047\u5982\u6570\u636E\u89C4\u6A21\u4E3A n\uFF0Cn \u5C31\u4EE3\u8868\u9700\u8981\u6267\u884C n \u6B21\uFF0C1 \u5C31\u4EE3\u8868\u53EA\u9700\u8981\u6267\u884C\u4E00\u6B21\u3002\u201D\u6211\u89E3\u91CA\u9053\u3002</p><p>\u201C\u4E09\u59B9\uFF0C\u4F60\u60F3\u4E00\u4E0B\uFF0C\u5982\u679C\u6CA1\u6709\u54C8\u5E0C\u8868\uFF0C\u4F46\u53C8\u9700\u8981\u8FD9\u6837\u4E00\u4E2A\u6570\u636E\u7ED3\u6784\uFF0C\u5B83\u91CC\u9762\u5B58\u653E\u7684\u6570\u636E\u662F\u4E0D\u5141\u8BB8\u91CD\u590D\u7684\uFF0C\u8BE5\u600E\u4E48\u529E\u5462\uFF1F\u201D\u6211\u95EE\u3002</p><p>\u201C\u8981\u4E0D\u4F7F\u7528 equals \u65B9\u6CD5\u8FDB\u884C\u9010\u4E2A\u6BD4\u8F83\uFF1F\u201D\u4E09\u59B9\u6709\u4E9B\u4E0D\u592A\u786E\u5B9A\u3002</p><p>\u201C\u8FD9\u79CD\u65B9\u6CD5\u5F53\u7136\u662F\u53EF\u884C\u7684\uFF0C\u5C31\u50CF <code>if ((e = first.next) != null) {}</code> \u5B50\u53E5\u4E2D\u90A3\u6837\uFF0C\u4F46\u5982\u679C\u6570\u636E\u91CF\u7279\u522B\u7279\u522B\u5927\uFF0C\u6027\u80FD\u5C31\u4F1A\u5F88\u5DEE\uFF0C\u6700\u597D\u7684\u89E3\u51B3\u65B9\u6848\u8FD8\u662F HashMap\u3002\u201D</p><p>HashMap \u672C\u8D28\u4E0A\u662F\u901A\u8FC7\u6570\u7EC4\u5B9E\u73B0\u7684\uFF0C\u5F53\u6211\u4EEC\u8981\u4ECE HashMap \u4E2D\u83B7\u53D6\u67D0\u4E2A\u503C\u65F6\uFF0C\u5B9E\u9645\u4E0A\u662F\u8981\u83B7\u53D6\u6570\u7EC4\u4E2D\u67D0\u4E2A\u4F4D\u7F6E\u7684\u5143\u7D20\uFF0C\u800C\u4F4D\u7F6E\u662F\u901A\u8FC7\u952E\u6765\u786E\u5B9A\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662F HashMap \u7684 put \u65B9\u6CD5\uFF0C\u4F1A\u5C06\u952E\u503C\u5BF9\u653E\u5165\u5230\u6570\u7EC4\u5F53\u4E2D\u3002\u5B83\u4F1A\u8C03\u7528 putVal \u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">,</span>
               <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        n <span class="token operator">=</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u62C9\u94FE</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C<code>p = tab[i = (n - 1) &amp; hash])</code> \u5C31\u662F\u952E\u5BF9\u5E94\u7684\u503C\u3002\u800C\u6570\u7EC4\u7684\u7D22\u5F15 <code>(n - 1) &amp; hash</code> \u6B63\u662F\u57FA\u4E8E hashCode \u65B9\u6CD5\u8BA1\u7B97\u5F97\u5230\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u201C\u90A3\u4E8C\u54E5\uFF0C\u4F60\u597D\u50CF\u8FD8\u662F\u6CA1\u6709\u8BF4\u4E3A\u4EC0\u4E48\u91CD\u5199 equals \u65B9\u6CD5\u7684\u65F6\u5019\u8981\u91CD\u5199 hashCode \u65B9\u6CD5\u5440\uFF1F\u201D\u4E09\u59B9\u5FCD\u4E0D\u4F4F\u4E86\u3002</p><p>\u201C\u6765\u770B\u4E0B\u9762\u8FD9\u6BB5\u4EE3\u7801\u3002\u201D\u6211\u8BF4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Student</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> scores <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        scores<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Student</span> s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>scores<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

     <span class="token keyword">public</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
     <span class="token punctuation">}</span>

     <span class="token annotation punctuation">@Override</span>
     <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">)</span> o<span class="token punctuation">;</span>
         <span class="token keyword">return</span> age <span class="token operator">==</span> student<span class="token punctuation">.</span>age <span class="token operator">&amp;&amp;</span>
                 <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> student<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u91CD\u5199\u4E86 Student \u7C7B\u7684 equals \u65B9\u6CD5\uFF0C\u5982\u679C\u4E24\u4E2A\u5B66\u751F\u7684\u5E74\u7EAA\u548C\u59D3\u540D\u76F8\u540C\uFF0C\u6211\u4EEC\u5C31\u8BA4\u4E3A\u662F\u540C\u4E00\u4E2A\u5B66\u751F\uFF0C\u867D\u7136\u5F88\u79BB\u8C31\uFF0C\u4F46\u6211\u4EEC\u5C31\u662F\u8FD9\u4E48\u8349\u7387\u3002</p><p>\u5728 main \u65B9\u6CD5\u4E2D\uFF0C18 \u5C81\u7684\u5F20\u4E09\u8003\u8BD5\u5F97\u4E86 98 \u5206\uFF0C\u5F88\u4E0D\u9519\u7684\u6210\u7EE9\uFF0C\u6211\u4EEC\u628A\u5F20\u4E09\u548C\u4ED6\u7684\u6210\u7EE9\u653E\u5230 HashMap \u4E2D\uFF0C\u7136\u540E\u51C6\u5907\u53D6\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u201C\u4E8C\u54E5\uFF0C\u600E\u4E48\u8F93\u51FA\u4E86 null\uFF0C\u800C\u4E0D\u662F\u9884\u671F\u5F53\u4E2D\u7684 98 \u5462\uFF1F\u201D\u4E09\u59B9\u611F\u5230\u5F88\u4E0D\u53EF\u601D\u8BAE\u3002</p><p>\u201C\u539F\u56E0\u5C31\u5728\u4E8E\u91CD\u5199 equals \u65B9\u6CD5\u7684\u65F6\u5019\u6CA1\u6709\u91CD\u5199 hashCode \u65B9\u6CD5\u3002\u201D\u6211\u56DE\u7B54\u9053\uFF0C\u201Cequals \u65B9\u6CD5\u867D\u7136\u8BA4\u5B9A\u540D\u5B57\u548C\u5E74\u7EAA\u76F8\u540C\u5C31\u662F\u540C\u4E00\u4E2A\u5B66\u751F\uFF0C\u4F46\u5B83\u4EEC\u672C\u8D28\u4E0A\u662F\u4E24\u4E2A\u5BF9\u8C61\uFF0ChashCode \u5E76\u4E0D\u76F8\u540C\u3002\u201D</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/core-points/equals-hashcode-01.png" alt="" loading="lazy"></p><p>\u201C\u90A3\u600E\u4E48\u91CD\u5199 hashCode \u65B9\u6CD5\u5462\uFF1F\u201D\u4E09\u59B9\u95EE\u3002</p><p>\u201C\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528 Objects \u7C7B\u7684 hash \u65B9\u6CD5\u3002\u201D\u6211\u56DE\u7B54\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token annotation punctuation">@Override</span>
 <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>age<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Objects \u7C7B\u7684 hash \u65B9\u6CD5\u53EF\u4EE5\u9488\u5BF9\u4E0D\u540C\u6570\u91CF\u7684\u53C2\u6570\u751F\u6210\u65B0\u7684\u54C8\u5E0C\u503C\uFF0Chash \u65B9\u6CD5\u8C03\u7528\u7684\u662F Arrays \u7C7B\u7684 hashCode \u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token class-name">Object</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
     <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>

 <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

 <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Object</span> element <span class="token operator">:</span> a<span class="token punctuation">)</span>
     result <span class="token operator">=</span> <span class="token number">31</span> <span class="token operator">*</span> result <span class="token operator">+</span> <span class="token punctuation">(</span>element <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> element<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E00\u6B21\u5FAA\u73AF\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>result = 31*1 + Integer(18).hashCode();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7B2C\u4E8C\u6B21\u5FAA\u73AF\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>result = (31*1 + Integer(18).hashCode()) * 31 + String(&quot;\u5F20\u4E09&quot;).hashCode();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u9488\u5BF9\u59D3\u540D\u5E74\u7EAA\u4E0D\u540C\u7684\u5BF9\u8C61\uFF0C\u8FD9\u6837\u8BA1\u7B97\u540E\u7684\u54C8\u5E0C\u503C\u5F88\u96BE\u5F88\u96BE\u5F88\u96BE\u91CD\u590D\u7684\uFF1B\u9488\u5BF9\u59D3\u540D\u5E74\u7EAA\u76F8\u540C\u7684\u5BF9\u8C61\uFF0C\u54C8\u5E0C\u503C\u4FDD\u6301\u4E00\u81F4\u3002</p><p>\u518D\u6B21\u6267\u884C main \u65B9\u6CD5\uFF0C\u7ED3\u679C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>98
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u6B64\u65F6 s1 \u548C s2 \u5BF9\u8C61\u7684\u54C8\u5E0C\u503C\u90FD\u4E3A 776408\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/core-points/equals-hashcode-02.png" alt="" loading="lazy"></p><p>\u201C\u6BCF\u5F53\u91CD\u5199 equals \u65B9\u6CD5\u65F6\uFF0ChashCode \u65B9\u6CD5\u4E5F\u9700\u8981\u91CD\u5199\uFF0C\u539F\u56E0\u5C31\u662F\u4E3A\u4E86\u4FDD\u8BC1\uFF1A\u5982\u679C\u4E24\u4E2A\u5BF9\u8C61\u8C03\u7528 equals \u65B9\u6CD5\u8FD4\u56DE\u7684\u7ED3\u679C\u4E3A true\uFF0C\u90A3\u4E48\u4E24\u4E2A\u5BF9\u8C61\u8C03\u7528 hashCode \u65B9\u6CD5\u8FD4\u56DE\u7684\u7ED3\u679C\u4E5F\u5FC5\u7136\u76F8\u540C\u3002\u201D\u6211\u70B9\u9898\u4E86\u3002</p><p>\u201COK\uFF0Cget \u4E86\u3002\u201D\u4E09\u59B9\u5F00\u5FC3\u5730\u70B9\u4E86\u70B9\u5934\uFF0C\u770B\u5F97\u51FA\u6765\uFF0C\u4ECA\u5929\u5B66\u5230\u4E86\u4E0D\u5C11\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/xingbiaogongzhonghao.png" alt="" loading="lazy"></p>`,61),o=[e];function c(l,u){return s(),a("div",null,o)}var r=n(t,[["render",c],["__file","equals-hashcode.html.vue"]]);export{r as default};
