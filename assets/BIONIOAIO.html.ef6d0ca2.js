import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as e,c as o,b as n,a as c,e as l,d as s}from"./app.9b6c14fa.js";const i={},u=l(`<h1 id="\u5982\u4F55\u7ED9\u5973\u670B\u53CB\u89E3\u91CA\u6E05\u695Abio\u3001nio\u548Caio" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u7ED9\u5973\u670B\u53CB\u89E3\u91CA\u6E05\u695Abio\u3001nio\u548Caio" aria-hidden="true">#</a> \u5982\u4F55\u7ED9\u5973\u670B\u53CB\u89E3\u91CA\u6E05\u695ABIO\u3001NIO\u548CAIO\uFF1F</h1><p>\u5468\u672B\u5348\u540E\uFF0C\u5728\u5BB6\u91CC\u9762\u8FDB\u884C\u7535\u8BDD\u9762\u8BD5\uFF0C\u6211\u95EE\u4E86\u9762\u8BD5\u8005\u51E0\u4E2A\u5173\u4E8E IO \u7684\u95EE\u9898\uFF0C\u5176\u4E2D\u5305\u62EC\u4EC0\u4E48\u662F BIO\u3001NIO \u548C AIO\uFF1F\u4E09\u8005\u6709\u4EC0\u4E48\u533A\u522B\uFF1F\u5177\u4F53\u5982\u4F55\u4F7F\u7528\u7B49\u95EE\u9898\uFF0C\u4F46\u662F\u9762\u8BD5\u8005\u56DE\u7B54\u7684\u5E76\u4E0D\u662F\u5F88\u6EE1\u610F\u3002\u4E8E\u662F\u6211\u5728\u9762\u8BD5\u8BC4\u4EF7\u4E2D\u5199\u9053\uFF1A&quot;\u5BF9 Java \u7684 IO \u63D0\u9192\u7406\u89E3\u4E0D\u591F\u6DF1\u5165&quot;\u3002\u6070\u597D\u88AB\u5973\u670B\u53CB\u770B\u5230\u4E86\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-1.jpg" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-2.jpg" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-3.gif" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-4.jpg" alt="" loading="lazy"></p><p>Java IO</p><p>IO\uFF0C\u5E38\u534F\u4F5C I/O\uFF0C\u662F Input/Output \u7684\u7B80\u79F0\uFF0C\u5373\u8F93\u5165/\u8F93\u51FA\u3002\u901A\u5E38\u6307\u6570\u636E\u5728\u5185\u90E8\u5B58\u50A8\u5668\uFF08\u5185\u5B58\uFF09\u548C\u5916\u90E8\u5B58\u50A8\u5668\uFF08\u786C\u76D8\u3001\u4F18\u76D8\u7B49\uFF09\u6216\u5176\u4ED6\u5468\u8FB9\u8BBE\u5907\u4E4B\u95F4\u7684\u8F93\u5165\u548C\u8F93\u51FA\u3002</p><p>\u8F93\u5165/\u8F93\u51FA\u662F\u4FE1\u606F\u5904\u7406\u7CFB\u7EDF\uFF08\u4F8B\u5982\u8BA1\u7B97\u673A\uFF09\u4E0E\u5916\u90E8\u4E16\u754C\uFF08\u53EF\u80FD\u662F\u4EBA\u7C7B\u6216\u53E6\u4E00\u4FE1\u606F\u5904\u7406\u7CFB\u7EDF\uFF09\u4E4B\u95F4\u7684\u901A\u4FE1\u3002</p><p>\u8F93\u5165\u662F\u7CFB\u7EDF\u63A5\u6536\u7684\u4FE1\u53F7\u6216\u6570\u636E\uFF0C\u8F93\u51FA\u5219\u662F\u4ECE\u5176\u53D1\u9001\u7684\u4FE1\u53F7\u6216\u6570\u636E\u3002</p><p>\u5728 Java \u4E2D\uFF0C\u63D0\u4F9B\u4E86\u4E00\u7CFB\u5217 API\uFF0C\u53EF\u4EE5\u4F9B\u5F00\u53D1\u8005\u6765\u8BFB\u5199\u5916\u90E8\u6570\u636E\u6216\u6587\u4EF6\u3002\u6211\u4EEC\u79F0\u8FD9\u4E9B API \u4E3A Java IO\u3002</p><p>IO \u662F Java \u4E2D\u6BD4\u8F83\u91CD\u8981\uFF0C\u4E14\u6BD4\u8F83\u96BE\u7684\u77E5\u8BC6\u70B9\uFF0C\u4E3B\u8981\u662F\u56E0\u4E3A\u968F\u7740 Java \u7684\u53D1\u5C55\uFF0C\u76EE\u524D\u6709\u4E09\u79CD IO \u5171\u5B58\u3002\u5206\u522B\u662F BIO\u3001NIO \u548C AIO\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-5.jpg" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-6.gif" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-7.gif" alt="" loading="lazy"></p><p>Java BIO</p><p>BIO \u5168\u79F0Block-IO \u662F\u4E00\u79CD<strong>\u540C\u6B65\u4E14\u963B\u585E</strong>\u7684\u901A\u4FE1\u6A21\u5F0F\u3002\u662F\u4E00\u4E2A\u6BD4\u8F83\u4F20\u7EDF\u7684\u901A\u4FE1\u65B9\u5F0F\uFF0C\u6A21\u5F0F\u7B80\u5355\uFF0C\u4F7F\u7528\u65B9\u4FBF\u3002\u4F46\u5E76\u53D1\u5904\u7406\u80FD\u529B\u4F4E\uFF0C\u901A\u4FE1\u8017\u65F6\uFF0C\u4F9D\u8D56\u7F51\u901F\u3002</p><p>Java NIO</p><p>Java NIO\uFF0C\u5168\u7A0B Non-Block IO \uFF0C\u662F Java SE 1.4 \u7248\u4EE5\u540E\uFF0C\u9488\u5BF9\u7F51\u7EDC\u4F20\u8F93\u6548\u80FD\u4F18\u5316\u7684\u65B0\u529F\u80FD\u3002\u662F\u4E00\u79CD<strong>\u975E\u963B\u585E\u540C\u6B65</strong>\u7684\u901A\u4FE1\u6A21\u5F0F\u3002</p><p>NIO \u4E0E\u539F\u6765\u7684 I/O \u6709\u540C\u6837\u7684\u4F5C\u7528\u548C\u76EE\u7684, \u4ED6\u4EEC\u4E4B\u95F4\u6700\u91CD\u8981\u7684\u533A\u522B\u662F\u6570\u636E\u6253\u5305\u548C\u4F20\u8F93\u7684\u65B9\u5F0F\u3002\u539F\u6765\u7684 I/O \u4EE5\u6D41\u7684\u65B9\u5F0F\u5904\u7406\u6570\u636E\uFF0C\u800C NIO \u4EE5\u5757\u7684\u65B9\u5F0F\u5904\u7406\u6570\u636E\u3002</p><p>\u9762\u5411\u6D41\u7684 I/O \u7CFB\u7EDF\u4E00\u6B21\u4E00\u4E2A\u5B57\u8282\u5730\u5904\u7406\u6570\u636E\u3002\u4E00\u4E2A\u8F93\u5165\u6D41\u4EA7\u751F\u4E00\u4E2A\u5B57\u8282\u7684\u6570\u636E\uFF0C\u4E00\u4E2A\u8F93\u51FA\u6D41\u6D88\u8D39\u4E00\u4E2A\u5B57\u8282\u7684\u6570\u636E\u3002</p><p>\u9762\u5411\u5757\u7684 I/O \u7CFB\u7EDF\u4EE5\u5757\u7684\u5F62\u5F0F\u5904\u7406\u6570\u636E\u3002\u6BCF\u4E00\u4E2A\u64CD\u4F5C\u90FD\u5728\u4E00\u6B65\u4E2D\u4EA7\u751F\u6216\u8005\u6D88\u8D39\u4E00\u4E2A\u6570\u636E\u5757\u3002\u6309\u5757\u5904\u7406\u6570\u636E\u6BD4\u6309(\u6D41\u5F0F\u7684)\u5B57\u8282\u5904\u7406\u6570\u636E\u8981\u5FEB\u5F97\u591A\u3002\u4F46\u662F\u9762\u5411\u5757\u7684 I/O \u7F3A\u5C11\u4E00\u4E9B\u9762\u5411\u6D41\u7684 I/O \u6240\u5177\u6709\u7684\u4F18\u96C5\u6027\u548C\u7B80\u5355\u6027\u3002</p><p>Java AIO</p><p>Java AIO\uFF0C\u5168\u7A0B Asynchronous IO\uFF0C\u662F<strong>\u5F02\u6B65\u975E\u963B\u585E</strong>\u7684 IO\u3002\u662F\u4E00\u79CD\u975E\u963B\u585E\u5F02\u6B65\u7684\u901A\u4FE1\u6A21\u5F0F\u3002</p><p>\u5728 NIO \u7684\u57FA\u7840\u4E0A\u5F15\u5165\u4E86\u65B0\u7684\u5F02\u6B65\u901A\u9053\u7684\u6982\u5FF5\uFF0C\u5E76\u63D0\u4F9B\u4E86\u5F02\u6B65\u6587\u4EF6\u901A\u9053\u548C\u5F02\u6B65\u5957\u63A5\u5B57\u901A\u9053\u7684\u5B9E\u73B0\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-8.jpg" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-9.jpg" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-10.jpg" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-11.gif" alt="" loading="lazy"></p><p>\u4E09\u79CD IO \u7684\u533A\u522B</p><p>\u9996\u5148\uFF0C\u6211\u4EEC\u7AD9\u5728\u5B8F\u89C2\u7684\u89D2\u5EA6\uFF0C\u91CD\u65B0\u753B\u4E00\u4E0B\u91CD\u70B9\uFF1A</p><p><strong>BIO \uFF08Blocking I/O\uFF09\uFF1A\u540C\u6B65\u963B\u585E I/O \u6A21\u5F0F\u3002</strong></p><p><strong>NIO \uFF08New I/O\uFF09\uFF1A\u540C\u6B65\u975E\u963B\u585E\u6A21\u5F0F\u3002</strong></p><p><strong>AIO \uFF08Asynchronous I/O\uFF09\uFF1A\u5F02\u6B65\u975E\u963B\u585E I/O \u6A21\u578B\u3002</strong></p><p>\u540C\u6B65\u963B\u585E\u6A21\u5F0F\uFF1A\u8FD9\u79CD\u6A21\u5F0F\u4E0B\uFF0C\u6211\u4EEC\u7684\u5DE5\u4F5C\u6A21\u5F0F\u662F\u5148\u6765\u5230\u53A8\u623F\uFF0C\u5F00\u59CB\u70E7\u6C34\uFF0C\u5E76\u5750\u5728\u6C34\u58F6\u9762\u524D\u4E00\u76F4\u7B49\u7740\u6C34\u70E7\u5F00\u3002</p><p>\u540C\u6B65\u975E\u963B\u585E\u6A21\u5F0F\uFF1A\u8FD9\u79CD\u6A21\u5F0F\u4E0B\uFF0C\u6211\u4EEC\u7684\u5DE5\u4F5C\u6A21\u5F0F\u662F\u5148\u6765\u5230\u53A8\u623F\uFF0C\u5F00\u59CB\u70E7\u6C34\uFF0C\u4F46\u662F\u6211\u4EEC\u4E0D\u4E00\u76F4\u5750\u5728\u6C34\u58F6\u524D\u9762\u7B49\uFF0C\u800C\u662F\u56DE\u5230\u5BA2\u5385\u770B\u7535\u89C6\uFF0C\u7136\u540E\u6BCF\u9694\u51E0\u5206\u949F\u5230\u53A8\u623F\u770B\u4E00\u4E0B\u6C34\u6709\u6CA1\u6709\u70E7\u5F00\u3002</p><p>\u5F02\u6B65\u975E\u963B\u585E I/O \u6A21\u578B\uFF1A\u8FD9\u79CD\u6A21\u5F0F\u4E0B\uFF0C\u6211\u4EEC\u7684\u5DE5\u4F5C\u6A21\u5F0F\u662F\u5148\u6765\u5230\u53A8\u623F\uFF0C\u5F00\u59CB\u70E7\u6C34\uFF0C\u6211\u4EEC\u4E0D\u4E00\u76F4\u5750\u5728\u6C34\u58F6\u524D\u9762\u7B49\uFF0C\u4E5F\u4E0D\u9694\u4E00\u6BB5\u65F6\u95F4\u53BB\u770B\u4E00\u4E0B\uFF0C\u800C\u662F\u5728\u5BA2\u5385\u770B\u7535\u89C6\uFF0C\u6C34\u58F6\u4E0A\u9762\u6709\u4E2A\u5F00\u5173\uFF0C\u6C34\u70E7\u5F00\u4E4B\u540E\u4ED6\u4F1A\u901A\u77E5\u6211\u3002</p><p>\u963B\u585E VS \u975E\u963B\u585E\uFF1A\u4EBA\u662F\u5426\u5750\u5728\u6C34\u58F6\u524D\u9762\u4E00\u76F4\u7B49\u3002</p><p>\u540C\u6B65 VS \u5F02\u6B65\uFF1A\u6C34\u58F6\u662F\u4E0D\u662F\u5728\u6C34\u70E7\u5F00\u4E4B\u540E\u4E3B\u52A8\u901A\u77E5\u4EBA\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-12.gif" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-13.jpg" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-14.jpg" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-15.jpg" alt="" loading="lazy"></p><p>\u9002\u7528\u573A\u666F</p><p>BIO \u65B9\u5F0F\u9002\u7528\u4E8E\u8FDE\u63A5\u6570\u76EE\u6BD4\u8F83\u5C0F\u4E14\u56FA\u5B9A\u7684\u67B6\u6784\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u5BF9\u670D\u52A1\u5668\u8D44\u6E90\u8981\u6C42\u6BD4\u8F83\u9AD8\uFF0C\u5E76\u53D1\u5C40\u9650\u4E8E\u5E94\u7528\u4E2D\uFF0CJDK1.4 \u4EE5\u524D\u7684\u552F\u4E00\u9009\u62E9\uFF0C\u4F46\u7A0B\u5E8F\u76F4\u89C2\u7B80\u5355\u6613\u7406\u89E3\u3002</p><p>NIO \u65B9\u5F0F\u9002\u7528\u4E8E\u8FDE\u63A5\u6570\u76EE\u591A\u4E14\u8FDE\u63A5\u6BD4\u8F83\u77ED\uFF08\u8F7B\u64CD\u4F5C\uFF09\u7684\u67B6\u6784\uFF0C\u6BD4\u5982\u804A\u5929\u670D\u52A1\u5668\uFF0C\u5E76\u53D1\u5C40\u9650\u4E8E\u5E94\u7528\u4E2D\uFF0C\u7F16\u7A0B\u6BD4\u8F83\u590D\u6742\uFF0CJDK1.4 \u5F00\u59CB\u652F\u6301\u3002</p><p>AIO \u65B9\u5F0F\u9002\u7528\u4E8E\u8FDE\u63A5\u6570\u76EE\u591A\u4E14\u8FDE\u63A5\u6BD4\u8F83\u957F\uFF08\u91CD\u64CD\u4F5C\uFF09\u7684\u67B6\u6784\uFF0C\u6BD4\u5982\u76F8\u518C\u670D\u52A1\u5668\uFF0C\u5145\u5206\u8C03\u7528 OS \u53C2\u4E0E\u5E76\u53D1\u64CD\u4F5C\uFF0C\u7F16\u7A0B\u6BD4\u8F83\u590D\u6742\uFF0CJDK7 \u5F00\u59CB\u652F\u6301\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-16.gif" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-17.gif" alt="" loading="lazy"></p><p>\u4F7F\u7528\u65B9\u5F0F</p><p>\u4F7F\u7528 BIO \u5B9E\u73B0\u6587\u4EF6\u7684\u8BFB\u53D6\u548C\u5199\u5165\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//Initializes The Object</span>
<span class="token class-name">User1</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;wanger&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//Write Obj to File</span>
<span class="token class-name">ObjectOutputStream</span> oos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    oos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;tempFile&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    oos<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>oos<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//Read Obj from File</span>
<span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;tempFile&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ObjectInputStream</span> ois <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    ois <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">User1</span> newUser <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User1</span><span class="token punctuation">)</span> ois<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>newUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>ois<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">forceDelete</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 NIO \u5B9E\u73B0\u6587\u4EF6\u7684\u8BFB\u53D6\u548C\u5199\u5165\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">readNIO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> pathname <span class="token operator">=</span> <span class="token string">&quot;C:\\\\Users\\\\adew\\\\Desktop\\\\jd-gui.cfg&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">FileInputStream</span> fin <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        fin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>pathname<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> channel <span class="token operator">=</span> fin<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> capacity <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token comment">// \u5B57\u8282</span>
        <span class="token class-name">ByteBuffer</span> bf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>capacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>length <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            bf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> bf<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        channel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fin <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                fin<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">writeNIO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> filename <span class="token operator">=</span> <span class="token string">&quot;out.txt&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>

        fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> channel <span class="token operator">=</span> fos<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> src <span class="token operator">=</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F60\u597D\u4F60\u597D\u4F60\u597D\u4F60\u597D\u4F60\u597D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>length <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5199\u5165\u957F\u5EA6:&quot;</span> <span class="token operator">+</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fos <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                fos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528AIO\u5B9E\u73B0\u6587\u4EF6\u7684\u8BFB\u53D6\u548C\u5199\u5165</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReadFromFile</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">Path</span> file <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/usr/a.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">AsynchronousFileChannel</span> channel <span class="token operator">=</span> <span class="token class-name">AsynchronousFileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">ByteBuffer</span> buffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">100_000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span><span class="token function">isDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">ProfitCalculator</span><span class="token punctuation">.</span><span class="token function">calculateTax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Integer</span> bytesRead <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Bytes read [&quot;</span> <span class="token operator">+</span> bytesRead <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">ProfitCalculator</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token class-name">ProfitCalculator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">calculateTax</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WriteToFile</span> <span class="token punctuation">{</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">AsynchronousFileChannel</span> fileChannel <span class="token operator">=</span> <span class="token class-name">AsynchronousFileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span>
        <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/asynchronous.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>READ<span class="token punctuation">,</span>
        <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>WRITE<span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>CREATE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CompletionHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CompletionHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">completed</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> result<span class="token punctuation">,</span> <span class="token class-name">Object</span> attachment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Attachment: &quot;</span> <span class="token operator">+</span> attachment <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> result
            <span class="token operator">+</span> <span class="token string">&quot; bytes written&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;CompletionHandler Thread ID: &quot;</span>
            <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">failed</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">,</span> <span class="token class-name">Object</span> attachment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Attachment: &quot;</span> <span class="token operator">+</span> attachment <span class="token operator">+</span> <span class="token string">&quot; failed with:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Main Thread ID: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token string">&quot;Sample&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;First Write&quot;</span><span class="token punctuation">,</span>
        handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token string">&quot;Box&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;Second Write&quot;</span><span class="token punctuation">,</span>
        handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-18.gif" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-19.gif" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-20.gif" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-21.jpg" alt="" loading="lazy"></p><p>\u6EF4\u6EF4\u6EF4\uFF0C\u6C34\u5F00\u4E86\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-22.jpg" alt="" loading="lazy"></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/io/BIONIOAIO-23.jpg" alt="" loading="lazy"></p>`,63),k=s("\u8F6C\u8F7D\u94FE\u63A5\uFF1A"),r={href:"https://mp.weixin.qq.com/s/QQxrr5yP8X9YdFqIwXDoQQ",target:"_blank",rel:"noopener noreferrer"},d=s("https://mp.weixin.qq.com/s/QQxrr5yP8X9YdFqIwXDoQQ"),v=n("img",{src:"http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/xingbiaogongzhonghao.png"},null,-1);function m(b,g){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,n("blockquote",null,[n("p",null,[k,n("a",r,[d,c(a)])])]),v])}var y=t(i,[["render",m],["__file","BIONIOAIO.html.vue"]]);export{y as default};
