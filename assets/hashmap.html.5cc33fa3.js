import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as l,c,b as s,a as p,e as a,d as n}from"./app.9b6c14fa.js";const i={},u=a(`<h1 id="java8\u7CFB\u5217\u4E4B\u91CD\u65B0\u8BA4\u8BC6hashmap" tabindex="-1"><a class="header-anchor" href="#java8\u7CFB\u5217\u4E4B\u91CD\u65B0\u8BA4\u8BC6hashmap" aria-hidden="true">#</a> Java8\u7CFB\u5217\u4E4B\u91CD\u65B0\u8BA4\u8BC6HashMap</h1><h2 id="\u4E00\u3001hash-\u65B9\u6CD5\u7684\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001hash-\u65B9\u6CD5\u7684\u539F\u7406" aria-hidden="true">#</a> \u4E00\u3001hash \u65B9\u6CD5\u7684\u539F\u7406</h2><p>\u6765\u770B\u4E00\u4E0B hash \u65B9\u6CD5\u7684\u6E90\u7801\uFF08JDK 8 \u4E2D\u7684 HashMap\uFF09\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6BB5\u4EE3\u7801\u7A76\u7ADF\u662F\u7528\u6765\u5E72\u561B\u7684\u5462\uFF1F</p><p>\u6211\u4EEC\u90FD\u77E5\u9053\uFF0C<code>key.hashCode()</code> \u662F\u7528\u6765\u83B7\u53D6\u952E\u4F4D\u7684\u54C8\u5E0C\u503C\u7684\uFF0C\u7406\u8BBA\u4E0A\uFF0C\u54C8\u5E0C\u503C\u662F\u4E00\u4E2A int \u7C7B\u578B\uFF0C\u8303\u56F4\u4ECE-2147483648 \u5230 2147483648\u3002\u524D\u540E\u52A0\u8D77\u6765\u5927\u6982 40 \u4EBF\u7684\u6620\u5C04\u7A7A\u95F4\uFF0C\u53EA\u8981\u54C8\u5E0C\u503C\u6620\u5C04\u5F97\u6BD4\u8F83\u5747\u5300\u677E\u6563\uFF0C\u4E00\u822C\u662F\u4E0D\u4F1A\u51FA\u73B0\u54C8\u5E0C\u78B0\u649E\u7684\u3002</p><p>\u4F46\u95EE\u9898\u662F\u4E00\u4E2A 40 \u4EBF\u957F\u5EA6\u7684\u6570\u7EC4\uFF0C\u5185\u5B58\u662F\u653E\u4E0D\u4E0B\u7684\u3002HashMap \u6269\u5BB9\u4E4B\u524D\u7684\u6570\u7EC4\u521D\u59CB\u5927\u5C0F\u53EA\u6709 16\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u54C8\u5E0C\u503C\u662F\u4E0D\u80FD\u76F4\u63A5\u62FF\u6765\u7528\u7684\uFF0C\u7528\u4E4B\u524D\u8981\u548C\u6570\u7EC4\u7684\u957F\u5EA6\u505A\u53D6\u6A21\u8FD0\u7B97\uFF0C\u7528\u5F97\u5230\u7684\u4F59\u6570\u6765\u8BBF\u95EE\u6570\u7EC4\u4E0B\u6807\u624D\u884C\u3002</p><p>\u53D6\u6A21\u8FD0\u7B97\u6709\u4E24\u5904\u3002</p><blockquote><p>\u53D6\u6A21\u8FD0\u7B97\uFF08\u201CModulo Operation\u201D\uFF09\u548C\u53D6\u4F59\u8FD0\u7B97\uFF08\u201CRemainder Operation \u201D\uFF09\u4E24\u4E2A\u6982\u5FF5\u6709\u91CD\u53E0\u7684\u90E8\u5206\u4F46\u53C8\u4E0D\u5B8C\u5168\u4E00\u81F4\u3002\u4E3B\u8981\u7684\u533A\u522B\u5728\u4E8E\u5BF9\u8D1F\u6574\u6570\u8FDB\u884C\u9664\u6CD5\u8FD0\u7B97\u65F6\u64CD\u4F5C\u4E0D\u540C\u3002\u53D6\u6A21\u4E3B\u8981\u662F\u7528\u4E8E\u8BA1\u7B97\u673A\u672F\u8BED\u4E2D\uFF0C\u53D6\u4F59\u5219\u66F4\u591A\u662F\u6570\u5B66\u6982\u5FF5\u3002</p></blockquote><p>\u4E00\u5904\u662F\u5F80 HashMap \u4E2D put \u7684\u65F6\u5019\uFF08<code>putVal</code> \u65B9\u6CD5\u4E2D\uFF09\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">,</span> <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
         n <span class="token operator">=</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
         tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u5904\u662F\u4ECE HashMap \u4E2D get \u7684\u65F6\u5019\uFF08<code>getNode</code> \u65B9\u6CD5\u4E2D\uFF09\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">,</span> e<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span>first <span class="token operator">=</span> tab<span class="token punctuation">[</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\u7684 <code>(n - 1) &amp; hash</code> \u6B63\u662F\u53D6\u6A21\u8FD0\u7B97\uFF0C\u5C31\u662F\u628A\u54C8\u5E0C\u503C\u548C\uFF08\u6570\u7EC4\u957F\u5EA6-1\uFF09\u505A\u4E86\u4E00\u4E2A\u201C\u4E0E\u201D\u8FD0\u7B97\u3002</p><p>\u53EF\u80FD\u5927\u5BB6\u5728\u7591\u60D1\uFF1A<strong>\u53D6\u6A21\u8FD0\u7B97\u96BE\u9053\u4E0D\u8BE5\u7528 <code>%</code> \u5417\uFF1F\u4E3A\u4EC0\u4E48\u8981\u7528 <code>&amp;</code> \u5462</strong>\uFF1F</p><p>\u8FD9\u662F\u56E0\u4E3A <code>&amp;</code> \u8FD0\u7B97\u6BD4 <code>%</code> \u66F4\u52A0\u9AD8\u6548\uFF0C\u5E76\u4E14\u5F53 b \u4E3A 2 \u7684 n \u6B21\u65B9\u65F6\uFF0C\u5B58\u5728\u4E0B\u9762\u8FD9\u6837\u4E00\u4E2A\u516C\u5F0F\u3002</p><blockquote><p>a % b = a &amp; (b-1)</p></blockquote>`,17),r=s("p",null,[n("\u7528 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"2^n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6644em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])])])])])])])]),n(" \u66FF\u6362\u4E0B b \u5C31\u662F\uFF1A")],-1),k=s("blockquote",null,[s("p",null,[n("a % "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"2^n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6644em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])])])])])])])]),n(" = a & ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"2^n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6644em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])])])])])])])]),n("-1)")])],-1),d=s("p",null,[n("\u6211\u4EEC\u6765\u9A8C\u8BC1\u4E00\u4E0B\uFF0C\u5047\u5982 a = 14\uFF0Cb = 8\uFF0C\u4E5F\u5C31\u662F "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"3")])]),s("annotation",{encoding:"application/x-tex"},"2^3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])])])])])])])])]),n("\uFF0Cn=3\u3002")],-1),m=s("p",null,[n("14%8\uFF0C14 \u7684\u4E8C\u8FDB\u5236\u4E3A 1110\uFF0C8 \u7684\u4E8C\u8FDB\u5236 1000\uFF0C8-1 = 7 \u7684\u4E8C\u8FDB\u5236\u4E3A 0111\uFF0C1110&0111=0110\uFF0C\u4E5F\u5C31\u662F 0"),s("code",null,"*"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"0")])]),s("annotation",{encoding:"application/x-tex"},"2^0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])])])])])])])])]),n("+1"),s("code",null,"*"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"1")])]),s("annotation",{encoding:"application/x-tex"},"2^1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])])])])])])])])]),n("+1"),s("code",null,"*"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"2^2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])])])])]),n("+0"),s("code",null,"*"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"3")])]),s("annotation",{encoding:"application/x-tex"},"2^3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])])])])])])])])]),n("=0+2+4+0=6\uFF0C14%8 \u521A\u597D\u4E5F\u7B49\u4E8E 6\u3002")],-1),v=a(`<p>\u8FD9\u4E5F\u6B63\u597D\u89E3\u91CA\u4E86\u4E3A\u4EC0\u4E48 HashMap \u7684\u6570\u7EC4\u957F\u5EA6\u8981\u53D6 2 \u7684\u6574\u6B21\u65B9\u3002</p><p>\u56E0\u4E3A\uFF08\u6570\u7EC4\u957F\u5EA6-1\uFF09\u6B63\u597D\u76F8\u5F53\u4E8E\u4E00\u4E2A\u201C\u4F4E\u4F4D\u63A9\u7801\u201D\u2014\u2014\u8FD9\u4E2A\u63A9\u7801\u7684\u4F4E\u4F4D\u6700\u597D\u5168\u662F 1\uFF0C\u8FD9\u6837 &amp; \u64CD\u4F5C\u624D\u6709\u610F\u4E49\uFF0C\u5426\u5219\u7ED3\u679C\u5C31\u80AF\u5B9A\u662F 0\uFF0C\u90A3\u4E48 &amp; \u64CD\u4F5C\u5C31\u6CA1\u6709\u610F\u4E49\u4E86\u3002</p><blockquote><p>a&amp;b \u64CD\u4F5C\u7684\u7ED3\u679C\u662F\uFF1Aa\u3001b \u4E2D\u5BF9\u5E94\u4F4D\u540C\u65F6\u4E3A 1\uFF0C\u5219\u5BF9\u5E94\u7ED3\u679C\u4F4D\u4E3A 1\uFF0C\u5426\u5219\u4E3A 0</p></blockquote><p>2 \u7684\u6574\u6B21\u5E42\u521A\u597D\u662F\u5076\u6570\uFF0C\u5076\u6570-1 \u662F\u5947\u6570\uFF0C\u5947\u6570\u7684\u4E8C\u8FDB\u5236\u6700\u540E\u4E00\u4F4D\u662F 1\uFF0C\u4FDD\u8BC1\u4E86 hash &amp;(length-1) \u7684\u6700\u540E\u4E00\u4F4D\u53EF\u80FD\u4E3A 0\uFF0C\u4E5F\u53EF\u80FD\u4E3A 1\uFF08\u8FD9\u53D6\u51B3\u4E8E h \u7684\u503C\uFF09\uFF0C\u5373 &amp; \u8FD0\u7B97\u540E\u7684\u7ED3\u679C\u53EF\u80FD\u4E3A\u5076\u6570\uFF0C\u4E5F\u53EF\u80FD\u4E3A\u5947\u6570\uFF0C\u8FD9\u6837\u4FBF\u53EF\u4EE5\u4FDD\u8BC1\u54C8\u5E0C\u503C\u7684\u5747\u5300\u6027\u3002</p><p>&amp; \u64CD\u4F5C\u7684\u7ED3\u679C\u5C31\u662F\u5C06\u54C8\u5E0C\u503C\u7684\u9AD8\u4F4D\u5168\u90E8\u5F52\u96F6\uFF0C\u53EA\u4FDD\u7559\u4F4E\u4F4D\u503C\uFF0C\u7528\u6765\u505A\u6570\u7EC4\u4E0B\u6807\u8BBF\u95EE\u3002</p><p>\u5047\u8BBE\u67D0\u54C8\u5E0C\u503C\u4E3A <code>10100101 11000100 00100101</code>\uFF0C\u7528\u5B83\u6765\u505A\u53D6\u6A21\u8FD0\u7B97\uFF0C\u6211\u4EEC\u6765\u770B\u4E00\u4E0B\u7ED3\u679C\u3002HashMap \u7684\u521D\u59CB\u957F\u5EA6\u4E3A 16\uFF08\u5185\u90E8\u662F\u6570\u7EC4\uFF09\uFF0C16-1=15\uFF0C\u4E8C\u8FDB\u5236\u662F <code>00000000 00000000 00001111</code>\uFF08\u9AD8\u4F4D\u7528 0 \u6765\u8865\u9F50\uFF09\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>	 10100101 11000100 00100101
&amp;	00000000 00000000 00001111
----------------------------------
	 00000000 00000000 00000101
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A 15 \u7684\u9AD8\u4F4D\u5168\u90E8\u662F 0\uFF0C\u6240\u4EE5 &amp; \u8FD0\u7B97\u540E\u7684\u9AD8\u4F4D\u7ED3\u679C\u80AF\u5B9A\u662F 0\uFF0C\u53EA\u5269\u4E0B 4 \u4E2A\u4F4E\u4F4D <code>0101</code>\uFF0C\u4E5F\u5C31\u662F\u5341\u8FDB\u5236\u7684 5\uFF0C\u4E5F\u5C31\u662F\u5C06\u54C8\u5E0C\u503C\u4E3A <code>10100101 11000100 00100101</code> \u7684\u952E\u653E\u5728\u6570\u7EC4\u7684\u7B2C 5 \u4F4D\u3002</p><p>\u660E\u767D\u4E86\u53D6\u6A21\u8FD0\u7B97\u540E\uFF0C\u6211\u4EEC\u518D\u6765\u770B put \u65B9\u6CD5\u7684\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u53CA get \u65B9\u6CD5\u7684\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u4EEC\u5728\u8C03\u7528 putVal \u548C getNode \u4E4B\u524D\uFF0C\u90FD\u4F1A\u5148\u8C03\u7528 hash \u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4E3A\u4EC0\u4E48\u53D6\u6A21\u8FD0\u7B97\u4E4B\u524D\u8981\u8C03\u7528 hash \u65B9\u6CD5\u5462\uFF1F</p><p>\u770B\u4E0B\u9762\u8FD9\u4E2A\u56FE\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hash-01.png" alt="" loading="lazy"></p><p>\u67D0\u54C8\u5E0C\u503C\u4E3A <code>11111111 11111111 11110000 1110 1010</code>\uFF0C\u5C06\u5B83\u53F3\u79FB 16 \u4F4D\uFF08h &gt;&gt;&gt; 16\uFF09\uFF0C\u521A\u597D\u662F <code>00000000 00000000 11111111 11111111</code>\uFF0C\u518D\u8FDB\u884C\u5F02\u6216\u64CD\u4F5C\uFF08h ^ (h &gt;&gt;&gt; 16)\uFF09\uFF0C\u7ED3\u679C\u662F <code>11111111 11111111 00001111 00010101</code></p><blockquote><p>\u5F02\u6216\uFF08<code>^</code>\uFF09\u8FD0\u7B97\u662F\u57FA\u4E8E\u4E8C\u8FDB\u5236\u7684\u4F4D\u8FD0\u7B97\uFF0C\u91C7\u7528\u7B26\u53F7 XOR \u6216\u8005<code>^</code>\u6765\u8868\u793A\uFF0C\u8FD0\u7B97\u89C4\u5219\u662F\uFF1A\u5982\u679C\u662F\u540C\u503C\u53D6 0\u3001\u5F02\u503C\u53D6 1</p></blockquote><p>\u7531\u4E8E\u6DF7\u5408\u4E86\u539F\u6765\u54C8\u5E0C\u503C\u7684\u9AD8\u4F4D\u548C\u4F4E\u4F4D\uFF0C\u6240\u4EE5\u4F4E\u4F4D\u7684\u968F\u673A\u6027\u52A0\u5927\u4E86\uFF08\u63BA\u6742\u4E86\u90E8\u5206\u9AD8\u4F4D\u7684\u7279\u5F81\uFF0C\u9AD8\u4F4D\u7684\u4FE1\u606F\u4E5F\u5F97\u5230\u4E86\u4FDD\u7559\uFF09\u3002</p><p>\u7ED3\u679C\u518D\u4E0E\u6570\u7EC4\u957F\u5EA6-1\uFF08<code>00000000 00000000 00000000 00001111</code>\uFF09\u505A\u53D6\u6A21\u8FD0\u7B97\uFF0C\u5F97\u5230\u7684\u4E0B\u6807\u5C31\u662F <code>00000000 00000000 00000000 00000101</code>\uFF0C\u4E5F\u5C31\u662F 5\u3002</p><p>\u8FD8\u8BB0\u5F97\u4E4B\u524D\u6211\u4EEC\u5047\u8BBE\u7684\u67D0\u54C8\u5E0C\u503C <code>10100101 11000100 00100101</code> \u5417\uFF1F\u5728\u6CA1\u6709\u8C03\u7528 hash \u65B9\u6CD5\u4E4B\u524D\uFF0C\u4E0E 15 \u505A\u53D6\u6A21\u8FD0\u7B97\u540E\u7684\u7ED3\u679C\u4E5F\u662F 5\uFF0C\u6211\u4EEC\u4E0D\u59A8\u6765\u770B\u770B\u8C03\u7528 hash \u4E4B\u540E\u7684\u53D6\u6A21\u8FD0\u7B97\u7ED3\u679C\u662F\u591A\u5C11\u3002</p><p>\u67D0\u54C8\u5E0C\u503C <code>00000000 10100101 11000100 00100101</code>\uFF08\u8865\u9F50 32 \u4F4D\uFF09\uFF0C\u5C06\u5B83\u53F3\u79FB 16 \u4F4D\uFF08h &gt;&gt;&gt; 16\uFF09\uFF0C\u521A\u597D\u662F <code>00000000 00000000 00000000 10100101</code>\uFF0C\u518D\u8FDB\u884C\u5F02\u6216\u64CD\u4F5C\uFF08h ^ (h &gt;&gt;&gt; 16)\uFF09\uFF0C\u7ED3\u679C\u662F <code>00000000 10100101 00111011 10000000</code></p><p>\u7ED3\u679C\u518D\u4E0E\u6570\u7EC4\u957F\u5EA6-1\uFF08<code>00000000 00000000 00000000 00001111</code>\uFF09\u505A\u53D6\u6A21\u8FD0\u7B97\uFF0C\u5F97\u5230\u7684\u4E0B\u6807\u5C31\u662F <code>00000000 00000000 00000000 00000000</code>\uFF0C\u4E5F\u5C31\u662F 0\u3002</p><p>\u7EFC\u4E0A\u6240\u8FF0\uFF0Chash \u65B9\u6CD5\u662F\u7528\u6765\u505A\u54C8\u5E0C\u503C\u4F18\u5316\u7684\uFF0C\u628A\u54C8\u5E0C\u503C\u53F3\u79FB 16 \u4F4D\uFF0C\u4E5F\u5C31\u6B63\u597D\u662F\u81EA\u5DF1\u957F\u5EA6\u7684\u4E00\u534A\uFF0C\u4E4B\u540E\u4E0E\u539F\u54C8\u5E0C\u503C\u505A\u5F02\u6216\u8FD0\u7B97\uFF0C\u8FD9\u6837\u5C31\u6DF7\u5408\u4E86\u539F\u54C8\u5E0C\u503C\u4E2D\u7684\u9AD8\u4F4D\u548C\u4F4E\u4F4D\uFF0C\u589E\u5927\u4E86\u968F\u673A\u6027\u3002</p><p>\u8BF4\u767D\u4E86\uFF0C<strong>hash \u65B9\u6CD5\u5C31\u662F\u4E3A\u4E86\u589E\u52A0\u968F\u673A\u6027\uFF0C\u8BA9\u6570\u636E\u5143\u7D20\u66F4\u52A0\u5747\u8861\u7684\u5206\u5E03\uFF0C\u51CF\u5C11\u78B0\u649E</strong>\u3002</p><h2 id="\u4E8C\u3001\u6269\u5BB9\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u6269\u5BB9\u673A\u5236" aria-hidden="true">#</a> \u4E8C\u3001\u6269\u5BB9\u673A\u5236</h2>`,27),h=n("\u5927\u5BB6\u90FD\u77E5\u9053\uFF0C\u6570\u7EC4\u4E00\u65E6\u521D\u59CB\u5316\u540E\u5927\u5C0F\u5C31\u65E0\u6CD5\u6539\u53D8\u4E86\uFF0C\u6240\u4EE5\u5C31\u6709\u4E86 "),b={href:"https://mp.weixin.qq.com/s/7puyi1PSbkFEIAz5zbNKxA",target:"_blank",rel:"noopener noreferrer"},g=n("ArrayList"),y=n("\u8FD9\u79CD\u201C\u52A8\u6001\u6570\u7EC4\u201D\uFF0C\u53EF\u4EE5\u81EA\u52A8\u6269\u5BB9\u3002"),w=a(`<p>HashMap \u7684\u5E95\u5C42\u7528\u7684\u4E5F\u662F\u6570\u7EC4\u3002\u5411 HashMap \u91CC\u4E0D\u505C\u5730\u6DFB\u52A0\u5143\u7D20\uFF0C\u5F53\u6570\u7EC4\u65E0\u6CD5\u88C5\u8F7D\u66F4\u591A\u5143\u7D20\u65F6\uFF0C\u5C31\u9700\u8981\u5BF9\u6570\u7EC4\u8FDB\u884C\u6269\u5BB9\uFF0C\u4EE5\u4FBF\u88C5\u5165\u66F4\u591A\u7684\u5143\u7D20\u3002</p><p>\u5F53\u7136\u4E86\uFF0C\u6570\u7EC4\u662F\u65E0\u6CD5\u81EA\u52A8\u6269\u5BB9\u7684\uFF0C\u6240\u4EE5\u5982\u679C\u8981\u6269\u5BB9\u7684\u8BDD\uFF0C\u5C31\u9700\u8981\u65B0\u5EFA\u4E00\u4E2A\u5927\u7684\u6570\u7EC4\uFF0C\u7136\u540E\u628A\u5C0F\u6570\u7EC4\u7684\u5143\u7D20\u590D\u5236\u8FC7\u53BB\u3002</p><p>HashMap \u7684\u6269\u5BB9\u662F\u901A\u8FC7 resize \u65B9\u6CD5\u6765\u5B9E\u73B0\u7684\uFF0CJDK 8 \u4E2D\u878D\u5165\u4E86\u7EA2\u9ED1\u6811\uFF0C\u6BD4\u8F83\u590D\u6742\uFF0C\u4E3A\u4E86\u4FBF\u4E8E\u7406\u89E3\uFF0C\u5C31\u8FD8\u4F7F\u7528 JDK 7 \u7684\u6E90\u7801\uFF0C\u641E\u6E05\u695A\u4E86 JDK 7 \u7684\uFF0C\u6211\u4EEC\u540E\u9762\u518D\u8BE6\u7EC6\u8BF4\u660E JDK 8 \u548C JDK 7 \u4E4B\u95F4\u7684\u533A\u522B\u3002</p><p>resize \u65B9\u6CD5\u7684\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newCapacity\u4E3A\u65B0\u7684\u5BB9\u91CF</span>
<span class="token keyword">void</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token keyword">int</span> newCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C0F\u6570\u7EC4\uFF0C\u4E34\u65F6\u8FC7\u5EA6\u4E0B</span>
    <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTable <span class="token operator">=</span> table<span class="token punctuation">;</span>
    <span class="token comment">// \u6269\u5BB9\u524D\u7684\u5BB9\u91CF</span>
    <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> oldTable<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// MAXIMUM_CAPACITY \u4E3A\u6700\u5927\u5BB9\u91CF\uFF0C2 \u7684 30 \u6B21\u65B9 = 1&lt;&lt;30</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCapacity <span class="token operator">==</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5BB9\u91CF\u8C03\u6574\u4E3A Integer \u7684\u6700\u5927\u503C 0x7fffffff\uFF08\u5341\u516D\u8FDB\u5236\uFF09=2 \u7684 31 \u6B21\u65B9-1</span>
        threshold <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u521D\u59CB\u5316\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\uFF08\u5927\u5BB9\u91CF\uFF09</span>
    <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token punctuation">[</span>newCapacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u628A\u5C0F\u6570\u7EC4\u7684\u5143\u7D20\u8F6C\u79FB\u5230\u5927\u6570\u7EC4\u4E2D</span>
    <span class="token function">transfer</span><span class="token punctuation">(</span>newTable<span class="token punctuation">,</span> <span class="token function">initHashSeedAsNeeded</span><span class="token punctuation">(</span>newCapacity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5F15\u7528\u65B0\u7684\u5927\u6570\u7EC4</span>
    table <span class="token operator">=</span> newTable<span class="token punctuation">;</span>
    <span class="token comment">// \u91CD\u65B0\u8BA1\u7B97\u9608\u503C</span>
    threshold <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>newCapacity <span class="token operator">*</span> loadFactor<span class="token punctuation">,</span> MAXIMUM_CAPACITY <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u6CE8\u91CA\u91CC\u51FA\u73B0\u4E86\u5DE6\u79FB\uFF08<code>&lt;&lt;</code>\uFF09\uFF0C\u8FD9\u91CC\u7B80\u5355\u4ECB\u7ECD\u4E00\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>a=39
b = a &lt;&lt; 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5341\u8FDB\u5236 39 \u7528 8 \u4F4D\u7684\u4E8C\u8FDB\u5236\u6765\u8868\u793A\uFF0C\u5C31\u662F 00100111\uFF0C\u5DE6\u79FB\u4E24\u4F4D\u540E\u662F 10011100\uFF08\u4F4E\u4F4D\u7528 0 \u8865\u4E0A\uFF09\uFF0C\u518D\u8F6C\u6210\u5341\u8FDB\u5236\u6570\u5C31\u662F 156\u3002</p><p>\u79FB\u4F4D\u8FD0\u7B97\u901A\u5E38\u53EF\u4EE5\u7528\u6765\u4EE3\u66FF\u4E58\u6CD5\u8FD0\u7B97\u548C\u9664\u6CD5\u8FD0\u7B97\u3002\u4F8B\u5982\uFF0C\u5C06 0010011\uFF0839\uFF09\u5DE6\u79FB\u4E24\u4F4D\u5C31\u662F 10011100\uFF08156\uFF09\uFF0C\u521A\u597D\u53D8\u6210\u4E86\u539F\u6765\u7684 4 \u500D\u3002</p><p>\u5B9E\u9645\u4E0A\u5462\uFF0C\u4E8C\u8FDB\u5236\u6570\u5DE6\u79FB\u540E\u4F1A\u53D8\u6210\u539F\u6765\u7684 2 \u500D\u30014 \u500D\u30018 \u500D\u3002</p><p>transfer \u65B9\u6CD5\u7528\u6765\u8F6C\u79FB\uFF0C\u5C06\u5C0F\u6570\u7EC4\u7684\u5143\u7D20\u62F7\u8D1D\u5230\u65B0\u7684\u6570\u7EC4\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTable<span class="token punctuation">,</span> <span class="token keyword">boolean</span> rehash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65B0\u7684\u5BB9\u91CF</span>
    <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> newTable<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u904D\u5386\u5C0F\u6570\u7EC4</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">:</span> table<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u62C9\u94FE\u6CD5\uFF0C\u76F8\u540C key \u4E0A\u7684\u4E0D\u540C\u503C</span>
            <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token comment">// \u662F\u5426\u9700\u8981\u91CD\u65B0\u8BA1\u7B97 hash</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>rehash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span>hash <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token operator">==</span> e<span class="token punctuation">.</span>key <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token function">hash</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u6839\u636E\u5927\u6570\u7EC4\u7684\u5BB9\u91CF\uFF0C\u548C\u952E\u7684 hash \u8BA1\u7B97\u5143\u7D20\u5728\u6570\u7EC4\u4E2D\u7684\u4E0B\u6807</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">indexFor</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u540C\u4E00\u4F4D\u7F6E\u4E0A\u7684\u65B0\u5143\u7D20\u88AB\u653E\u5728\u94FE\u8868\u7684\u5934\u90E8</span>
            e<span class="token punctuation">.</span>next <span class="token operator">=</span> newTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token comment">// \u653E\u5728\u65B0\u7684\u6570\u7EC4\u4E0A</span>
            newTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>

            <span class="token comment">// \u94FE\u8868\u4E0A\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20</span>
            e <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>e.next = newTable[i]</code>\uFF0C\u4E5F\u5C31\u662F\u4F7F\u7528\u4E86\u5355\u94FE\u8868\u7684\u5934\u63D2\u5165\u65B9\u5F0F\uFF0C\u540C\u4E00\u4F4D\u7F6E\u4E0A\u65B0\u5143\u7D20\u603B\u4F1A\u88AB\u653E\u5728\u94FE\u8868\u7684\u5934\u90E8\u4F4D\u7F6E\uFF1B\u8FD9\u6837\u5148\u653E\u5728\u4E00\u4E2A\u7D22\u5F15\u4E0A\u7684\u5143\u7D20\u7EC8\u4F1A\u88AB\u653E\u5230\u94FE\u8868\u7684\u5C3E\u90E8\uFF08\u5982\u679C\u53D1\u751F\u4E86hash\u51B2\u7A81\u7684\u8BDD\uFF09\uFF0C\u8FD9\u4E00\u70B9\u548C JDK 8 \u6709\u533A\u522B\u3002</p><p><strong>\u5728\u65E7\u6570\u7EC4\u4E2D\u540C\u4E00\u4E2A\u94FE\u8868\u4E0A\u7684\u5143\u7D20\uFF0C\u901A\u8FC7\u91CD\u65B0\u8BA1\u7B97\u7D22\u5F15\u4F4D\u7F6E\u540E\uFF0C\u6709\u53EF\u80FD\u88AB\u653E\u5230\u4E86\u65B0\u6570\u7EC4\u7684\u4E0D\u540C\u4F4D\u7F6E\u4E0A</strong>\uFF08\u4ED4\u7EC6\u770B\u4E0B\u9762\u7684\u5185\u5BB9\uFF0C\u4F1A\u89E3\u91CA\u6E05\u695A\u8FD9\u4E00\u70B9\uFF09\u3002</p>`,14),x=n("\u5047\u8BBE hash \u7B97\u6CD5\uFF08"),f={href:"https://mp.weixin.qq.com/s/aS2dg4Dj1Efwujmv-6YTBg",target:"_blank",rel:"noopener noreferrer"},_=n("\u4E4B\u524D\u7684\u7AE0\u8282\u6709\u8BB2\u5230"),M=n("\uFF0C\u70B9\u51FB\u94FE\u63A5\u518D\u6E29\u6545\u4E00\u4E0B\uFF09\u5C31\u662F\u7B80\u5355\u7684\u7528\u952E\u7684\u54C8\u5E0C\u503C\uFF08\u4E00\u4E2A int \u503C\uFF09\u548C\u6570\u7EC4\u5927\u5C0F\u53D6\u6A21\uFF08\u4E5F\u5C31\u662F hashCode % table.length\uFF09\u3002"),T=a('<p>\u7EE7\u7EED\u5047\u8BBE\uFF1A</p><ul><li>\u6570\u7EC4 table \u7684\u957F\u5EA6\u4E3A 2</li><li>\u952E\u7684\u54C8\u5E0C\u503C\u4E3A 3\u30017\u30015</li></ul><p>\u53D6\u6A21\u8FD0\u7B97\u540E\uFF0C\u54C8\u5E0C\u51B2\u7A81\u90FD\u5230 table[1] \u4E0A\u4E86\uFF0C\u56E0\u4E3A\u4F59\u6570\u4E3A 1\u3002\u90A3\u4E48\u6269\u5BB9\u524D\u7684\u6837\u5B50\u5982\u4E0B\u56FE\u6240\u793A\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-resize-01.png" alt="" loading="lazy"></p><p>\u5C0F\u6570\u7EC4\u7684\u5BB9\u91CF\u4E3A 2\uFF0C key 3\u30017\u30015 \u90FD\u5728 table[1] \u7684\u94FE\u8868\u4E0A\u3002</p><p>\u5047\u8BBE\u8D1F\u8F7D\u56E0\u5B50 loadFactor \u4E3A 1\uFF0C\u4E5F\u5C31\u662F\u5F53\u5143\u7D20\u7684\u5B9E\u9645\u5927\u5C0F\u5927\u4E8E table \u7684\u5B9E\u9645\u5927\u5C0F\u65F6\u8FDB\u884C\u6269\u5BB9\u3002</p><p>\u6269\u5BB9\u540E\u7684\u5927\u6570\u7EC4\u7684\u5BB9\u91CF\u4E3A 4\u3002</p><ul><li>key 3 \u53D6\u6A21\uFF083%4\uFF09\u540E\u662F 3\uFF0C\u653E\u5728 table[3] \u4E0A\u3002</li><li>key 7 \u53D6\u6A21\uFF087%4\uFF09\u540E\u662F 3\uFF0C\u653E\u5728 table[3] \u4E0A\u7684\u94FE\u8868\u5934\u90E8\u3002</li><li>key 5 \u53D6\u6A21\uFF085%4\uFF09\u540E\u662F 1\uFF0C\u653E\u5728 table[1] \u4E0A\u3002</li></ul><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-resize-02.png" alt="" loading="lazy"></p><p>\u6309\u7167\u6211\u4EEC\u7684\u9884\u671F\uFF0C\u6269\u5BB9\u540E\u7684 7 \u4ECD\u7136\u5E94\u8BE5\u5728 3 \u8FD9\u6761\u94FE\u8868\u7684\u540E\u9762\uFF0C\u4F46\u5B9E\u9645\u4E0A\u5462\uFF1F 7 \u8DD1\u5230 3 \u8FD9\u6761\u94FE\u8868\u7684\u5934\u90E8\u4E86\u3002\u9488\u5BF9 JDK 7 \u4E2D\u7684\u8FD9\u4E2A\u60C5\u51B5\uFF0CJDK 8 \u505A\u4E86\u54EA\u4E9B\u4F18\u5316\u5462\uFF1F</p><p>\u770B\u4E0B\u9762\u8FD9\u5F20\u56FE\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-resize-03.png" alt="" loading="lazy"></p><p>n \u4E3A table \u7684\u957F\u5EA6\uFF0C\u9ED8\u8BA4\u503C\u4E3A 16\u3002</p>',13),j=s("ul",null,[s("li",null,[n("n-1 \u4E5F\u5C31\u662F\u4E8C\u8FDB\u5236\u7684 0000 1111\uFF081X"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"0")])]),s("annotation",{encoding:"application/x-tex"},"2^0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])])])])])])])])]),n("+1X"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"1")])]),s("annotation",{encoding:"application/x-tex"},"2^1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])])])])])])])])]),n("+1X"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"2^2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])])])])]),n("+1X"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"3")])]),s("annotation",{encoding:"application/x-tex"},"2^3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])])])])])])])])]),n("=1+2+4+8=15\uFF09\uFF1B")]),s("li",null,"key1 \u54C8\u5E0C\u503C\u7684\u6700\u540E 8 \u4F4D\u4E3A 0000 0101"),s("li",null,"key2 \u54C8\u5E0C\u503C\u7684\u6700\u540E 8 \u4F4D\u4E3A 0001 0101\uFF08\u548C key1 \u4E0D\u540C\uFF09"),s("li",null,"\u505A\u4E0E\u8FD0\u7B97\u540E\u53D1\u751F\u4E86\u54C8\u5E0C\u51B2\u7A81\uFF0C\u7D22\u5F15\u90FD\u5728\uFF080000 0101\uFF09\u4E0A\u3002")],-1),z=s("p",null,"\u6269\u5BB9\u540E\u4E3A 32\u3002",-1),A=s("ul",null,[s("li",null,[n("n-1 \u4E5F\u5C31\u662F\u4E8C\u8FDB\u5236\u7684 0001 1111\uFF081X"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"0")])]),s("annotation",{encoding:"application/x-tex"},"2^0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])])])])])])])])]),n("+1X"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"1")])]),s("annotation",{encoding:"application/x-tex"},"2^1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])])])])])])])])]),n("+1X"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"2^2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])])])])]),n("+1X"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"3")])]),s("annotation",{encoding:"application/x-tex"},"2^3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])])])])])])])])]),n("+1X"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mn",null,"4")])]),s("annotation",{encoding:"application/x-tex"},"2^4")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"4")])])])])])])])])])]),n("=1+2+4+8+16=31\uFF09\uFF0C\u6269\u5BB9\u524D\u662F 0000 1111\u3002")]),s("li",null,"key1 \u54C8\u5E0C\u503C\u7684\u4F4E\u4F4D\u4E3A 0000 0101"),s("li",null,"key2 \u54C8\u5E0C\u503C\u7684\u4F4E\u4F4D\u4E3A 0001 0101\uFF08\u548C key1 \u4E0D\u540C\uFF09"),s("li",null,"key1 \u505A\u4E0E\u8FD0\u7B97\u540E\uFF0C\u7D22\u5F15\u4E3A 0000 0101\u3002"),s("li",null,"key2 \u505A\u4E0E\u8FD0\u7B97\u540E\uFF0C\u7D22\u5F15\u4E3A 0001 0101\u3002")],-1),C=a(`<p>\u65B0\u7684\u7D22\u5F15\u5C31\u4F1A\u53D1\u751F\u8FD9\u6837\u7684\u53D8\u5316\uFF1A</p><ul><li>\u539F\u6765\u7684\u7D22\u5F15\u662F 5\uFF08<em>0</em> 0101\uFF09</li><li>\u539F\u6765\u7684\u5BB9\u91CF\u662F 16</li><li>\u6269\u5BB9\u540E\u7684\u5BB9\u91CF\u662F 32</li><li>\u6269\u5BB9\u540E\u7684\u7D22\u5F15\u662F 21\uFF08<em>1</em> 0101\uFF09\uFF0C\u4E5F\u5C31\u662F 5+16\uFF0C\u4E5F\u5C31\u662F\u539F\u6765\u7684\u7D22\u5F15+\u539F\u6765\u7684\u5BB9\u91CF</li></ul><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-resize-04.png" alt="" loading="lazy"></p><p>\u4E5F\u5C31\u662F\u8BF4\uFF0CJDK 8 \u4E0D\u9700\u8981\u50CF JDK 7 \u90A3\u6837\u91CD\u65B0\u8BA1\u7B97 hash\uFF0C\u53EA\u9700\u8981\u770B\u539F\u6765\u7684hash\u503C\u65B0\u589E\u7684\u90A3\u4E2Abit\u662F1\u8FD8\u662F0\u5C31\u597D\u4E86\uFF0C\u662F0\u7684\u8BDD\u5C31\u8868\u793A\u7D22\u5F15\u6CA1\u53D8\uFF0C\u662F1\u7684\u8BDD\uFF0C\u7D22\u5F15\u5C31\u53D8\u6210\u4E86\u201C\u539F\u7D22\u5F15+\u539F\u6765\u7684\u5BB9\u91CF\u201D\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-resize-05.png" alt="" loading="lazy"></p><p>JDK 8 \u7684\u8FD9\u4E2A\u8BBE\u8BA1\u975E\u5E38\u5DE7\u5999\uFF0C\u65E2\u7701\u53BB\u4E86\u91CD\u65B0\u8BA1\u7B97hash\u7684\u65F6\u95F4\uFF0C\u540C\u65F6\uFF0C\u7531\u4E8E\u65B0\u589E\u76841 bit\u662F0\u8FD8\u662F1\u662F\u968F\u673A\u7684\uFF0C\u56E0\u6B64\u6269\u5BB9\u7684\u8FC7\u7A0B\uFF0C\u53EF\u4EE5\u5747\u5300\u5730\u628A\u4E4B\u524D\u7684\u8282\u70B9\u5206\u6563\u5230\u65B0\u7684\u4F4D\u7F6E\u4E0A\u3002</p><p>woc\uFF0C\u53EA\u80FD\u8BF4 HashMap \u7684\u4F5C\u8005 Doug Lea\u3001Josh Bloch\u3001Arthur van Hoff\u3001Neal Gafter \u771F\u7684\u5F3A\u2014\u2014\u7684\u4E00\u7B14\u3002</p><p>JDK 8 \u6269\u5BB9\u7684\u6E90\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTab <span class="token operator">=</span> table<span class="token punctuation">;</span>
    <span class="token keyword">int</span> oldCap <span class="token operator">=</span> <span class="token punctuation">(</span>oldTab <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> oldTab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> oldThr <span class="token operator">=</span> threshold<span class="token punctuation">;</span>
    <span class="token keyword">int</span> newCap<span class="token punctuation">,</span> newThr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8D85\u8FC7\u6700\u5927\u503C\u5C31\u4E0D\u518D\u6269\u5145\u4E86\uFF0C\u5C31\u53EA\u597D\u968F\u4F60\u78B0\u649E\u53BB\u5427</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;=</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            threshold <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldTab<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6CA1\u8D85\u8FC7\u6700\u5927\u503C\uFF0C\u5C31\u6269\u5145\u4E3A\u539F\u6765\u76842\u500D</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>newCap <span class="token operator">=</span> oldCap <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> MAXIMUM_CAPACITY <span class="token operator">&amp;&amp;</span>
                 oldCap <span class="token operator">&gt;=</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span>
            newThr <span class="token operator">=</span> oldThr <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// double threshold</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldThr <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// initial capacity was placed in threshold</span>
        newCap <span class="token operator">=</span> oldThr<span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>               <span class="token comment">// zero initial threshold signifies using defaults</span>
        newCap <span class="token operator">=</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">;</span>
        newThr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>DEFAULT_LOAD_FACTOR <span class="token operator">*</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BA1\u7B97\u65B0\u7684resize\u4E0A\u9650</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newThr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">float</span> ft <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>newCap <span class="token operator">*</span> loadFactor<span class="token punctuation">;</span>
        newThr <span class="token operator">=</span> <span class="token punctuation">(</span>newCap <span class="token operator">&lt;</span> MAXIMUM_CAPACITY <span class="token operator">&amp;&amp;</span> ft <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>MAXIMUM_CAPACITY <span class="token operator">?</span>
                  <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ft <span class="token operator">:</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    threshold <span class="token operator">=</span> newThr<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;rawtypes&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTab <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span>newCap<span class="token punctuation">]</span><span class="token punctuation">;</span>
    table <span class="token operator">=</span> newTab<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldTab <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C0F\u6570\u7EC4\u590D\u5236\u5230\u5927\u6570\u7EC4</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> oldCap<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    newTab<span class="token punctuation">[</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> <span class="token punctuation">(</span>newCap <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> newTab<span class="token punctuation">,</span> j<span class="token punctuation">,</span> oldCap<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// preserve order</span>
                    <span class="token comment">// \u94FE\u8868\u4F18\u5316\u91CD hash \u7684\u4EE3\u7801\u5757</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> loHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hiHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> hiTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
                    <span class="token keyword">do</span> <span class="token punctuation">{</span>
                        next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> oldCap<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                loHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token keyword">else</span>
                                loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            loTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                hiHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token keyword">else</span>
                                hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            hiTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// \u539F\u6765\u7684\u7D22\u5F15</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        newTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> loHead<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// \u7D22\u5F15+\u539F\u6765\u7684\u5BB9\u91CF</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        newTab<span class="token punctuation">[</span>j <span class="token operator">+</span> oldCap<span class="token punctuation">]</span> <span class="token operator">=</span> hiHead<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> newTab<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E09\u3001\u52A0\u8F7D\u56E0\u5B50\u4E3A\u4EC0\u4E48\u662F0-75" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u52A0\u8F7D\u56E0\u5B50\u4E3A\u4EC0\u4E48\u662F0-75" aria-hidden="true">#</a> \u4E09\u3001\u52A0\u8F7D\u56E0\u5B50\u4E3A\u4EC0\u4E48\u662F0.75</h2><p>JDK 8 \u4E2D\u7684 HashMap \u662F\u7528\u6570\u7EC4+\u94FE\u8868+\u7EA2\u9ED1\u6811\u5B9E\u73B0\u7684\uFF0C\u6211\u4EEC\u8981\u60F3\u5F80 HashMap \u4E2D\u653E\u6570\u636E\u6216\u8005\u53D6\u6570\u636E\uFF0C\u5C31\u9700\u8981\u786E\u5B9A\u6570\u636E\u5728\u6570\u7EC4\u4E2D\u7684\u4E0B\u6807\u3002</p><p>\u5148\u628A\u6570\u636E\u7684\u952E\u8FDB\u884C\u4E00\u6B21 hash\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u505A\u4E00\u6B21\u53D6\u6A21\u8FD0\u7B97\u786E\u5B9A\u4E0B\u6807\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>i = (n - 1) &amp; hash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u54C8\u5E0C\u8868\u8FD9\u6837\u7684\u6570\u636E\u7ED3\u6784\u5BB9\u6613\u4EA7\u751F\u4E24\u4E2A\u95EE\u9898\uFF1A</p><ul><li>\u6570\u7EC4\u7684\u5BB9\u91CF\u8FC7\u5C0F\uFF0C\u7ECF\u8FC7\u54C8\u5E0C\u8BA1\u7B97\u540E\u7684\u4E0B\u6807\uFF0C\u5BB9\u6613\u51FA\u73B0\u51B2\u7A81\uFF1B</li><li>\u6570\u7EC4\u7684\u5BB9\u91CF\u8FC7\u5927\uFF0C\u5BFC\u81F4\u7A7A\u95F4\u5229\u7528\u7387\u4E0D\u9AD8\u3002</li></ul><p>\u52A0\u8F7D\u56E0\u5B50\u662F\u7528\u6765\u8868\u793A HashMap \u4E2D\u6570\u636E\u7684\u586B\u6EE1\u7A0B\u5EA6\uFF1A</p><blockquote><p>\u52A0\u8F7D\u56E0\u5B50 = \u586B\u5165\u54C8\u5E0C\u8868\u4E2D\u7684\u6570\u636E\u4E2A\u6570 / \u54C8\u5E0C\u8868\u7684\u957F\u5EA6</p></blockquote><p>\u8FD9\u5C31\u610F\u5473\u7740\uFF1A</p><ul><li>\u52A0\u8F7D\u56E0\u5B50\u8D8A\u5C0F\uFF0C\u586B\u6EE1\u7684\u6570\u636E\u5C31\u8D8A\u5C11\uFF0C\u54C8\u5E0C\u51B2\u7A81\u7684\u51E0\u7387\u5C31\u51CF\u5C11\u4E86\uFF0C\u4F46\u6D6A\u8D39\u4E86\u7A7A\u95F4\uFF0C\u800C\u4E14\u8FD8\u4F1A\u63D0\u9AD8\u6269\u5BB9\u7684\u89E6\u53D1\u51E0\u7387\uFF1B</li><li>\u52A0\u8F7D\u56E0\u5B50\u8D8A\u5927\uFF0C\u586B\u6EE1\u7684\u6570\u636E\u5C31\u8D8A\u591A\uFF0C\u7A7A\u95F4\u5229\u7528\u7387\u5C31\u9AD8\uFF0C\u4F46\u54C8\u5E0C\u51B2\u7A81\u7684\u51E0\u7387\u5C31\u53D8\u5927\u4E86\u3002</li></ul><p>\u597D\u96BE\uFF01\uFF01\uFF01\uFF01</p><p>\u8FD9\u5C31\u5FC5\u987B\u5728\u201C<strong>\u54C8\u5E0C\u51B2\u7A81</strong>\u201D\u4E0E\u201C<strong>\u7A7A\u95F4\u5229\u7528\u7387</strong>\u201D\u4E24\u8005\u4E4B\u95F4\u6709\u6240\u53D6\u820D\uFF0C\u5C3D\u91CF\u4FDD\u6301\u5E73\u8861\uFF0C\u8C01\u4E5F\u4E0D\u788D\u7740\u8C01\u3002</p><p>\u6211\u4EEC\u77E5\u9053\uFF0CHashMap \u662F\u901A\u8FC7\u62C9\u94FE\u6CD5\u6765\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u7684\u3002</p>`,24),I=n("\u4E3A\u4E86\u51CF\u5C11\u54C8\u5E0C\u51B2\u7A81\u53D1\u751F\u7684\u6982\u7387\uFF0C\u5F53 HashMap \u7684\u6570\u7EC4\u957F\u5EA6\u8FBE\u5230\u4E00\u4E2A"),N=s("strong",null,"\u4E34\u754C\u503C",-1),V=n("\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u89E6\u53D1\u6269\u5BB9\uFF08\u53EF\u4EE5\u70B9\u51FB"),L={href:"https://mp.weixin.qq.com/s/0KSpdBJMfXSVH63XadVdmw",target:"_blank",rel:"noopener noreferrer"},K=n("\u94FE\u63A5"),q=n("\u67E5\u770B HashMap \u7684\u6269\u5BB9\u673A\u5236\uFF09\uFF0C\u6269\u5BB9\u540E\u4F1A\u5C06\u4E4B\u524D\u5C0F\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u8F6C\u79FB\u5230\u5927\u6570\u7EC4\u4E2D\uFF0C\u8FD9\u662F\u4E00\u4E2A\u76F8\u5F53\u8017\u65F6\u7684\u64CD\u4F5C\u3002"),E=a(`<p>\u8FD9\u4E2A\u4E34\u754C\u503C\u7531\u4EC0\u4E48\u6765\u786E\u5B9A\u5462\uFF1F</p><blockquote><p>\u4E34\u754C\u503C = \u521D\u59CB\u5BB9\u91CF * \u52A0\u8F7D\u56E0\u5B50</p></blockquote><p>\u4E00\u5F00\u59CB\uFF0CHashMap \u7684\u5BB9\u91CF\u662F 16\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_INITIAL_CAPACITY <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// aka 16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u52A0\u8F7D\u56E0\u5B50\u662F 0.75\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> DEFAULT_LOAD_FACTOR <span class="token operator">=</span> <span class="token number">0.75f</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5F53 16*0.75=12 \u65F6\uFF0C\u4F1A\u89E6\u53D1\u6269\u5BB9\u673A\u5236\u3002</p><p>\u4E3A\u4EC0\u4E48\u52A0\u8F7D\u56E0\u5B50\u4F1A\u9009\u62E9 0.75 \u5462\uFF1F\u4E3A\u4EC0\u4E48\u4E0D\u662F0.8\u30010.6\u5462\uFF1F</p><p>\u8FD9\u8DDF\u7EDF\u8BA1\u5B66\u91CC\u7684\u4E00\u4E2A\u5F88\u91CD\u8981\u7684\u539F\u7406\u2014\u2014\u6CCA\u677E\u5206\u5E03\u6709\u5173\u3002</p><p>\u662F\u65F6\u5019\u4E0A\u7EF4\u57FA\u767E\u79D1\u4E86\uFF1A</p><blockquote><p>\u6CCA\u677E\u5206\u5E03\uFF0C\u662F\u4E00\u79CD\u7EDF\u8BA1\u4E0E\u6982\u7387\u5B66\u91CC\u5E38\u89C1\u5230\u7684\u79BB\u6563\u6982\u7387\u5206\u5E03\uFF0C\u7531\u6CD5\u56FD\u6570\u5B66\u5BB6\u897F\u83AB\u6069\xB7\u5FB7\u5C3C\xB7\u6CCA\u677E\u57281838\u5E74\u65F6\u63D0\u51FA\u3002\u5B83\u4F1A\u5BF9\u968F\u673A\u4E8B\u4EF6\u7684\u53D1\u751F\u6B21\u6570\u8FDB\u884C\u5EFA\u6A21\uFF0C\u9002\u7528\u4E8E\u6D89\u53CA\u8BA1\u7B97\u5728\u7ED9\u5B9A\u7684\u65F6\u95F4\u6BB5\u3001\u8DDD\u79BB\u3001\u9762\u79EF\u7B49\u8303\u56F4\u5185\u53D1\u751F\u968F\u673A\u4E8B\u4EF6\u7684\u6B21\u6570\u7684\u5E94\u7528\u60C5\u5F62\u3002</p></blockquote><p>\u962E\u4E00\u5CF0\u8001\u5E08\u66FE\u5728\u4E00\u7BC7\u535A\u6587\u4E2D\u8BE6\u7EC6\u7684\u4ECB\u7ECD\u4E86\u6CCA\u677E\u5206\u5E03\u548C\u6307\u6570\u5206\u5E03\uFF0C\u5927\u5BB6\u53EF\u4EE5\u53BB\u770B\u4E00\u4E0B\u3002</p><blockquote><p>\u94FE\u63A5\uFF1Ahttps://www.ruanyifeng.com/blog/2015/06/poisson-distribution.html</p></blockquote><p>\u5177\u4F53\u662F\u7528\u8FD9\u4E48\u4E00\u4E2A\u516C\u5F0F\u6765\u8868\u793A\u7684\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-loadfactor-01.png" alt="" loading="lazy"></p><p>\u7B49\u53F7\u7684\u5DE6\u8FB9\uFF0CP \u8868\u793A\u6982\u7387\uFF0CN\u8868\u793A\u67D0\u79CD\u51FD\u6570\u5173\u7CFB\uFF0Ct \u8868\u793A\u65F6\u95F4\uFF0Cn \u8868\u793A\u6570\u91CF\u3002</p><p>\u5728 HashMap \u7684 doc \u6587\u6863\u91CC\uFF0C\u66FE\u6709\u8FD9\u4E48\u4E00\u6BB5\u63CF\u8FF0\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Because TreeNodes are about twice the size of regular nodes, we
use them only when bins contain enough nodes to warrant use
(see TREEIFY_THRESHOLD). And when they become too small (due to
removal or resizing) they are converted back to plain bins.  In
usages with well-distributed user hashCodes, tree bins are
rarely used.  Ideally, under random hashCodes, the frequency of
nodes in bins follows a Poisson distribution
(http://en.wikipedia.org/wiki/Poisson_distribution) with a
parameter of about 0.5 on average for the default resizing
threshold of 0.75, although with a large variance because of
resizing granularity. Ignoring variance, the expected
occurrences of list size k are (exp(-0.5) * pow(0.5, k) /
factorial(k)). The first values are:
0:    0.60653066
1:    0.30326533
2:    0.07581633
3:    0.01263606
4:    0.00157952
5:    0.00015795
6:    0.00001316
7:    0.00000094
8:    0.00000006
more: less than 1 in ten million
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u81F4\u7684\u610F\u601D\u5C31\u662F\uFF1A</p><p>\u56E0\u4E3A TreeNode\uFF08\u7EA2\u9ED1\u6811\uFF09\u7684\u5927\u5C0F\u7EA6\u4E3A\u94FE\u8868\u8282\u70B9\u7684\u4E24\u500D\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EA\u6709\u5728\u4E00\u4E2A\u62C9\u94FE\u5DF2\u7ECF\u62C9\u4E86\u8DB3\u591F\u8282\u70B9\u7684\u65F6\u5019\u624D\u4F1A\u8F6C\u4E3Atree\uFF08\u53C2\u8003TREEIFY_THRESHOLD\uFF09\u3002\u5E76\u4E14\uFF0C\u5F53\u8FD9\u4E2Ahash\u6876\u7684\u8282\u70B9\u56E0\u4E3A\u79FB\u9664\u6216\u8005\u6269\u5BB9\u540Eresize\u6570\u91CF\u53D8\u5C0F\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u4F1A\u5C06\u6811\u518D\u8F6C\u4E3A\u62C9\u94FE\u3002\u5982\u679C\u4E00\u4E2A\u7528\u6237\u7684\u6570\u636E\u7684hashcode\u503C\u5206\u5E03\u5F97\u5F88\u5747\u5300\u7684\u8BDD\uFF0C\u5C31\u4F1A\u5F88\u5C11\u4F7F\u7528\u5230\u7EA2\u9ED1\u6811\u3002</p><p>\u7406\u60F3\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u4F7F\u7528\u968F\u673A\u7684hashcode\u503C\uFF0C\u52A0\u8F7D\u56E0\u5B50\u4E3A0.75\u60C5\u51B5\uFF0C\u5C3D\u7BA1\u7531\u4E8E\u7C92\u5EA6\u8C03\u6574\u4F1A\u4EA7\u751F\u8F83\u5927\u7684\u65B9\u5DEE\uFF0C\u8282\u70B9\u7684\u5206\u5E03\u9891\u7387\u4ECD\u7136\u4F1A\u670D\u4ECE\u53C2\u6570\u4E3A0.5\u7684\u6CCA\u677E\u5206\u5E03\u3002\u94FE\u8868\u7684\u957F\u5EA6\u4E3A 8 \u53D1\u751F\u7684\u6982\u7387\u4EC5\u6709 0.00000006\u3002</p><p>\u867D\u7136\u8FD9\u6BB5\u8BDD\u7684\u672C\u610F\u66F4\u591A\u7684\u662F\u8868\u793A jdk 8\u4E2D\u4E3A\u4EC0\u4E48\u62C9\u94FE\u957F\u5EA6\u8D85\u8FC78\u7684\u65F6\u5019\u8FDB\u884C\u4E86\u7EA2\u9ED1\u6811\u8F6C\u6362\uFF0C\u4F46\u63D0\u5230\u4E86 0.75 \u8FD9\u4E2A\u52A0\u8F7D\u56E0\u5B50\u2014\u2014\u4F46\u8FD9\u5E76\u4E0D\u662F\u4E3A\u4EC0\u4E48\u52A0\u8F7D\u56E0\u5B50\u662F 0.75 \u7684\u7B54\u6848\u3002</p><p>\u4E3A\u4E86\u641E\u6E05\u695A\u5230\u5E95\u4E3A\u4EC0\u4E48\uFF0C\u6211\u770B\u5230\u4E86\u8FD9\u7BC7\u6587\u7AE0\uFF1A</p><blockquote><p>\u53C2\u8003\u94FE\u63A5\uFF1Ahttps://segmentfault.com/a/1190000023308658</p></blockquote><p>\u91CC\u9762\u63D0\u5230\u4E86\u4E00\u4E2A\u6982\u5FF5\uFF1A<strong>\u4E8C\u9879\u5206\u5E03</strong>\uFF08\u4E8C\u54E5\u6982\u7387\u8BBA\u6CA1\u5B66\u597D\uFF0C\u53EA\u80FD\u7B80\u5355\u8BF4\u4E00\u8BF4\uFF09\u3002</p><p>\u5728\u505A\u4E00\u4EF6\u4E8B\u60C5\u7684\u65F6\u5019\uFF0C\u5176\u7ED3\u679C\u7684\u6982\u7387\u53EA\u67092\u79CD\u60C5\u51B5\uFF0C\u548C\u629B\u786C\u5E01\u4E00\u6837\uFF0C\u4E0D\u662F\u6B63\u9762\u5C31\u662F\u53CD\u9762\u3002</p><p>\u4E3A\u6B64\uFF0C\u6211\u4EEC\u505A\u4E86 N \u6B21\u5B9E\u9A8C\uFF0C\u90A3\u4E48\u5728\u6BCF\u6B21\u8BD5\u9A8C\u4E2D\u53EA\u6709\u4E24\u79CD\u53EF\u80FD\u7684\u7ED3\u679C\uFF0C\u5E76\u4E14\u6BCF\u6B21\u5B9E\u9A8C\u662F\u72EC\u7ACB\u7684\uFF0C\u4E0D\u540C\u5B9E\u9A8C\u4E4B\u95F4\u4E92\u4E0D\u5F71\u54CD\uFF0C\u6BCF\u6B21\u5B9E\u9A8C\u6210\u529F\u7684\u6982\u7387\u90FD\u662F\u4E00\u6837\u7684\u3002</p><p>\u4EE5\u6B64\u7406\u8BBA\u4E3A\u57FA\u7840\uFF0C\u6211\u4EEC\u6765\u505A\u8FD9\u6837\u7684\u5B9E\u9A8C\uFF1A\u6211\u4EEC\u5F80\u54C8\u5E0C\u8868\u4E2D\u6254\u6570\u636E\uFF0C\u5982\u679C\u53D1\u751F\u54C8\u5E0C\u51B2\u7A81\u5C31\u4E3A\u5931\u8D25\uFF0C\u5426\u5219\u4E3A\u6210\u529F\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u8BBE\u60F3\uFF0C\u5B9E\u9A8C\u7684hash\u503C\u662F\u968F\u673A\u7684\uFF0C\u5E76\u4E14\u7ECF\u8FC7hash\u8FD0\u7B97\u7684\u952E\u90FD\u4F1A\u6620\u5C04\u5230hash\u8868\u7684\u5730\u5740\u7A7A\u95F4\u4E0A\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u7ED3\u679C\u4E5F\u662F\u968F\u673A\u7684\u3002\u6240\u4EE5\uFF0C\u6BCF\u6B21put\u7684\u65F6\u5019\u5C31\u76F8\u5F53\u4E8E\u6211\u4EEC\u5728\u6254\u4E00\u4E2A16\u9762\uFF08\u6211\u4EEC\u5148\u5047\u8BBE\u9ED8\u8BA4\u957F\u5EA6\u4E3A16\uFF09\u7684\u9AB0\u5B50\uFF0C\u6254\u9AB0\u5B50\u5B9E\u9A8C\u90A3\u80AF\u5B9A\u662F\u76F8\u4E92\u72EC\u7ACB\u7684\u3002\u78B0\u649E\u53D1\u751F\u5373\u6254\u4E86n\u6B21\u6709\u51FA\u73B0\u91CD\u590D\u6570\u5B57\u3002</p><p>\u7136\u540E\uFF0C\u6211\u4EEC\u7684\u76EE\u7684\u662F\u5565\u5462\uFF1F</p><p>\u5C31\u662F\u63B7\u4E86k\u6B21\u9AB0\u5B50\uFF0C\u6CA1\u6709\u4E00\u6B21\u662F\u76F8\u540C\u7684\u6982\u7387\uFF0C\u9700\u8981\u5C3D\u53EF\u80FD\u7684\u5927\u4E9B\uFF0C\u4E00\u822C\u610F\u4E49\u4E0A\u6211\u4EEC\u80AF\u5B9A\u8981\u5927\u4E8E0.5\uFF08\u8FD9\u4E2A\u6570\u662F\u4E2A\u7406\u60F3\u6570\uFF0C\u4F46\u662F\u6211\u662F\u80FD\u63A5\u53D7\u7684\uFF09\u3002</p><p>\u4E8E\u662F\uFF0Cn\u6B21\u4E8B\u4EF6\u91CC\u9762\uFF0C\u78B0\u649E\u4E3A0\u7684\u6982\u7387\uFF0C\u7531\u4E0A\u9762\u516C\u5F0F\u5F97\uFF1A</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-loadfactor-02.png" alt="" loading="lazy"></p><p>\u8FD9\u4E2A\u6982\u7387\u503C\u9700\u8981\u5927\u4E8E0.5\uFF0C\u6211\u4EEC\u8BA4\u4E3A\u8FD9\u6837\u7684hashmap\u53EF\u4EE5\u63D0\u4F9B\u5F88\u4F4E\u7684\u78B0\u649E\u7387\u3002\u6240\u4EE5\uFF1A</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-loadfactor-03png" alt="" loading="lazy"></p>`,35),H=s("p",null,[n("\u8FD9\u65F6\u5019\uFF0C\u6211\u4EEC\u5BF9\u4E8E\u8BE5\u516C\u5F0F\u5176\u5B9E\u6700\u60F3\u6C42\u7684\u65F6\u5019\u957F\u5EA6s\u7684\u65F6\u5019\uFF0Cn\u4E3A\u591A\u5C11\u6B21\u5C31\u5E94\u8BE5\u8FDB\u884C\u6269\u5BB9\u4E86\uFF1F\u800C\u8D1F\u8F7D\u56E0\u5B50\u5219\u662F"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",{mathvariant:"normal"},"/"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"n/s")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord"},"/"),s("span",{class:"mord mathnormal"},"s")])])]),n("\u7684\u503C\u3002\u6240\u4EE5\u63A8\u5BFC\u5982\u4E0B\uFF1A")],-1),D=s("p",null,[s("img",{src:"http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-loadfactor-04.png",alt:"",loading:"lazy"})],-1),X=s("p",null,"\u6240\u4EE5\u53EF\u4EE5\u5F97\u5230",-1),U=s("p",null,[s("img",{src:"http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-loadfactor-05.png",alt:"",loading:"lazy"})],-1),P=s("p",null,"\u5176\u4E2D",-1),Y=s("p",null,[s("img",{src:"http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-loadfactor-06.png",alt:"",loading:"lazy"})],-1),F=s("p",null,[n("\u8FD9\u5C31\u662F\u4E00\u4E2A\u6C42 "),s("code",null,"\u221E\u22C50"),n("\u51FD\u6570\u6781\u9650\u95EE\u9898\uFF0C\u8FD9\u91CC\u6211\u4EEC\u5148\u4EE4"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"s"),s("mo",null,"="),s("mi",null,"m"),s("mo",null,"+"),s("mn",null,"1"),s("mtext",null,"\uFF08"),s("mi",null,"m"),s("mo",null,"\u2192"),s("mi",{mathvariant:"normal"},"\u221E"),s("mtext",null,"\uFF09")]),s("annotation",{encoding:"application/x-tex"},"s = m+1\uFF08m \\to \\infty\uFF09")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mord cjk_fallback"},"\uFF08"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"\u2192"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord"},"\u221E"),s("span",{class:"mord cjk_fallback"},"\uFF09")])])]),n("\u5219\u8F6C\u5316\u4E3A")],-1),J=s("p",null,[s("img",{src:"http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-loadfactor-07.png",alt:"",loading:"lazy"})],-1),B=s("p",null,[n("\u6211\u4EEC\u518D\u4EE4 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x"),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("mi",null,"m")]),s("mtext",null,"\uFF08"),s("mi",null,"x"),s("mo",null,"\u2192"),s("mn",null,"0"),s("mtext",null,"\uFF09")]),s("annotation",{encoding:"application/x-tex"},"x = \\frac{1}{m} \uFF08x \\to 0\uFF09")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1901em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8451em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mord cjk_fallback"},"\uFF08"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"\u2192"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mord cjk_fallback"},"\uFF09")])])]),n(" \u5219\u6709\uFF0C")],-1),O=s("p",null,[s("img",{src:"http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-loadfactor-08.png",alt:"",loading:"lazy"})],-1),S=s("p",null,"\u6240\u4EE5\uFF0C",-1),R=s("p",null,[s("img",{src:"http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-loadfactor-09.png",alt:"",loading:"lazy"})],-1),W=n("\u8003\u8651\u5230 HashMap\u7684\u5BB9\u91CF\u6709\u4E00\u4E2A\u8981\u6C42\uFF1A\u5B83\u5FC5\u987B\u662F2\u7684n \u6B21\u5E42\uFF08\u8FD9\u4E2A"),G={href:"https://mp.weixin.qq.com/s/aS2dg4Dj1Efwujmv-6YTBg",target:"_blank",rel:"noopener noreferrer"},Q=n("\u4E4B\u524D\u7684\u6587\u7AE0"),Z=n("\u8BB2\u8FC7\u4E86\uFF0C\u70B9\u51FB\u94FE\u63A5\u56DE\u53BB\u53EF\u4EE5\u518D\u6E29\u6545\u4E00\u4E0B\uFF09\u3002\u5F53\u52A0\u8F7D\u56E0\u5B50\u9009\u62E9\u4E860.75\u5C31\u53EF\u4EE5\u4FDD\u8BC1\u5B83\u4E0E\u5BB9\u91CF\u7684\u4E58\u79EF\u4E3A\u6574\u6570\u3002"),$=a(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>16*0.75=12
32*0.75=24
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9664\u4E86 0.75\uFF0C0.5~1 \u4E4B\u95F4\u8FD8\u6709 0.625\uFF085/8\uFF09\u30010.875\uFF087/8\uFF09\u53EF\u9009\uFF0C\u4ECE\u4E2D\u4F4D\u6570\u7684\u89D2\u5EA6\uFF0C\u6311 0.75 \u6BD4\u8F83\u5B8C\u7F8E\u3002\u53E6\u5916\uFF0C\u7EF4\u57FA\u767E\u79D1\u4E0A\u8BF4\uFF0C\u62C9\u94FE\u6CD5\uFF08\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u7684\u4E00\u79CD\uFF09\u7684\u52A0\u8F7D\u56E0\u5B50\u6700\u597D\u9650\u5236\u5728 0.7-0.8\u4EE5\u4E0B\uFF0C\u8D85\u8FC70.8\uFF0C\u67E5\u8868\u65F6\u7684CPU\u7F13\u5B58\u4E0D\u547D\u4E2D\uFF08cache missing\uFF09\u4F1A\u6309\u7167\u6307\u6570\u66F2\u7EBF\u4E0A\u5347\u3002</p><p>\u7EFC\u4E0A\uFF0C0.75 \u662F\u4E2A\u6BD4\u8F83\u5B8C\u7F8E\u7684\u9009\u62E9\u3002</p><h2 id="\u56DB\u3001\u7EBF\u7A0B\u4E0D\u5B89\u5168" tabindex="-1"><a class="header-anchor" href="#\u56DB\u3001\u7EBF\u7A0B\u4E0D\u5B89\u5168" aria-hidden="true">#</a> \u56DB\u3001\u7EBF\u7A0B\u4E0D\u5B89\u5168</h2><p>\u4E09\u65B9\u9762\u539F\u56E0\uFF1A\u591A\u7EBF\u7A0B\u4E0B\u6269\u5BB9\u4F1A\u6B7B\u5FAA\u73AF\u3001\u591A\u7EBF\u7A0B\u4E0B put \u4F1A\u5BFC\u81F4\u5143\u7D20\u4E22\u5931\u3001put \u548C get \u5E76\u53D1\u65F6\u4F1A\u5BFC\u81F4 get \u5230 null\uFF0C\u6211\u4EEC\u6765\u4E00\u4E00\u5206\u6790\u3002</p><h3 id="_01\u3001\u591A\u7EBF\u7A0B\u4E0B\u6269\u5BB9\u4F1A\u6B7B\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#_01\u3001\u591A\u7EBF\u7A0B\u4E0B\u6269\u5BB9\u4F1A\u6B7B\u5FAA\u73AF" aria-hidden="true">#</a> 01\u3001\u591A\u7EBF\u7A0B\u4E0B\u6269\u5BB9\u4F1A\u6B7B\u5FAA\u73AF</h3><p>\u4F17\u6240\u5468\u77E5\uFF0CHashMap \u662F\u901A\u8FC7\u62C9\u94FE\u6CD5\u6765\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u7684\uFF0C\u4E5F\u5C31\u662F\u5F53\u54C8\u5E0C\u51B2\u7A81\u65F6\uFF0C\u4F1A\u5C06\u76F8\u540C\u54C8\u5E0C\u503C\u7684\u952E\u503C\u5BF9\u901A\u8FC7\u94FE\u8868\u7684\u5F62\u5F0F\u5B58\u653E\u8D77\u6765\u3002</p><p>JDK 7 \u65F6\uFF0C\u91C7\u7528\u7684\u662F\u5934\u90E8\u63D2\u5165\u7684\u65B9\u5F0F\u6765\u5B58\u653E\u94FE\u8868\u7684\uFF0C\u4E5F\u5C31\u662F\u4E0B\u4E00\u4E2A\u51B2\u7A81\u7684\u952E\u503C\u5BF9\u4F1A\u653E\u5728\u4E0A\u4E00\u4E2A\u952E\u503C\u5BF9\u7684\u524D\u9762\uFF08\u540C\u4E00\u4F4D\u7F6E\u4E0A\u7684\u65B0\u5143\u7D20\u88AB\u653E\u5728\u94FE\u8868\u7684\u5934\u90E8\uFF09\u3002\u6269\u5BB9\u7684\u65F6\u5019\u5C31\u6709\u53EF\u80FD\u5BFC\u81F4\u51FA\u73B0\u73AF\u5F62\u94FE\u8868\uFF0C\u9020\u6210\u6B7B\u5FAA\u73AF\u3002</p><p>resize \u65B9\u6CD5\u7684\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newCapacity\u4E3A\u65B0\u7684\u5BB9\u91CF</span>
<span class="token keyword">void</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token keyword">int</span> newCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C0F\u6570\u7EC4\uFF0C\u4E34\u65F6\u8FC7\u5EA6\u4E0B</span>
    <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTable <span class="token operator">=</span> table<span class="token punctuation">;</span>
    <span class="token comment">// \u6269\u5BB9\u524D\u7684\u5BB9\u91CF</span>
    <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> oldTable<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// MAXIMUM_CAPACITY \u4E3A\u6700\u5927\u5BB9\u91CF\uFF0C2 \u7684 30 \u6B21\u65B9 = 1&lt;&lt;30</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCapacity <span class="token operator">==</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5BB9\u91CF\u8C03\u6574\u4E3A Integer \u7684\u6700\u5927\u503C 0x7fffffff\uFF08\u5341\u516D\u8FDB\u5236\uFF09=2 \u7684 31 \u6B21\u65B9-1</span>
        threshold <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u521D\u59CB\u5316\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\uFF08\u5927\u5BB9\u91CF\uFF09</span>
    <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token punctuation">[</span>newCapacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u628A\u5C0F\u6570\u7EC4\u7684\u5143\u7D20\u8F6C\u79FB\u5230\u5927\u6570\u7EC4\u4E2D</span>
    <span class="token function">transfer</span><span class="token punctuation">(</span>newTable<span class="token punctuation">,</span> <span class="token function">initHashSeedAsNeeded</span><span class="token punctuation">(</span>newCapacity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5F15\u7528\u65B0\u7684\u5927\u6570\u7EC4</span>
    table <span class="token operator">=</span> newTable<span class="token punctuation">;</span>
    <span class="token comment">// \u91CD\u65B0\u8BA1\u7B97\u9608\u503C</span>
    threshold <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>newCapacity <span class="token operator">*</span> loadFactor<span class="token punctuation">,</span> MAXIMUM_CAPACITY <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>transfer \u65B9\u6CD5\u7528\u6765\u8F6C\u79FB\uFF0C\u5C06\u5C0F\u6570\u7EC4\u7684\u5143\u7D20\u62F7\u8D1D\u5230\u65B0\u7684\u6570\u7EC4\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTable<span class="token punctuation">,</span> <span class="token keyword">boolean</span> rehash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65B0\u7684\u5BB9\u91CF</span>
    <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> newTable<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u904D\u5386\u5C0F\u6570\u7EC4</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">:</span> table<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u62C9\u94FE\u6CD5\uFF0C\u76F8\u540C key \u4E0A\u7684\u4E0D\u540C\u503C</span>
            <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token comment">// \u662F\u5426\u9700\u8981\u91CD\u65B0\u8BA1\u7B97 hash</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>rehash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span>hash <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token operator">==</span> e<span class="token punctuation">.</span>key <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token function">hash</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u6839\u636E\u5927\u6570\u7EC4\u7684\u5BB9\u91CF\uFF0C\u548C\u952E\u7684 hash \u8BA1\u7B97\u5143\u7D20\u5728\u6570\u7EC4\u4E2D\u7684\u4E0B\u6807</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">indexFor</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u540C\u4E00\u4F4D\u7F6E\u4E0A\u7684\u65B0\u5143\u7D20\u88AB\u653E\u5728\u94FE\u8868\u7684\u5934\u90E8</span>
            e<span class="token punctuation">.</span>next <span class="token operator">=</span> newTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token comment">// \u653E\u5728\u65B0\u7684\u6570\u7EC4\u4E0A</span>
            newTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>

            <span class="token comment">// \u94FE\u8868\u4E0A\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20</span>
            e <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F <code>e.next = newTable[i]</code> \u548C <code>newTable[i] = e</code> \u8FD9\u4E24\u884C\u4EE3\u7801\uFF0C\u5C31\u4F1A\u5C06\u540C\u4E00\u4F4D\u7F6E\u4E0A\u7684\u65B0\u5143\u7D20\u88AB\u653E\u5728\u94FE\u8868\u7684\u5934\u90E8\u3002</p><p>\u6269\u5BB9\u524D\u7684\u6837\u5B50\u5047\u5982\u662F\u4E0B\u9762\u8FD9\u6837\u5B50\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-thread-nosafe-01.png" alt="" loading="lazy"></p><p>\u90A3\u4E48\u6B63\u5E38\u6269\u5BB9\u540E\u5C31\u662F\u4E0B\u9762\u8FD9\u6837\u5B50\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-thread-nosafe-02.png" alt="" loading="lazy"></p><p>\u5047\u8BBE\u73B0\u5728\u6709\u4E24\u4E2A\u7EBF\u7A0B\u540C\u65F6\u8FDB\u884C\u6269\u5BB9\uFF0C\u7EBF\u7A0B A \u5728\u6267\u884C\u5230 <code>newTable[i] = e;</code> \u88AB\u6302\u8D77\uFF0C\u6B64\u65F6\u7EBF\u7A0B A \u4E2D\uFF1Ae=3\u3001next=7\u3001e.next=null</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-thread-nosafe-03.png" alt="" loading="lazy"></p><p>\u7EBF\u7A0B B \u5F00\u59CB\u6267\u884C\uFF0C\u5E76\u4E14\u5B8C\u6210\u4E86\u6570\u636E\u8F6C\u79FB\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-thread-nosafe-04.png" alt="" loading="lazy"></p><p>\u6B64\u65F6\uFF0C7 \u7684 next \u4E3A 3\uFF0C3 \u7684 next \u4E3A null\u3002</p><p>\u968F\u540E\u7EBF\u7A0BA\u83B7\u5F97CPU\u65F6\u95F4\u7247\u7EE7\u7EED\u6267\u884C <code>newTable[i] = e</code>\uFF0C\u5C063\u653E\u5165\u65B0\u6570\u7EC4\u5BF9\u5E94\u7684\u4F4D\u7F6E\uFF0C\u6267\u884C\u5B8C\u6B64\u8F6E\u5FAA\u73AF\u540E\u7EBF\u7A0BA\u7684\u60C5\u51B5\u5982\u4E0B\uFF1A</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-thread-nosafe-05.png" alt="" loading="lazy"></p><p>\u6267\u884C\u4E0B\u4E00\u8F6E\u5FAA\u73AF\uFF0C\u6B64\u65F6 e=7\uFF0C\u539F\u672C\u7EBF\u7A0B A \u4E2D 7 \u7684 next \u4E3A 5\uFF0C\u4F46\u7531\u4E8E table \u662F\u7EBF\u7A0B A \u548C\u7EBF\u7A0B B \u5171\u4EAB\u7684\uFF0C\u800C\u7EBF\u7A0B B \u987A\u5229\u6267\u884C\u5B8C\u540E\uFF0C7 \u7684 next \u53D8\u6210\u4E86 3\uFF0C\u90A3\u4E48\u6B64\u65F6\u7EBF\u7A0B A \u4E2D\uFF0C7 \u7684 next \u4E5F\u4E3A 3 \u4E86\u3002</p><p>\u91C7\u7528\u5934\u90E8\u63D2\u5165\u7684\u65B9\u5F0F\uFF0C\u53D8\u6210\u4E86\u4E0B\u9762\u8FD9\u6837\u5B50\uFF1A</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-thread-nosafe-06.png" alt="" loading="lazy"></p><p>\u597D\u50CF\u4E5F\u6CA1\u4EC0\u4E48\u95EE\u9898\uFF0C\u6B64\u65F6 next = 3\uFF0Ce = 3\u3002</p><p>\u8FDB\u884C\u4E0B\u4E00\u8F6E\u5FAA\u73AF\uFF0C\u4F46\u6B64\u65F6\uFF0C\u7531\u4E8E\u7EBF\u7A0B B \u5C06 3 \u7684 next \u53D8\u4E3A\u4E86 null\uFF0C\u6240\u4EE5\u6B64\u8F6E\u5FAA\u73AF\u5E94\u8BE5\u662F\u6700\u540E\u4E00\u8F6E\u4E86\u3002</p><p>\u63A5\u4E0B\u6765\u5F53\u6267\u884C\u5B8C <code>e.next=newTable[i]</code> \u5373 3.next=7 \u540E\uFF0C3 \u548C 7 \u4E4B\u95F4\u5C31\u76F8\u4E92\u94FE\u63A5\u4E86\uFF0C\u6267\u884C\u5B8C <code>newTable[i]=e</code> \u540E\uFF0C3 \u88AB\u5934\u63D2\u6CD5\u91CD\u65B0\u63D2\u5165\u5230\u94FE\u8868\u4E2D\uFF0C\u6267\u884C\u7ED3\u679C\u5982\u4E0B\u56FE\u6240\u793A\uFF1A</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-thread-nosafe-07.png" alt="" loading="lazy"></p><p>\u5957\u5A03\u5F00\u59CB\uFF0C\u5143\u7D20 5 \u4E5F\u5C31\u6210\u4E86\u5F03\u5A74\uFF0C\u60E8~~~</p>`,32),ss=n("\u4E0D\u8FC7\uFF0CJDK 8 \u65F6\u5DF2\u7ECF\u4FEE\u590D\u4E86\u8FD9\u4E2A\u95EE\u9898\uFF0C\u6269\u5BB9\u65F6\u4F1A\u4FDD\u6301\u94FE\u8868\u539F\u6765\u7684\u987A\u5E8F\uFF0C\u53C2\u7167"),ns={href:"https://mp.weixin.qq.com/s/0KSpdBJMfXSVH63XadVdmw",target:"_blank",rel:"noopener noreferrer"},as=n("HashMap \u6269\u5BB9\u673A\u5236"),ts=n("\u7684\u8FD9\u4E00\u7BC7\u3002"),ps=a(`<h3 id="_02\u3001\u591A\u7EBF\u7A0B\u4E0B-put-\u4F1A\u5BFC\u81F4\u5143\u7D20\u4E22\u5931" tabindex="-1"><a class="header-anchor" href="#_02\u3001\u591A\u7EBF\u7A0B\u4E0B-put-\u4F1A\u5BFC\u81F4\u5143\u7D20\u4E22\u5931" aria-hidden="true">#</a> 02\u3001\u591A\u7EBF\u7A0B\u4E0B put \u4F1A\u5BFC\u81F4\u5143\u7D20\u4E22\u5931</h3><p>\u6B63\u5E38\u60C5\u51B5\u4E0B\uFF0C\u5F53\u53D1\u751F\u54C8\u5E0C\u51B2\u7A81\u65F6\uFF0CHashMap \u662F\u8FD9\u6837\u7684\uFF1A</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-thread-nosafe-08.png" alt="" loading="lazy"></p><p>\u4F46\u591A\u7EBF\u7A0B\u540C\u65F6\u6267\u884C put \u64CD\u4F5C\u65F6\uFF0C\u5982\u679C\u8BA1\u7B97\u51FA\u6765\u7684\u7D22\u5F15\u4F4D\u7F6E\u662F\u76F8\u540C\u7684\uFF0C\u90A3\u4F1A\u9020\u6210\u524D\u4E00\u4E2A key \u88AB\u540E\u4E00\u4E2A key \u8986\u76D6\uFF0C\u4ECE\u800C\u5BFC\u81F4\u5143\u7D20\u7684\u4E22\u5931\u3002</p><p>put \u7684\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">,</span>
               <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>

    <span class="token comment">// \u6B65\u9AA4\u2460\uFF1Atab\u4E3A\u7A7A\u5219\u521B\u5EFA</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        n <span class="token operator">=</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token comment">// \u6B65\u9AA4\u2461\uFF1A\u8BA1\u7B97index\uFF0C\u5E76\u5BF9null\u505A\u5904\u7406 </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>

        <span class="token comment">// \u6B65\u9AA4\u2462\uFF1A\u8282\u70B9key\u5B58\u5728\uFF0C\u76F4\u63A5\u8986\u76D6value</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            e <span class="token operator">=</span> p<span class="token punctuation">;</span>

        <span class="token comment">// \u6B65\u9AA4\u2463\uFF1A\u5224\u65AD\u8BE5\u94FE\u4E3A\u7EA2\u9ED1\u6811</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
            e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> tab<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u6B65\u9AA4\u2464\uFF1A\u8BE5\u94FE\u4E3A\u94FE\u8868</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//\u94FE\u8868\u957F\u5EA6\u5927\u4E8E8\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811\u8FDB\u884C\u5904\u7406</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> TREEIFY_THRESHOLD <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// -1 for 1st</span>
                        <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// key\u5DF2\u7ECF\u5B58\u5728\u76F4\u63A5\u8986\u76D6value</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                p <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u6B65\u9AA4\u2465\u3001\u76F4\u63A5\u8986\u76D6</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// existing mapping for key</span>
            <span class="token class-name">V</span> oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent <span class="token operator">||</span> oldValue <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token operator">++</span>modCount<span class="token punctuation">;</span>

    <span class="token comment">// \u6B65\u9AA4\u2466\uFF1A\u8D85\u8FC7\u6700\u5927\u5BB9\u91CF \u5C31\u6269\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>size <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span>evict<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u95EE\u9898\u53D1\u751F\u5728\u6B65\u9AA4 \u2461 \u8FD9\u91CC\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E24\u4E2A\u7EBF\u7A0B\u90FD\u6267\u884C\u4E86 if \u8BED\u53E5\uFF0C\u5047\u8BBE\u7EBF\u7A0B A \u5148\u6267\u884C\u4E86 <code> tab[i] = newNode(hash, key, value, null)</code>\uFF0C\u90A3 table \u662F\u8FD9\u6837\u7684\uFF1A</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-thread-nosafe-09.png" alt="" loading="lazy"></p><p>\u63A5\u7740\uFF0C\u7EBF\u7A0B B \u6267\u884C\u4E86 <code> tab[i] = newNode(hash, key, value, null)</code>\uFF0C\u90A3 table \u662F\u8FD9\u6837\u7684\uFF1A</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/hashmap-thread-nosafe-10.png" alt="" loading="lazy"></p><p>3 \u88AB\u5E72\u6389\u4E86\u3002</p><h3 id="_03\u3001put-\u548C-get-\u5E76\u53D1\u65F6\u4F1A\u5BFC\u81F4-get-\u5230-null" tabindex="-1"><a class="header-anchor" href="#_03\u3001put-\u548C-get-\u5E76\u53D1\u65F6\u4F1A\u5BFC\u81F4-get-\u5230-null" aria-hidden="true">#</a> 03\u3001put \u548C get \u5E76\u53D1\u65F6\u4F1A\u5BFC\u81F4 get \u5230 null</h3><p>\u7EBF\u7A0B A \u6267\u884Cput\u65F6\uFF0C\u56E0\u4E3A\u5143\u7D20\u4E2A\u6570\u8D85\u51FA\u9608\u503C\u800C\u51FA\u73B0\u6269\u5BB9\uFF0C\u7EBF\u7A0BB \u6B64\u65F6\u6267\u884Cget\uFF0C\u6709\u53EF\u80FD\u5BFC\u81F4\u8FD9\u4E2A\u95EE\u9898\u3002</p><p>\u6CE8\u610F\u6765\u770B resize \u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTab <span class="token operator">=</span> table<span class="token punctuation">;</span>
    <span class="token keyword">int</span> oldCap <span class="token operator">=</span> <span class="token punctuation">(</span>oldTab <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> oldTab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> oldThr <span class="token operator">=</span> threshold<span class="token punctuation">;</span>
    <span class="token keyword">int</span> newCap<span class="token punctuation">,</span> newThr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8D85\u8FC7\u6700\u5927\u503C\u5C31\u4E0D\u518D\u6269\u5145\u4E86\uFF0C\u5C31\u53EA\u597D\u968F\u4F60\u78B0\u649E\u53BB\u5427</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;=</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            threshold <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldTab<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6CA1\u8D85\u8FC7\u6700\u5927\u503C\uFF0C\u5C31\u6269\u5145\u4E3A\u539F\u6765\u76842\u500D</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>newCap <span class="token operator">=</span> oldCap <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> MAXIMUM_CAPACITY <span class="token operator">&amp;&amp;</span>
                 oldCap <span class="token operator">&gt;=</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span>
            newThr <span class="token operator">=</span> oldThr <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// double threshold</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldThr <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// initial capacity was placed in threshold</span>
        newCap <span class="token operator">=</span> oldThr<span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>               <span class="token comment">// zero initial threshold signifies using defaults</span>
        newCap <span class="token operator">=</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">;</span>
        newThr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>DEFAULT_LOAD_FACTOR <span class="token operator">*</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BA1\u7B97\u65B0\u7684resize\u4E0A\u9650</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newThr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">float</span> ft <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>newCap <span class="token operator">*</span> loadFactor<span class="token punctuation">;</span>
        newThr <span class="token operator">=</span> <span class="token punctuation">(</span>newCap <span class="token operator">&lt;</span> MAXIMUM_CAPACITY <span class="token operator">&amp;&amp;</span> ft <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>MAXIMUM_CAPACITY <span class="token operator">?</span>
                  <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ft <span class="token operator">:</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    threshold <span class="token operator">=</span> newThr<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;rawtypes&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTab <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span>newCap<span class="token punctuation">]</span><span class="token punctuation">;</span>
    table <span class="token operator">=</span> newTab<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EBF\u7A0B A \u6267\u884C\u5B8C <code>table = newTab</code> \u4E4B\u540E\uFF0C\u7EBF\u7A0B B \u4E2D\u7684 table \u6B64\u65F6\u4E5F\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u6B64\u65F6\u53BB get \u7684\u65F6\u5019\u5F53\u7136\u4F1A get \u5230 null \u4E86\uFF0C\u56E0\u4E3A\u5143\u7D20\u8FD8\u6CA1\u6709\u8F6C\u79FB\u3002</p><p>\u53C2\u8003\u94FE\u63A5\uFF1A</p><blockquote><ul><li>https://blog.csdn.net/lonyw/article/details/80519652</li><li>https://zhuanlan.zhihu.com/p/91636401</li><li>https://www.zhihu.com/question/20733617</li><li>https://zhuanlan.zhihu.com/p/21673805</li></ul></blockquote><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/xingbiaogongzhonghao.png" alt="" loading="lazy"></p>`,21);function es(os,ls){const t=o("ExternalLinkIcon");return l(),c("div",null,[u,r,k,d,m,v,s("p",null,[h,s("a",b,[g,p(t)]),y]),w,s("p",null,[x,s("a",f,[_,p(t)]),M]),T,j,z,A,C,s("p",null,[I,N,V,s("a",L,[K,p(t)]),q]),E,H,D,X,U,P,Y,F,J,B,O,S,R,s("p",null,[W,s("a",G,[Q,p(t)]),Z]),$,s("p",null,[ss,s("a",ns,[as,p(t)]),ts]),ps])}var us=e(i,[["render",es],["__file","hashmap.html.vue"]]);export{us as default};
