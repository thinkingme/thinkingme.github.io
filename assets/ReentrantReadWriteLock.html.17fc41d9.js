import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o,c,b as n,a,e as l,d as t}from"./app.9b6c14fa.js";const i={},u=l(`<h1 id="\u6DF1\u5165\u7406\u89E3java\u5E76\u53D1\u8BFB\u5199\u9501reentrantreadwritelock" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u5165\u7406\u89E3java\u5E76\u53D1\u8BFB\u5199\u9501reentrantreadwritelock" aria-hidden="true">#</a> \u6DF1\u5165\u7406\u89E3Java\u5E76\u53D1\u8BFB\u5199\u9501ReentrantReadWriteLock</h1><p>\u5728\u5E76\u53D1\u573A\u666F\u4E2D\u7528\u4E8E\u89E3\u51B3\u7EBF\u7A0B\u5B89\u5168\u7684\u95EE\u9898\uFF0C\u6211\u4EEC\u51E0\u4E4E\u4F1A\u9AD8\u9891\u7387\u7684\u4F7F\u7528\u5230\u72EC\u5360\u5F0F\u9501\uFF0C\u901A\u5E38\u4F7F\u7528java\u63D0\u4F9B\u7684\u5173\u952E\u5B57synchronized\u6216\u8005concurrents\u5305\u4E2D\u5B9E\u73B0\u4E86Lock\u63A5\u53E3\u7684ReentrantLock\u3002\u5B83\u4EEC\u90FD\u662F\u72EC\u5360\u5F0F\u83B7\u53D6\u9501\uFF0C\u4E5F\u5C31\u662F\u5728\u540C\u4E00\u65F6\u523B\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u80FD\u591F\u83B7\u53D6\u9501\u3002</p><p>\u800C\u5728\u4E00\u4E9B\u4E1A\u52A1\u573A\u666F\u4E2D\uFF0C\u5927\u90E8\u5206\u53EA\u662F\u8BFB\u6570\u636E\uFF0C\u5199\u6570\u636E\u5F88\u5C11\uFF0C\u5982\u679C\u4EC5\u4EC5\u662F\u8BFB\u6570\u636E\u7684\u8BDD\u5E76\u4E0D\u4F1A\u5F71\u54CD\u6570\u636E\u6B63\u786E\u6027\uFF08\u51FA\u73B0\u810F\u8BFB\uFF09\uFF0C\u800C\u5982\u679C\u5728\u8FD9\u79CD\u4E1A\u52A1\u573A\u666F\u4E0B\uFF0C\u4F9D\u7136\u4F7F\u7528\u72EC\u5360\u9501\u7684\u8BDD\uFF0C\u5F88\u663E\u7136\u8FD9\u5C06\u662F\u51FA\u73B0\u6027\u80FD\u74F6\u9888\u7684\u5730\u65B9\u3002\u9488\u5BF9\u8FD9\u79CD\u8BFB\u591A\u5199\u5C11\u7684\u60C5\u51B5\uFF0Cjava\u8FD8\u63D0\u4F9B\u4E86\u53E6\u5916\u4E00\u4E2A\u5B9E\u73B0Lock\u63A5\u53E3\u7684ReentrantReadWriteLock(\u8BFB\u5199\u9501)\u3002</p><p><strong>\u8BFB\u5199\u9501\u5141\u8BB8\u540C\u4E00\u65F6\u523B\u88AB\u591A\u4E2A\u8BFB\u7EBF\u7A0B\u8BBF\u95EE\uFF0C\u4F46\u662F\u5728\u5199\u7EBF\u7A0B\u8BBF\u95EE\u65F6\uFF0C\u6240\u6709\u7684\u8BFB\u7EBF\u7A0B\u548C\u5176\u4ED6\u7684\u5199\u7EBF\u7A0B\u90FD\u4F1A\u88AB\u963B\u585E</strong>\u3002\u5728\u5206\u6790WirteLock\u548CReadLock\u7684\u4E92\u65A5\u6027\u65F6\u53EF\u4EE5\u6309\u7167WriteLock\u4E0EWriteLock\u4E4B\u95F4\uFF0CWriteLock\u4E0EReadLock\u4E4B\u95F4\u4EE5\u53CAReadLock\u4E0EReadLock\u4E4B\u95F4\u8FDB\u884C\u5206\u6790\u3002</p><p>\u66F4\u591A\u5173\u4E8E\u8BFB\u5199\u9501\u7279\u6027\u4ECB\u7ECD\u5927\u5BB6\u53EF\u4EE5\u770B\u6E90\u7801\u4E0A\u7684\u4ECB\u7ECD\uFF08\u9605\u8BFB\u6E90\u7801\u65F6\u6700\u597D\u7684\u4E00\u79CD\u5B66\u4E60\u65B9\u5F0F\uFF0C\u6211\u4E5F\u6B63\u5728\u5B66\u4E60\u4E2D\uFF0C\u4E0E\u5927\u5BB6\u5171\u52C9\uFF09\uFF0C\u8FD9\u91CC\u505A\u4E00\u4E2A\u5F52\u7EB3\u603B\u7ED3\uFF1A</p><ol><li><strong>\u516C\u5E73\u6027\u9009\u62E9</strong>\uFF1A\u652F\u6301\u975E\u516C\u5E73\u6027\uFF08\u9ED8\u8BA4\uFF09\u548C\u516C\u5E73\u7684\u9501\u83B7\u53D6\u65B9\u5F0F\uFF0C\u541E\u5410\u91CF\u8FD8\u662F\u975E\u516C\u5E73\u4F18\u4E8E\u516C\u5E73\uFF1B</li><li><strong>\u91CD\u5165\u6027</strong>\uFF1A\u652F\u6301\u91CD\u5165\uFF0C\u8BFB\u9501\u83B7\u53D6\u540E\u80FD\u518D\u6B21\u83B7\u53D6\uFF0C\u5199\u9501\u83B7\u53D6\u4E4B\u540E\u80FD\u591F\u518D\u6B21\u83B7\u53D6\u5199\u9501\uFF0C\u540C\u65F6\u4E5F\u80FD\u591F\u83B7\u53D6\u8BFB\u9501\uFF1B</li><li><strong>\u9501\u964D\u7EA7</strong>\uFF1A\u9075\u5FAA\u83B7\u53D6\u5199\u9501\uFF0C\u83B7\u53D6\u8BFB\u9501\u518D\u91CA\u653E\u5199\u9501\u7684\u6B21\u5E8F\uFF0C\u5199\u9501\u80FD\u591F\u964D\u7EA7\u6210\u4E3A\u8BFB\u9501</li></ol><p>\u8981\u60F3\u80FD\u591F\u5F7B\u5E95\u7684\u7406\u89E3\u8BFB\u5199\u9501\u5FC5\u987B\u80FD\u591F\u7406\u89E3\u8FD9\u6837\u51E0\u4E2A\u95EE\u9898\uFF1A</p><ul><li><ol><li>\u8BFB\u5199\u9501\u662F\u600E\u6837\u5B9E\u73B0\u5206\u522B\u8BB0\u5F55\u8BFB\u5199\u72B6\u6001\u7684\uFF1F</li></ol></li><li><ol start="2"><li>\u5199\u9501\u662F\u600E\u6837\u83B7\u53D6\u548C\u91CA\u653E\u7684\uFF1F</li></ol></li><li>3.\u8BFB\u9501\u662F\u600E\u6837\u83B7\u53D6\u548C\u91CA\u653E\u7684\uFF1F</li></ul><p>\u6211\u4EEC\u5E26\u7740\u8FD9\u6837\u7684\u4E09\u4E2A\u95EE\u9898\uFF0C\u518D\u53BB\u4E86\u89E3\u4E0B\u8BFB\u5199\u9501\u3002</p><h2 id="\u5199\u9501\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#\u5199\u9501\u8BE6\u89E3" aria-hidden="true">#</a> \u5199\u9501\u8BE6\u89E3</h2><h3 id="\u5199\u9501\u7684\u83B7\u53D6" tabindex="-1"><a class="header-anchor" href="#\u5199\u9501\u7684\u83B7\u53D6" aria-hidden="true">#</a> \u5199\u9501\u7684\u83B7\u53D6</h3><p>\u540C\u6B65\u7EC4\u4EF6\u7684\u5B9E\u73B0\u805A\u5408\u4E86\u540C\u6B65\u5668\uFF08AQS\uFF09\uFF0C\u5E76\u901A\u8FC7\u91CD\u5199\u91CD\u5199\u540C\u6B65\u5668\uFF08AQS\uFF09\u4E2D\u7684\u65B9\u6CD5\u5B9E\u73B0\u540C\u6B65\u7EC4\u4EF6\u7684\u540C\u6B65\u8BED\u4E49\u3002\u56E0\u6B64\uFF0C\u5199\u9501\u7684\u5B9E\u73B0\u4F9D\u7136\u4E5F\u662F\u91C7\u7528\u8FD9\u79CD\u65B9\u5F0F\u3002\u5728\u540C\u4E00\u65F6\u523B\u5199\u9501\u662F\u4E0D\u80FD\u88AB\u591A\u4E2A\u7EBF\u7A0B\u6240\u83B7\u53D6\uFF0C\u5F88\u663E\u7136\u5199\u9501\u662F\u72EC\u5360\u5F0F\u9501\uFF0C\u800C\u5B9E\u73B0\u5199\u9501\u7684\u540C\u6B65\u8BED\u4E49\u662F\u901A\u8FC7\u91CD\u5199AQS\u4E2D\u7684tryAcquire\u65B9\u6CD5\u5B9E\u73B0\u7684\u3002\u6E90\u7801\u4E3A:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryAcquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> acquires<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
     * Walkthrough:
     * 1. If read count nonzero or write count nonzero
     *    and owner is a different thread, fail.
     * 2. If count would saturate, fail. (This can only
     *    happen if count is already nonzero.)
     * 3. Otherwise, this thread is eligible for lock if
     *    it is either a reentrant acquire or
     *    queue policy allows it. If so, update state
     *    and set owner.
     */</span>
    <span class="token class-name">Thread</span> current <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 1. \u83B7\u53D6\u5199\u9501\u5F53\u524D\u7684\u540C\u6B65\u72B6\u6001</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 2. \u83B7\u53D6\u5199\u9501\u83B7\u53D6\u7684\u6B21\u6570</span>
    <span class="token keyword">int</span> w <span class="token operator">=</span> <span class="token function">exclusiveCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// (Note: if c != 0 and w == 0 then shared count != 0)</span>
		<span class="token comment">// 3.1 \u5F53\u8BFB\u9501\u5DF2\u88AB\u8BFB\u7EBF\u7A0B\u83B7\u53D6\u6216\u8005\u5F53\u524D\u7EBF\u7A0B\u4E0D\u662F\u5DF2\u7ECF\u83B7\u53D6\u5199\u9501\u7684\u7EBF\u7A0B\u7684\u8BDD</span>
		<span class="token comment">// \u5F53\u524D\u7EBF\u7A0B\u83B7\u53D6\u5199\u9501\u5931\u8D25</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> current <span class="token operator">!=</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>w <span class="token operator">+</span> <span class="token function">exclusiveCount</span><span class="token punctuation">(</span>acquires<span class="token punctuation">)</span> <span class="token operator">&gt;</span> MAX_COUNT<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Maximum lock count exceeded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Reentrant acquire</span>
		<span class="token comment">// 3.2 \u5F53\u524D\u7EBF\u7A0B\u83B7\u53D6\u5199\u9501\uFF0C\u652F\u6301\u53EF\u91CD\u590D\u52A0\u9501</span>
        <span class="token function">setState</span><span class="token punctuation">(</span>c <span class="token operator">+</span> acquires<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
	<span class="token comment">// 3.3 \u5199\u9501\u672A\u88AB\u4EFB\u4F55\u7EBF\u7A0B\u83B7\u53D6\uFF0C\u5F53\u524D\u7EBF\u7A0B\u53EF\u83B7\u53D6\u5199\u9501</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">writerShouldBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token operator">!</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> c <span class="token operator">+</span> acquires<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6BB5\u4EE3\u7801\u7684\u903B\u8F91\u8BF7\u770B\u6CE8\u91CA\uFF0C\u8FD9\u91CC\u6709\u4E00\u4E2A\u5730\u65B9\u9700\u8981\u91CD\u70B9\u5173\u6CE8\uFF0CexclusiveCount(c)\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u6E90\u7801\u4E3A\uFF1A</p><p><code>static int exclusiveCount(int c) { return c &amp; EXCLUSIVE_MASK; }</code></p><p>\u5176\u4E2D<strong>EXCLUSIVE_MASK</strong>\u4E3A: <code>static final int EXCLUSIVE_MASK = (1 &lt;&lt; SHARED_SHIFT) - 1;</code> EXCLUSIVE_MASK \u4E3A1\u5DE6\u79FB16\u4F4D\u7136\u540E\u51CF1\uFF0C\u5373\u4E3A0x0000FFFF\u3002\u800CexclusiveCount\u65B9\u6CD5\u662F\u5C06\u540C\u6B65\u72B6\u6001\uFF08state\u4E3Aint\u7C7B\u578B\uFF09\u4E0E0x0000FFFF\u76F8\u4E0E\uFF0C\u5373\u53D6\u540C\u6B65\u72B6\u6001\u7684\u4F4E16\u4F4D\u3002\u90A3\u4E48\u4F4E16\u4F4D\u4EE3\u8868\u4EC0\u4E48\u5462\uFF1F\u6839\u636EexclusiveCount\u65B9\u6CD5\u7684\u6CE8\u91CA\u4E3A\u72EC\u5360\u5F0F\u83B7\u53D6\u7684\u6B21\u6570\u5373\u5199\u9501\u88AB\u83B7\u53D6\u7684\u6B21\u6570\uFF0C\u73B0\u5728\u5C31\u53EF\u4EE5\u5F97\u51FA\u6765\u4E00\u4E2A\u7ED3\u8BBA<strong>\u540C\u6B65\u72B6\u6001\u7684\u4F4E16\u4F4D\u7528\u6765\u8868\u793A\u5199\u9501\u7684\u83B7\u53D6\u6B21\u6570</strong>\u3002\u540C\u65F6\u8FD8\u6709\u4E00\u4E2A\u65B9\u6CD5\u503C\u5F97\u6211\u4EEC\u6CE8\u610F\uFF1A</p><p><code>static int sharedCount(int c) { return c &gt;&gt;&gt; SHARED_SHIFT; }</code></p><p>\u8BE5\u65B9\u6CD5\u662F\u83B7\u53D6\u8BFB\u9501\u88AB\u83B7\u53D6\u7684\u6B21\u6570\uFF0C\u662F\u5C06\u540C\u6B65\u72B6\u6001\uFF08int c\uFF09\u53F3\u79FB16\u6B21\uFF0C\u5373\u53D6\u540C\u6B65\u72B6\u6001\u7684\u9AD816\u4F4D\uFF0C\u73B0\u5728\u6211\u4EEC\u53EF\u4EE5\u5F97\u51FA\u53E6\u5916\u4E00\u4E2A\u7ED3\u8BBA<strong>\u540C\u6B65\u72B6\u6001\u7684\u9AD816\u4F4D\u7528\u6765\u8868\u793A\u8BFB\u9501\u88AB\u83B7\u53D6\u7684\u6B21\u6570</strong>\u3002\u73B0\u5728\u8FD8\u8BB0\u5F97\u6211\u4EEC\u5F00\u7BC7\u8BF4\u7684\u9700\u8981\u5F04\u61C2\u7684\u7B2C\u4E00\u4E2A\u95EE\u9898\u5417\uFF1F\u8BFB\u5199\u9501\u662F\u600E\u6837\u5B9E\u73B0\u5206\u522B\u8BB0\u5F55\u8BFB\u9501\u548C\u5199\u9501\u7684\u72B6\u6001\u7684\uFF0C\u73B0\u5728\u8FD9\u4E2A\u95EE\u9898\u7684\u7B54\u6848\u5C31\u5DF2\u7ECF\u88AB\u6211\u4EEC\u5F04\u6E05\u695A\u4E86\uFF0C\u5176\u793A\u610F\u56FE\u5982\u4E0B\u56FE\u6240\u793A\uFF1A</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/thread/ReentrantReadWriteLock-f714bdd6-917a-4d25-ac11-7e85b0ec1b14.png" alt="\u8BFB\u5199\u9501\u7684\u8BFB\u5199\u72B6\u6001\u8BBE\u8BA1" loading="lazy"></p><p>\u73B0\u5728\u6211\u4EEC\u56DE\u8FC7\u5934\u6765\u770B\u5199\u9501\u83B7\u53D6\u65B9\u6CD5tryAcquire\uFF0C\u5176\u4E3B\u8981\u903B\u8F91\u4E3A\uFF1A<strong>\u5F53\u8BFB\u9501\u5DF2\u7ECF\u88AB\u8BFB\u7EBF\u7A0B\u83B7\u53D6\u6216\u8005\u5199\u9501\u5DF2\u7ECF\u88AB\u5176\u4ED6\u5199\u7EBF\u7A0B\u83B7\u53D6\uFF0C\u5219\u5199\u9501\u83B7\u53D6\u5931\u8D25\uFF1B\u5426\u5219\uFF0C\u83B7\u53D6\u6210\u529F\u5E76\u652F\u6301\u91CD\u5165\uFF0C\u589E\u52A0\u5199\u72B6\u6001\u3002</strong></p><h3 id="\u5199\u9501\u7684\u91CA\u653E" tabindex="-1"><a class="header-anchor" href="#\u5199\u9501\u7684\u91CA\u653E" aria-hidden="true">#</a> \u5199\u9501\u7684\u91CA\u653E</h3><p>\u5199\u9501\u91CA\u653E\u901A\u8FC7\u91CD\u5199AQS\u7684tryRelease\u65B9\u6CD5\uFF0C\u6E90\u7801\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryRelease</span><span class="token punctuation">(</span><span class="token keyword">int</span> releases<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalMonitorStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//1. \u540C\u6B65\u72B6\u6001\u51CF\u53BB\u5199\u72B6\u6001</span>
    <span class="token keyword">int</span> nextc <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> releases<span class="token punctuation">;</span>
	<span class="token comment">//2. \u5F53\u524D\u5199\u72B6\u6001\u662F\u5426\u4E3A0\uFF0C\u4E3A0\u5219\u91CA\u653E\u5199\u9501</span>
    <span class="token keyword">boolean</span> free <span class="token operator">=</span> <span class="token function">exclusiveCount</span><span class="token punctuation">(</span>nextc<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>free<span class="token punctuation">)</span>
        <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//3. \u4E0D\u4E3A0\u5219\u66F4\u65B0\u540C\u6B65\u72B6\u6001</span>
    <span class="token function">setState</span><span class="token punctuation">(</span>nextc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> free<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6E90\u7801\u7684\u5B9E\u73B0\u903B\u8F91\u8BF7\u770B\u6CE8\u91CA\uFF0C\u4E0D\u96BE\u7406\u89E3\u4E0EReentrantLock\u57FA\u672C\u4E00\u81F4\uFF0C\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u51CF\u5C11\u5199\u72B6\u6001<code> int nextc = getState() - releases;</code>\u53EA\u9700\u8981\u7528<strong>\u5F53\u524D\u540C\u6B65\u72B6\u6001\u76F4\u63A5\u51CF\u53BB\u5199\u72B6\u6001\u7684\u539F\u56E0\u6B63\u662F\u6211\u4EEC\u521A\u624D\u6240\u8BF4\u7684\u5199\u72B6\u6001\u662F\u7531\u540C\u6B65\u72B6\u6001\u7684\u4F4E16\u4F4D\u8868\u793A\u7684</strong>\u3002</p><h2 id="\u8BFB\u9501\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u9501\u8BE6\u89E3" aria-hidden="true">#</a> \u8BFB\u9501\u8BE6\u89E3</h2><h3 id="\u8BFB\u9501\u7684\u83B7\u53D6" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u9501\u7684\u83B7\u53D6" aria-hidden="true">#</a> \u8BFB\u9501\u7684\u83B7\u53D6</h3><p>\u770B\u5B8C\u4E86\u5199\u9501\uFF0C\u73B0\u5728\u6765\u770B\u770B\u8BFB\u9501\uFF0C\u8BFB\u9501\u4E0D\u662F\u72EC\u5360\u5F0F\u9501\uFF0C\u5373\u540C\u4E00\u65F6\u523B\u8BE5\u9501\u53EF\u4EE5\u88AB\u591A\u4E2A\u8BFB\u7EBF\u7A0B\u83B7\u53D6\u4E5F\u5C31\u662F\u4E00\u79CD\u5171\u4EAB\u5F0F\u9501\u3002\u6309\u7167\u4E4B\u524D\u5BF9AQS\u4ECB\u7ECD\uFF0C\u5B9E\u73B0\u5171\u4EAB\u5F0F\u540C\u6B65\u7EC4\u4EF6\u7684\u540C\u6B65\u8BED\u4E49\u9700\u8981\u901A\u8FC7\u91CD\u5199AQS\u7684tryAcquireShared\u65B9\u6CD5\u548CtryReleaseShared\u65B9\u6CD5\u3002\u8BFB\u9501\u7684\u83B7\u53D6\u5B9E\u73B0\u65B9\u6CD5\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">tryAcquireShared</span><span class="token punctuation">(</span><span class="token keyword">int</span> unused<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
     * Walkthrough:
     * 1. If write lock held by another thread, fail.
     * 2. Otherwise, this thread is eligible for
     *    lock wrt state, so ask if it should block
     *    because of queue policy. If not, try
     *    to grant by CASing state and updating count.
     *    Note that step does not check for reentrant
     *    acquires, which is postponed to full version
     *    to avoid having to check hold count in
     *    the more typical non-reentrant case.
     * 3. If step 2 fails either because thread
     *    apparently not eligible or CAS fails or count
     *    saturated, chain to version with full retry loop.
     */</span>
    <span class="token class-name">Thread</span> current <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//1. \u5982\u679C\u5199\u9501\u5DF2\u7ECF\u88AB\u83B7\u53D6\u5E76\u4E14\u83B7\u53D6\u5199\u9501\u7684\u7EBF\u7A0B\u4E0D\u662F\u5F53\u524D\u7EBF\u7A0B\u7684\u8BDD\uFF0C\u5F53\u524D</span>
	<span class="token comment">// \u7EBF\u7A0B\u83B7\u53D6\u8BFB\u9501\u5931\u8D25\u8FD4\u56DE-1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">exclusiveCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
        <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> current<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token function">sharedCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">readerShouldBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        r <span class="token operator">&lt;</span> MAX_COUNT <span class="token operator">&amp;&amp;</span>
		<span class="token comment">//2. \u5F53\u524D\u7EBF\u7A0B\u83B7\u53D6\u8BFB\u9501</span>
        <span class="token function">compareAndSetState</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> c <span class="token operator">+</span> SHARED_UNIT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//3. \u4E0B\u9762\u7684\u4EE3\u7801\u4E3B\u8981\u662F\u65B0\u589E\u7684\u4E00\u4E9B\u529F\u80FD\uFF0C\u6BD4\u5982getReadHoldCount()\u65B9\u6CD5</span>
		<span class="token comment">//\u8FD4\u56DE\u5F53\u524D\u83B7\u53D6\u8BFB\u9501\u7684\u6B21\u6570</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            firstReader <span class="token operator">=</span> current<span class="token punctuation">;</span>
            firstReaderHoldCount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>firstReader <span class="token operator">==</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            firstReaderHoldCount<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">HoldCounter</span> rh <span class="token operator">=</span> cachedHoldCounter<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>rh <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> rh<span class="token punctuation">.</span>tid <span class="token operator">!=</span> <span class="token function">getThreadId</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span>
                cachedHoldCounter <span class="token operator">=</span> rh <span class="token operator">=</span> readHolds<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>rh<span class="token punctuation">.</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                readHolds<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>rh<span class="token punctuation">)</span><span class="token punctuation">;</span>
            rh<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
	<span class="token comment">//4. \u5904\u7406\u5728\u7B2C\u4E8C\u6B65\u4E2DCAS\u64CD\u4F5C\u5931\u8D25\u7684\u81EA\u65CB\u5DF2\u7ECF\u5B9E\u73B0\u91CD\u5165\u6027</span>
    <span class="token keyword">return</span> <span class="token function">fullTryAcquireShared</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u7684\u903B\u8F91\u8BF7\u770B\u6CE8\u91CA\uFF0C\u9700\u8981\u6CE8\u610F\u7684\u662F <strong>\u5F53\u5199\u9501\u88AB\u5176\u4ED6\u7EBF\u7A0B\u83B7\u53D6\u540E\uFF0C\u8BFB\u9501\u83B7\u53D6\u5931\u8D25</strong>\uFF0C\u5426\u5219\u83B7\u53D6\u6210\u529F\u5229\u7528CAS\u66F4\u65B0\u540C\u6B65\u72B6\u6001\u3002</p><p>\u53E6\u5916\uFF0C\u5F53\u524D\u540C\u6B65\u72B6\u6001\u9700\u8981\u52A0\u4E0ASHARED_UNIT\uFF08<code>(1 &lt;&lt; SHARED_SHIFT)</code>\u53730x00010000\uFF09\u7684\u539F\u56E0\u8FD9\u662F\u6211\u4EEC\u5728\u4E0A\u9762\u6240\u8BF4\u7684\u540C\u6B65\u72B6\u6001\u7684\u9AD816\u4F4D\u7528\u6765\u8868\u793A\u8BFB\u9501\u88AB\u83B7\u53D6\u7684\u6B21\u6570\u3002\u5982\u679CCAS\u5931\u8D25\u6216\u8005\u5DF2\u7ECF\u83B7\u53D6\u8BFB\u9501\u7684\u7EBF\u7A0B\u518D\u6B21\u83B7\u53D6\u8BFB\u9501\u65F6\uFF0C\u662F\u9760fullTryAcquireShared\u65B9\u6CD5\u5B9E\u73B0\u7684\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u5C31\u4E0D\u5C55\u5F00\u8BF4\u4E86\uFF0C\u6709\u5174\u8DA3\u53EF\u4EE5\u770B\u770B\u3002</p><h3 id="\u8BFB\u9501\u7684\u91CA\u653E" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u9501\u7684\u91CA\u653E" aria-hidden="true">#</a> \u8BFB\u9501\u7684\u91CA\u653E</h3><p>\u8BFB\u9501\u91CA\u653E\u7684\u5B9E\u73B0\u4E3B\u8981\u901A\u8FC7\u65B9\u6CD5tryReleaseShared\uFF0C\u6E90\u7801\u5982\u4E0B\uFF0C\u4E3B\u8981\u903B\u8F91\u8BF7\u770B\u6CE8\u91CA\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryReleaseShared</span><span class="token punctuation">(</span><span class="token keyword">int</span> unused<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span> current <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u524D\u9762\u8FD8\u662F\u4E3A\u4E86\u5B9E\u73B0getReadHoldCount\u7B49\u65B0\u529F\u80FD</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>firstReader <span class="token operator">==</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// assert firstReaderHoldCount &gt; 0;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>firstReaderHoldCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
            firstReader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            firstReaderHoldCount<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">HoldCounter</span> rh <span class="token operator">=</span> cachedHoldCounter<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rh <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> rh<span class="token punctuation">.</span>tid <span class="token operator">!=</span> <span class="token function">getThreadId</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span>
            rh <span class="token operator">=</span> readHolds<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> rh<span class="token punctuation">.</span>count<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            readHolds<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token function">unmatchedUnlockException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token operator">--</span>rh<span class="token punctuation">.</span>count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u8BFB\u9501\u91CA\u653E \u5C06\u540C\u6B65\u72B6\u6001\u51CF\u53BB\u8BFB\u72B6\u6001\u5373\u53EF</span>
        <span class="token keyword">int</span> nextc <span class="token operator">=</span> c <span class="token operator">-</span> SHARED_UNIT<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> nextc<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment">// Releasing the read lock has no effect on readers,</span>
            <span class="token comment">// but it may allow waiting writers to proceed if</span>
            <span class="token comment">// both read and write locks are now free.</span>
            <span class="token keyword">return</span> nextc <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u9501\u964D\u7EA7" tabindex="-1"><a class="header-anchor" href="#\u9501\u964D\u7EA7" aria-hidden="true">#</a> \u9501\u964D\u7EA7</h2><p>\u8BFB\u5199\u9501\u652F\u6301\u9501\u964D\u7EA7\uFF0C<strong>\u9075\u5FAA\u6309\u7167\u83B7\u53D6\u5199\u9501\uFF0C\u83B7\u53D6\u8BFB\u9501\u518D\u91CA\u653E\u5199\u9501\u7684\u6B21\u5E8F\uFF0C\u5199\u9501\u80FD\u591F\u964D\u7EA7\u6210\u4E3A\u8BFB\u9501</strong>\uFF0C\u4E0D\u652F\u6301\u9501\u5347\u7EA7\uFF0C\u5173\u4E8E\u9501\u964D\u7EA7\u4E0B\u9762\u7684\u793A\u4F8B\u4EE3\u7801\u6458\u81EAReentrantWriteReadLock\u6E90\u7801\u4E2D\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">processCachedData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    rwl<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cacheValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Must release read lock before acquiring write lock</span>
        rwl<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rwl<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// Recheck state because another thread might have</span>
            <span class="token comment">// acquired write lock and changed state before we did.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cacheValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                data <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        cacheValid <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// Downgrade by acquiring read lock before releasing write lock</span>
      rwl<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      rwl<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Unlock write, still hold read</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">use</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    rwl<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,37),r=n("p",null,"\u7F16\u8F91\uFF1A\u6C89\u9ED8\u738B\u4E8C\uFF0C\u5185\u5BB9\u5927\u90E8\u5206\u6765\u6E90\u4EE5\u4E0B\u4E09\u4E2A\u5F00\u6E90\u4ED3\u5E93\uFF1A",-1),k={href:"http://concurrent.redspider.group/",target:"_blank",rel:"noopener noreferrer"},d=t("\u6DF1\u5165\u6D45\u51FA Java \u591A\u7EBF\u7A0B"),v={href:"https://github.com/CL0610/Java-concurrency",target:"_blank",rel:"noopener noreferrer"},m=t("\u5E76\u53D1\u7F16\u7A0B\u77E5\u8BC6\u603B\u7ED3"),b={href:"https://github.com/CoderLeixiaoshuai/java-eight-part",target:"_blank",rel:"noopener noreferrer"},h=t("Java\u516B\u80A1\u6587"),f=n("img",{src:"http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/xingbiaogongzhonghao.png"},null,-1);function w(y,g){const s=p("ExternalLinkIcon");return o(),c("div",null,[u,n("blockquote",null,[r,n("ul",null,[n("li",null,[n("a",k,[d,a(s)])]),n("li",null,[n("a",v,[m,a(s)])]),n("li",null,[n("a",b,[h,a(s)])])])]),f])}var _=e(i,[["render",w],["__file","ReentrantReadWriteLock.html.vue"]]);export{_ as default};
