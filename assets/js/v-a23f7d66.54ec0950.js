"use strict";(self.webpackChunkcoding_road=self.webpackChunkcoding_road||[]).push([[7265],{74433:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-a23f7d66",path:"/coding-road/javaee/server/tomcat/start%20script%20analysis.html",title:"Tomcat 的启动脚本startup.bat 源码简析",lang:"zh-CN",frontmatter:{summary:"Tomcat 的启动脚本startup.bat 源码简析 Tomcat是一款我们平时开发过程中最常用到的Servlet容器。本系列博客会记录Tomcat的整体架构、主要组件、IO线程模型、请求在Tomcat内部的流转过程以及一些Tomcat调优的相关知识。 力求达到以下几个目的： 更加熟悉Tomcat的工作机制，工作中遇到Tomcat相关问题能够快速定位，从",head:[["meta",{property:"og:url",content:"https://vuepress-theme-hope-v2-demo.mrhope.site/coding-road/javaee/server/tomcat/start%20script%20analysis.html"}],["meta",{property:"og:site_name",content:"coding-rode"}],["meta",{property:"og:title",content:"Tomcat 的启动脚本startup.bat 源码简析"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:updated_time",content:"2022-11-04T02:33:31.000Z"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"article:modified_time",content:"2022-11-04T02:33:31.000Z"}]]},excerpt:"",headers:[{level:2,title:"1. startup.bat脚本分析#",slug:"_1-startup-bat脚本分析",children:[]},{level:2,title:"2. catalina.bat脚本简析#",slug:"_2-catalina-bat脚本简析",children:[]},{level:2,title:"3. 关于配置的一些建议#",slug:"_3-关于配置的一些建议",children:[]},{level:2,title:"4. shutdown.bat脚本分析#",slug:"_4-shutdown-bat脚本分析",children:[]}],git:{createdTime:1667529211e3,updatedTime:1667529211e3,contributors:[{name:"thinkingme",email:"linzhenhuigg@gmail.com",commits:1}]},readingTime:{minutes:15.88,words:4763},filePathRelative:"coding-road/javaee/server/tomcat/start script analysis.md"}},81153:(n,s,a)=>{a.r(s),a.d(s,{default:()=>F});var t=a(95393);const e={id:"tomcat-的启动脚本startup-bat-源码简析",tabindex:"-1"},i=(0,t._)("a",{class:"header-anchor",href:"#tomcat-的启动脚本startup-bat-源码简析","aria-hidden":"true"},"#",-1),o=(0,t.Uk)(),l={href:"https://www.cnblogs.com/54chensongxia/p/13234398.html",target:"_blank",rel:"noopener noreferrer"},p=(0,t.Uk)("Tomcat 的启动脚本startup.bat 源码简析"),c=(0,t._)("p",null,"Tomcat是一款我们平时开发过程中最常用到的Servlet容器。本系列博客会记录Tomcat的整体架构、主要组件、IO线程模型、请求在Tomcat内部的流转过程以及一些Tomcat调优的相关知识。",-1),u=(0,t._)("p",null,"力求达到以下几个目的：",-1),r=(0,t._)("ul",null,[(0,t._)("li",null,"更加熟悉Tomcat的工作机制，工作中遇到Tomcat相关问题能够快速定位，从源头来解决；"),(0,t._)("li",null,"对于一些高并发场景能够对Tomcat进行调优；"),(0,t._)("li",null,"通过对Tomcat源码的分析，吸收一些Tomcat的设计的理念，应用到自己的软件开发过程中。")],-1),d=(0,t._)("hr",null,null,-1),k=(0,t._)("p",null,"Tomcat的启动和停止是通过startup.bat和shutdown.bat这两个脚本实现的。本篇博客就分析下这两个脚本的主要执行流程。",-1),v={id:"_1-startup-bat脚本分析",tabindex:"-1"},m=(0,t._)("a",{class:"header-anchor",href:"#_1-startup-bat脚本分析","aria-hidden":"true"},"#",-1),b=(0,t.Uk)(" 1. startup.bat脚本分析"),A={href:"https://www.cnblogs.com/54chensongxia/p/13234398.html#1-startupbat%E8%84%9A%E6%9C%AC%E5%88%86%E6%9E%90",target:"_blank",rel:"noopener noreferrer"},g=(0,t.Uk)("#"),q=(0,t.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>//关闭命令自身输出\n@echo off\n//setlocal命令表示，这边对环境变量的修改只对当前脚本生效\nsetlocal\n//检查CATALINA_HOME这个环境变量有没设置，如果有设置就使用设置的环境变量\n//如果没设置，将CATALINA_HOME设置成当前目录。\n//检测%CATALINA_HOME%<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>catalina.bat这个脚本存不存在，不存在整合脚本结束，报错\nrem Guess CATALINA_HOME <span class="token keyword">if</span> not defined\n<span class="token builtin class-name">set</span> <span class="token string">&quot;CURRENT_DIR=%cd%&quot;</span>\n<span class="token keyword">if</span> not <span class="token string">&quot;%CATALINA_HOME%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto gotHome\n<span class="token builtin class-name">set</span> <span class="token string">&quot;CATALINA_HOME=%CURRENT_DIR%&quot;</span>\n<span class="token keyword">if</span> exist <span class="token string">&quot;%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in<span class="token entity" title="\\c">\\c</span>atalina.bat&quot;</span> goto okHome\n<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>\n<span class="token builtin class-name">set</span> <span class="token string">&quot;CATALINA_HOME=%cd%&quot;</span>\n<span class="token builtin class-name">cd</span> <span class="token string">&quot;%CURRENT_DIR%&quot;</span>\n:gotHome\n<span class="token keyword">if</span> exist <span class="token string">&quot;%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in<span class="token entity" title="\\c">\\c</span>atalina.bat&quot;</span> goto okHome\n<span class="token builtin class-name">echo</span> The CATALINA_HOME environment variable is not defined correctly\n<span class="token builtin class-name">echo</span> This environment variable is needed to run this program\ngoto end\n:okHome\n//准备启动脚本\n<span class="token builtin class-name">set</span> <span class="token string">&quot;EXECUTABLE=%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in<span class="token entity" title="\\c">\\c</span>atalina.bat&quot;</span>\n\nrem Check that target executable exists\n<span class="token keyword">if</span> exist <span class="token string">&quot;%EXECUTABLE%&quot;</span> goto okExec\n<span class="token builtin class-name">echo</span> Cannot <span class="token function">find</span> <span class="token string">&quot;%EXECUTABLE%&quot;</span>\n<span class="token builtin class-name">echo</span> This <span class="token function">file</span> is needed to run this program\ngoto end\n:okExec\n//拼接catalina.bat这个脚本的命令行参数\nrem Get remaining unshifted <span class="token builtin class-name">command</span> line arguments and save them <span class="token keyword">in</span> the\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">CMD_LINE_ARGS</span><span class="token operator">=</span>\n:setArgs\n<span class="token keyword">if</span> <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span><span class="token operator">==</span><span class="token string">&quot;&quot;</span>&quot;<span class="token string">&quot; goto doneSetArgs\nset CMD_LINE_ARGS=%CMD_LINE_ARGS% %1\nshift\ngoto setArgs\n:doneSetArgs\n//执行catalina.bat这个脚本,执行start,并添加命令行参数\ncall &quot;</span>%EXECUTABLE%&quot; start %CMD_LINE_ARGS%\n\n:end\n\n折叠 \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>整个startup.bat脚本很简单，<strong>根据CATALINA_HOME检测catalina.bat是否存在，不存在的话就报错，存在的话拼接命令行参数然后执行catalina.bat这个脚本</strong>。CATALINA_HOME这个环境变量的取值逻辑如下图所示：</p>',2),h={href:"https://img2020.cnblogs.com/blog/1775037/202007/1775037-20200704110458058-1023895656.png",target:"_blank",rel:"noopener noreferrer"},T=(0,t._)("img",{src:"https://img2020.cnblogs.com/blog/1775037/202007/1775037-20200704110458058-1023895656.png",alt:"img",loading:"lazy"},null,-1),_=(0,t.uE)('<p>如果环境变量设置了CATALINA_HOME，则直接使用环境变量设置的值作为Tomcat安装目录。假如未设置环境变量CATALINA_HOME，则以当前目录作为CATALINA_HOME。此时，如果%CATALINA_HOME%\\bin\\catalina.bat存在，则批处理或命令行当前目录作为CATALINA_HOME。假如%CATALINA_HOME%\\bin\\catalina.bat不存在，则把当前目录的上一级目录作为CATALINA_HOME，然后再判断%CATALINA_HOME%\\bin\\catalina.bat是否存在。如果存在，则上一级目录就是CATALINA_HOME；否则，提示找不到CATALINA_HOME环境变量并结束执行。</p><p>我们可以看出来，正真执行的脚本是catalina.bat这个脚本，那为什么还要整个startup.bat脚本呢？</p><p>其实这个startup.bat脚本就是提供给使用者用来修改的，我们可以在其中设置JAVA_HOME，CATALINA_HOME等环境变量，但我们并不需要深入到较为复杂的catalina.bat脚本中，这正是startup.bat脚本的真正用意所在。</p><p>我们知道，软件设计模式中有一个重要的原则就是开闭原则，即我们可以允许别人扩展我们的程序，但在程序发布后，我们拒绝任何修改，因为修改会产生新的Bug，使得我们已经Bug-free的程序又要重新测试。开闭原则是面向对象世界中的一个非常重要的原则，我们可以把这个原则从Java类扩展至源代码级别。startup脚本就是要求用户不要修改catalina.bat脚本，这是符合软件设计思想的。我们如果想要彻底贯彻这个重要的软件设计原则，可以写一个新脚本tomcat.bat，脚本内容大致如下：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">set</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>C:<span class="token punctuation">\\</span>Program Files<span class="token punctuation">\\</span>Java<span class="token punctuation">\\</span>jdk1.5.0_09\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">CATALINA_HOME</span><span class="token operator">=</span>C:<span class="token punctuation">\\</span>carl<span class="token punctuation">\\</span>it<span class="token punctuation">\\</span>tomcat_research<span class="token punctuation">\\</span>jakarta-tomcat-5.0.28   \ncall %CATALINA_HOME%<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>startup.bat  \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个tomcat.bat文件可以存放在任何目录并能执行，并且不需要修改tomcat自带的任何脚本及其它环境变量，这就彻底贯彻了开闭原则。</p>',6),E={id:"_2-catalina-bat脚本简析",tabindex:"-1"},S=(0,t._)("a",{class:"header-anchor",href:"#_2-catalina-bat脚本简析","aria-hidden":"true"},"#",-1),C=(0,t.Uk)(" 2. catalina.bat脚本简析"),f={href:"https://www.cnblogs.com/54chensongxia/p/13234398.html#2-catalinabat%E8%84%9A%E6%9C%AC%E7%AE%80%E6%9E%90",target:"_blank",rel:"noopener noreferrer"},I=(0,t.Uk)("#"),y=(0,t.uE)('<p>当startup脚本完成环境变量的设置后，就开始调用catalina.bat脚本来启动Tomcat。<strong>Catalina脚本的主要任务是根据环境变量和不同的命令行参数，拼凑出完整的java命令，调用Tomcat的主启动类org.apache.catalina.startup.Bootstrap来启动Tomcat</strong>。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>@echo off\nrem ---------------------------------------------------------------------------\nrem Start/Stop Script <span class="token keyword">for</span> the CATALINA Server\nrem\nrem Environment Variable Prerequisites\nrem\nrem   Do not <span class="token builtin class-name">set</span> the variables <span class="token keyword">in</span> this script. Instead put them into a script\nrem   setenv.bat <span class="token keyword">in</span> CATALINA_BASE/bin to keep your customizations separate.\nrem\nrem   WHEN RUNNING TOMCAT AS A WINDOWS SERVICE:\nrem   Note that the environment variables that affect the behavior of this\nrem   script will have no effect at all on Windows Services. As such, any\nrem   <span class="token builtin class-name">local</span> customizations made <span class="token keyword">in</span> a CATALINA_BASE/bin/setenv.bat script\nrem   will also have no effect on Tomcat when launched as a Windows Service.\nrem   The configuration that controls Windows Services is stored <span class="token keyword">in</span> the Windows\nrem   Registry, and is <span class="token function">most</span> conveniently maintained using the <span class="token string">&quot;tomcatXw.exe&quot;</span>\nrem   maintenance utility, where <span class="token string">&quot;X&quot;</span> is the major version of Tomcat you are\nrem   running.\nrem\nrem   CATALINA_HOME   May point at your Catalina <span class="token string">&quot;build&quot;</span> directory.\nrem\nrem   CATALINA_BASE   <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span> Base directory <span class="token keyword">for</span> resolving dynamic portions\nrem                   of a Catalina installation.  If not present, resolves to\nrem                   the same directory that CATALINA_HOME points to.\nrem\nrem   CATALINA_OPTS   <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span> Java runtime options used when the <span class="token string">&quot;start&quot;</span>,\nrem                   <span class="token string">&quot;run&quot;</span> or <span class="token string">&quot;debug&quot;</span> <span class="token builtin class-name">command</span> is executed.\nrem                   Include here and not <span class="token keyword">in</span> JAVA_OPTS all options, that should\nrem                   only be used by Tomcat itself, not by the stop process,\nrem                   the version <span class="token builtin class-name">command</span> etc.\nrem                   Examples are heap size, GC logging, JMX ports etc.\nrem\nrem   CATALINA_TMPDIR <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span> Directory path location of temporary directory\nrem                   the JVM should use <span class="token punctuation">(</span>java.io.tmpdir<span class="token punctuation">)</span>.  Defaults to\nrem                   %CATALINA_BASE%<span class="token punctuation">\\</span>temp.\nrem\nrem   JAVA_HOME       Must point at your Java Development Kit installation.\nrem                   Required to run the with the <span class="token string">&quot;debug&quot;</span> argument.\nrem\nrem   JRE_HOME        Must point at your Java Runtime installation.\nrem                   Defaults to JAVA_HOME <span class="token keyword">if</span> empty. If JRE_HOME and JAVA_HOME\nrem                   are both set, JRE_HOME is used.\nrem\nrem   JAVA_OPTS       <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span> Java runtime options used when any <span class="token builtin class-name">command</span>\nrem                   is executed.\nrem                   Include here and not <span class="token keyword">in</span> CATALINA_OPTS all options, that\nrem                   should be used by Tomcat and also by the stop process,\nrem                   the version <span class="token builtin class-name">command</span> etc.\nrem                   Most options should go into CATALINA_OPTS.\nrem\nrem   JPDA_TRANSPORT  <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span> JPDA transport used when the <span class="token string">&quot;jpda start&quot;</span>\nrem                   <span class="token builtin class-name">command</span> is executed. The default is <span class="token string">&quot;dt_socket&quot;</span><span class="token builtin class-name">.</span>\nrem\nrem   JPDA_ADDRESS    <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span> Java runtime options used when the <span class="token string">&quot;jpda start&quot;</span>\nrem                   <span class="token builtin class-name">command</span> is executed. The default is localhost:8000.\nrem\nrem   JPDA_SUSPEND    <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span> Java runtime options used when the <span class="token string">&quot;jpda start&quot;</span>\nrem                   <span class="token builtin class-name">command</span> is executed. Specifies whether JVM should <span class="token function">suspend</span>\nrem                   execution immediately after startup. Default is <span class="token string">&quot;n&quot;</span><span class="token builtin class-name">.</span>\nrem\nrem   JPDA_OPTS       <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span> Java runtime options used when the <span class="token string">&quot;jpda start&quot;</span>\nrem                   <span class="token builtin class-name">command</span> is executed. If used, JPDA_TRANSPORT, JPDA_ADDRESS,\nrem                   and JPDA_SUSPEND are ignored. Thus, all required jpda\nrem                   options MUST be specified. The default is:\nrem\nrem                   -agentlib:jdwp<span class="token operator">=</span>transport<span class="token operator">=</span>%JPDA_TRANSPORT%,\nrem                       <span class="token assign-left variable">address</span><span class="token operator">=</span>%JPDA_ADDRESS%,server<span class="token operator">=</span>y,suspend<span class="token operator">=</span>%JPDA_SUSPEND%\nrem\nrem   JSSE_OPTS       <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span> Java runtime options used to control the TLS\nrem                   implementation when JSSE is used. Default is:\nrem                   <span class="token string">&quot;-Djdk.tls.ephemeralDHKeySize=2048&quot;</span>\nrem\nrem   LOGGING_CONFIG  <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span> Override Tomcat<span class="token string">&#39;s logging config file\nrem                   Example (all one line)\nrem                   set LOGGING_CONFIG=&quot;-Djava.util.logging.config.file=%CATALINA_BASE%\\conf\\logging.properties&quot;\nrem\nrem   LOGGING_MANAGER (Optional) Override Tomcat&#39;</span>s logging manager\nrem                   Example <span class="token punctuation">(</span>all one line<span class="token punctuation">)</span>\nrem                   <span class="token builtin class-name">set</span> <span class="token assign-left variable">LOGGING_MANAGER</span><span class="token operator">=</span><span class="token string">&quot;-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager&quot;</span>\nrem\nrem   TITLE           <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span> Specify the title of Tomcat window. The default\nrem                   TITLE is Tomcat <span class="token keyword">if</span> it<span class="token string">&#39;s not specified.\nrem                   Example (all one line)\nrem                   set TITLE=Tomcat.Cluster#1.Server#1 [%DATE% %TIME%]\nrem ---------------------------------------------------------------------------\n\nsetlocal\n\nrem Suppress Terminate batch job on CTRL+C\nif not &quot;&quot;%1&quot;&quot; == &quot;&quot;run&quot;&quot; goto mainEntry\nif &quot;%TEMP%&quot; == &quot;&quot; goto mainEntry\nif exist &quot;%TEMP%\\%~nx0.run&quot; goto mainEntry\necho Y&gt;&quot;%TEMP%\\%~nx0.run&quot;\nif not exist &quot;%TEMP%\\%~nx0.run&quot; goto mainEntry\necho Y&gt;&quot;%TEMP%\\%~nx0.Y&quot;\ncall &quot;%~f0&quot; %* &lt;&quot;%TEMP%\\%~nx0.Y&quot;\nrem Use provided errorlevel\nset RETVAL=%ERRORLEVEL%\ndel /Q &quot;%TEMP%\\%~nx0.Y&quot; &gt;NUL 2&gt;&amp;1\nexit /B %RETVAL%\n:mainEntry\ndel /Q &quot;%TEMP%\\%~nx0.run&quot; &gt;NUL 2&gt;&amp;1\n\n//防止用户直接执行catalina.bat这个脚本，再次检测下CATALINA_HOME环境变量\n//检测catalina.bat这个脚本存不存在\nrem Guess CATALINA_HOME if not defined\nset &quot;CURRENT_DIR=%cd%&quot;\nif not &quot;%CATALINA_HOME%&quot; == &quot;&quot; goto gotHome\nset &quot;CATALINA_HOME=%CURRENT_DIR%&quot;\nif exist &quot;%CATALINA_HOME%\\bin\\catalina.bat&quot; goto okHome\ncd ..\nset &quot;CATALINA_HOME=%cd%&quot;\ncd &quot;%CURRENT_DIR%&quot;\n:gotHome\n\nif exist &quot;%CATALINA_HOME%\\bin\\catalina.bat&quot; goto okHome\necho The CATALINA_HOME environment variable is not defined correctly\necho This environment variable is needed to run this program\ngoto end\n:okHome\n\n//检测CATALINA_BASE是否存在，不存在就设置成和CATALINA_HOME一致\nrem Copy CATALINA_BASE from CATALINA_HOME if not defined\nif not &quot;%CATALINA_BASE%&quot; == &quot;&quot; goto gotBase\nset &quot;CATALINA_BASE=%CATALINA_HOME%&quot;\n:gotBase\n\nrem Ensure that neither CATALINA_HOME nor CATALINA_BASE contains a semi-colon\nrem as this is used as the separator in the classpath and Java provides no\nrem mechanism for escaping if the same character appears in the path. Check this\nrem by replacing all occurrences of &#39;</span><span class="token punctuation">;</span><span class="token string">&#39; with &#39;</span>&#39; and checking that neither\nrem CATALINA_HOME nor CATALINA_BASE have changed\n<span class="token keyword">if</span> <span class="token string">&quot;%CATALINA_HOME%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;%CATALINA_HOME:;=%&quot;</span> goto homeNoSemicolon\n<span class="token builtin class-name">echo</span> Using CATALINA_HOME:   <span class="token string">&quot;%CATALINA_HOME%&quot;</span>\n<span class="token builtin class-name">echo</span> Unable to start as CATALINA_HOME contains a semicolon <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">)</span> character\ngoto end\n:homeNoSemicolon\n\n<span class="token keyword">if</span> <span class="token string">&quot;%CATALINA_BASE%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;%CATALINA_BASE:;=%&quot;</span> goto baseNoSemicolon\n<span class="token builtin class-name">echo</span> Using CATALINA_BASE:   <span class="token string">&quot;%CATALINA_BASE%&quot;</span>\n<span class="token builtin class-name">echo</span> Unable to start as CATALINA_BASE contains a semicolon <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">)</span> character\ngoto end\n:baseNoSemicolon\n\nrem Ensure that any user defined CLASSPATH variables are not used on startup,\nrem but allow them to be specified <span class="token keyword">in</span> setenv.bat, <span class="token keyword">in</span> rare <span class="token keyword">case</span> when it is needed.\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span>\n\n//如果%CATALINA_BASE%<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>setenv.bat存在，执行setenv.bat这个脚本,不存在\n//执行%CATALINA_HOME%<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>setenv.bat这个脚本来设置环境变量\nrem Get standard environment variables\n<span class="token keyword">if</span> not exist <span class="token string">&quot;%CATALINA_BASE%<span class="token entity" title="\\b">\\b</span>in\\setenv.bat&quot;</span> goto checkSetenvHome\ncall <span class="token string">&quot;%CATALINA_BASE%<span class="token entity" title="\\b">\\b</span>in\\setenv.bat&quot;</span>\ngoto setenvDone\n:checkSetenvHome\n<span class="token keyword">if</span> exist <span class="token string">&quot;%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in\\setenv.bat&quot;</span> call <span class="token string">&quot;%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in\\setenv.bat&quot;</span>\n:setenvDone\n\n//如果%CATALINA_HOME%<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>setclasspath.bat存在，执行setclasspath.bat，这个脚本的主要作用是检测\n//JAVA_HOME有没有正确设置\nrem Get standard Java environment variables\n<span class="token keyword">if</span> exist <span class="token string">&quot;%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in\\setclasspath.bat&quot;</span> goto okSetclasspath\n<span class="token builtin class-name">echo</span> Cannot <span class="token function">find</span> <span class="token string">&quot;%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in\\setclasspath.bat&quot;</span>\n<span class="token builtin class-name">echo</span> This <span class="token function">file</span> is needed to run this program\ngoto end\n:okSetclasspath\ncall <span class="token string">&quot;%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in\\setclasspath.bat&quot;</span> %1\n<span class="token keyword">if</span> errorlevel <span class="token number">1</span> goto end\n\n//将bootstrap.jar加入classpath\nrem Add on extra jar <span class="token function">file</span> to CLASSPATH\nrem Note that there are no quotes as we <span class="token keyword">do</span> not want to introduce random\nrem quotes into the CLASSPATH\n<span class="token keyword">if</span> <span class="token string">&quot;%CLASSPATH%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto emptyClasspath\n<span class="token builtin class-name">set</span> <span class="token string">&quot;CLASSPATH=%CLASSPATH%;&quot;</span>\n:emptyClasspath\n<span class="token builtin class-name">set</span> <span class="token string">&quot;CLASSPATH=%CLASSPATH%%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in<span class="token entity" title="\\b">\\b</span>ootstrap.jar&quot;</span>\n\n//设置CATALINA_TMPDIR<span class="token operator">=</span>%CATALINA_BASE%<span class="token punctuation">\\</span>temp\n<span class="token keyword">if</span> not <span class="token string">&quot;%CATALINA_TMPDIR%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto gotTmpdir\n<span class="token builtin class-name">set</span> <span class="token string">&quot;CATALINA_TMPDIR=%CATALINA_BASE%<span class="token entity" title="\\t">\\t</span>emp&quot;</span>\n:gotTmpdir\n\n//将tomcat-juli.jar加入classpath\nrem Add tomcat-juli.jar to classpath\nrem tomcat-juli.jar can be over-ridden per instance\n<span class="token keyword">if</span> not exist <span class="token string">&quot;%CATALINA_BASE%<span class="token entity" title="\\b">\\b</span>in<span class="token entity" title="\\t">\\t</span>omcat-juli.jar&quot;</span> goto juliClasspathHome\n<span class="token builtin class-name">set</span> <span class="token string">&quot;CLASSPATH=%CLASSPATH%;%CATALINA_BASE%<span class="token entity" title="\\b">\\b</span>in<span class="token entity" title="\\t">\\t</span>omcat-juli.jar&quot;</span>\ngoto juliClasspathDone\n:juliClasspathHome\n<span class="token builtin class-name">set</span> <span class="token string">&quot;CLASSPATH=%CLASSPATH%;%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in<span class="token entity" title="\\t">\\t</span>omcat-juli.jar&quot;</span>\n:juliClasspathDone\n\n//如果没有设置JSSE_OPTS，JSSE_OPTS<span class="token operator">=</span><span class="token string">&quot;-Djdk.tls.ephemeralDHKeySize=2048&quot;</span>\n//再将JAVA_OPTS设置成<span class="token string">&quot;JAVA_OPTS=%JAVA_OPTS% %JSSE_OPTS%&quot;</span>\n<span class="token keyword">if</span> not <span class="token string">&quot;%JSSE_OPTS%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto gotJsseOpts\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">JSSE_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Djdk.tls.ephemeralDHKeySize=2048&quot;</span>\n:gotJsseOpts\n<span class="token builtin class-name">set</span> <span class="token string">&quot;JAVA_OPTS=%JAVA_OPTS% %JSSE_OPTS%&quot;</span>\n\nrem Register custom URL handlers\nrem Do this here so custom URL handles <span class="token punctuation">(</span>specifically <span class="token string">&#39;war:...&#39;</span><span class="token punctuation">)</span> can be used <span class="token keyword">in</span> the security policy\n<span class="token builtin class-name">set</span> <span class="token string">&quot;JAVA_OPTS=%JAVA_OPTS% -Djava.protocol.handler.pkgs=org.apache.catalina.webresources&quot;</span>\n\n//将日志配置文件设置成logging.properties\n<span class="token keyword">if</span> not <span class="token string">&quot;%LOGGING_CONFIG%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto noJuliConfig\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">LOGGING_CONFIG</span><span class="token operator">=</span>-Dnop\n<span class="token keyword">if</span> not exist <span class="token string">&quot;%CATALINA_BASE%<span class="token entity" title="\\c">\\c</span>onf\\logging.properties&quot;</span> goto noJuliConfig\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">LOGGING_CONFIG</span><span class="token operator">=</span>-Djava.util.logging.config.file<span class="token operator">=</span><span class="token string">&quot;%CATALINA_BASE%<span class="token entity" title="\\c">\\c</span>onf\\logging.properties&quot;</span>\n:noJuliConfig\n\n//配置默认的LOGGING_MANAGER\n<span class="token keyword">if</span> not <span class="token string">&quot;%LOGGING_MANAGER%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto noJuliManager\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">LOGGING_MANAGER</span><span class="token operator">=</span>-Djava.util.logging.manager<span class="token operator">=</span>org.apache.juli.ClassLoaderLogManager\n:noJuliManager\n\nrem ----- Execute The Requested Command ---------------------------------------\n\n<span class="token builtin class-name">echo</span> Using CATALINA_BASE:   <span class="token string">&quot;%CATALINA_BASE%&quot;</span>\n<span class="token builtin class-name">echo</span> Using CATALINA_HOME:   <span class="token string">&quot;%CATALINA_HOME%&quot;</span>\n<span class="token builtin class-name">echo</span> Using CATALINA_TMPDIR: <span class="token string">&quot;%CATALINA_TMPDIR%&quot;</span>\n<span class="token keyword">if</span> <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span>debug<span class="token string">&quot;&quot;</span> goto use_jdk\n<span class="token builtin class-name">echo</span> Using JRE_HOME:        <span class="token string">&quot;%JRE_HOME%&quot;</span>\ngoto java_dir_displayed\n:use_jdk\n<span class="token builtin class-name">echo</span> Using JAVA_HOME:       <span class="token string">&quot;%JAVA_HOME%&quot;</span>\n:java_dir_displayed\n<span class="token builtin class-name">echo</span> Using CLASSPATH:       <span class="token string">&quot;%CLASSPATH%&quot;</span>\n\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">_EXECJAVA</span><span class="token operator">=</span>%_RUNJAVA%\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">MAINCLASS</span><span class="token operator">=</span>org.apache.catalina.startup.Bootstrap\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">ACTION</span><span class="token operator">=</span>start\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">SECURITY_POLICY_FILE</span><span class="token operator">=</span>\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">DEBUG_OPTS</span><span class="token operator">=</span>\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">JPDA</span><span class="token operator">=</span>\n\n<span class="token keyword">if</span> not <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span>jpda<span class="token string">&quot;&quot;</span> goto noJpda\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">JPDA</span><span class="token operator">=</span>jpda\n<span class="token keyword">if</span> not <span class="token string">&quot;%JPDA_TRANSPORT%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto gotJpdaTransport\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">JPDA_TRANSPORT</span><span class="token operator">=</span>dt_socket\n:gotJpdaTransport\n<span class="token keyword">if</span> not <span class="token string">&quot;%JPDA_ADDRESS%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto gotJpdaAddress\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">JPDA_ADDRESS</span><span class="token operator">=</span>localhost:8000\n:gotJpdaAddress\n<span class="token keyword">if</span> not <span class="token string">&quot;%JPDA_SUSPEND%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto gotJpdaSuspend\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">JPDA_SUSPEND</span><span class="token operator">=</span>n\n:gotJpdaSuspend\n<span class="token keyword">if</span> not <span class="token string">&quot;%JPDA_OPTS%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto gotJpdaOpts\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">JPDA_OPTS</span><span class="token operator">=</span>-agentlib:jdwp<span class="token operator">=</span>transport<span class="token operator">=</span>%JPDA_TRANSPORT%,address<span class="token operator">=</span>%JPDA_ADDRESS%,server<span class="token operator">=</span>y,suspend<span class="token operator">=</span>%JPDA_SUSPEND%\n:gotJpdaOpts\n<span class="token builtin class-name">shift</span>\n:noJpda\n\n<span class="token keyword">if</span> <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span>debug<span class="token string">&quot;&quot;</span> goto doDebug\n<span class="token keyword">if</span> <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span>run<span class="token string">&quot;&quot;</span> goto doRun\n<span class="token keyword">if</span> <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span>start<span class="token string">&quot;&quot;</span> goto doStart\n<span class="token keyword">if</span> <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span>stop<span class="token string">&quot;&quot;</span> goto doStop\n<span class="token keyword">if</span> <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span>configtest<span class="token string">&quot;&quot;</span> goto doConfigTest\n<span class="token keyword">if</span> <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span>version<span class="token string">&quot;&quot;</span> goto doVersion\n\n<span class="token builtin class-name">echo</span> Usage:  catalina <span class="token punctuation">(</span> commands <span class="token punctuation">..</span>. <span class="token punctuation">)</span>\n<span class="token builtin class-name">echo</span> commands:\n<span class="token builtin class-name">echo</span>   debug             Start Catalina <span class="token keyword">in</span> a debugger\n<span class="token builtin class-name">echo</span>   debug -security   Debug Catalina with a security manager\n<span class="token builtin class-name">echo</span>   jpda start        Start Catalina under JPDA debugger\n<span class="token builtin class-name">echo</span>   run               Start Catalina <span class="token keyword">in</span> the current window\n<span class="token builtin class-name">echo</span>   run -security     Start <span class="token keyword">in</span> the current window with security manager\n<span class="token builtin class-name">echo</span>   start             Start Catalina <span class="token keyword">in</span> a separate window\n<span class="token builtin class-name">echo</span>   start -security   Start <span class="token keyword">in</span> a separate window with security manager\n<span class="token builtin class-name">echo</span>   stop              Stop Catalina\n<span class="token builtin class-name">echo</span>   configtest        Run a basic syntax check on server.xml\n<span class="token builtin class-name">echo</span>   version           What version of tomcat are you running?\ngoto end\n\n:doDebug\n<span class="token builtin class-name">shift</span>\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">_EXECJAVA</span><span class="token operator">=</span>%_RUNJDB%\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">DEBUG_OPTS</span><span class="token operator">=</span>-sourcepath <span class="token string">&quot;%CATALINA_HOME%\\..\\..\\java&quot;</span>\n<span class="token keyword">if</span> not <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span>-security<span class="token string">&quot;&quot;</span> goto execCmd\n<span class="token builtin class-name">shift</span>\n<span class="token builtin class-name">echo</span> Using Security Manager\n<span class="token builtin class-name">set</span> <span class="token string">&quot;SECURITY_POLICY_FILE=%CATALINA_BASE%<span class="token entity" title="\\c">\\c</span>onf<span class="token entity" title="\\c">\\c</span>atalina.policy&quot;</span>\ngoto execCmd\n\n:doRun\n<span class="token builtin class-name">shift</span>\n<span class="token keyword">if</span> not <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span>-security<span class="token string">&quot;&quot;</span> goto execCmd\n<span class="token builtin class-name">shift</span>\n<span class="token builtin class-name">echo</span> Using Security Manager\n<span class="token builtin class-name">set</span> <span class="token string">&quot;SECURITY_POLICY_FILE=%CATALINA_BASE%<span class="token entity" title="\\c">\\c</span>onf<span class="token entity" title="\\c">\\c</span>atalina.policy&quot;</span>\ngoto execCmd\n\n:doStart\n<span class="token builtin class-name">shift</span>\n<span class="token keyword">if</span> <span class="token string">&quot;%TITLE%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token builtin class-name">set</span> <span class="token assign-left variable">TITLE</span><span class="token operator">=</span>Tomcat\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">_EXECJAVA</span><span class="token operator">=</span>start <span class="token string">&quot;%TITLE%&quot;</span> %_RUNJAVA%\n<span class="token keyword">if</span> not <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span>-security<span class="token string">&quot;&quot;</span> goto execCmd\n<span class="token builtin class-name">shift</span>\n<span class="token builtin class-name">echo</span> Using Security Manager\n<span class="token builtin class-name">set</span> <span class="token string">&quot;SECURITY_POLICY_FILE=%CATALINA_BASE%<span class="token entity" title="\\c">\\c</span>onf<span class="token entity" title="\\c">\\c</span>atalina.policy&quot;</span>\ngoto execCmd\n\n:doStop\n<span class="token builtin class-name">shift</span>\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">ACTION</span><span class="token operator">=</span>stop\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">CATALINA_OPTS</span><span class="token operator">=</span>\ngoto execCmd\n\n:doConfigTest\n<span class="token builtin class-name">shift</span>\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">ACTION</span><span class="token operator">=</span>configtest\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">CATALINA_OPTS</span><span class="token operator">=</span>\ngoto execCmd\n\n:doVersion\n%_EXECJAVA% -classpath <span class="token string">&quot;%CATALINA_HOME%\\lib<span class="token entity" title="\\c">\\c</span>atalina.jar&quot;</span> org.apache.catalina.util.ServerInfo\ngoto end\n\n\n:execCmd\nrem Get remaining unshifted <span class="token builtin class-name">command</span> line arguments and save them <span class="token keyword">in</span> the\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">CMD_LINE_ARGS</span><span class="token operator">=</span>\n:setArgs\n<span class="token keyword">if</span> <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span><span class="token operator">==</span><span class="token string">&quot;&quot;</span>&quot;<span class="token string">&quot; goto doneSetArgs\nset CMD_LINE_ARGS=%CMD_LINE_ARGS% %1\nshift\ngoto setArgs\n:doneSetArgs\n\nrem Execute Java with the applicable properties\nif not &quot;</span>%JPDA%<span class="token string">&quot; == &quot;</span>&quot; goto doJpda\n<span class="token keyword">if</span> not <span class="token string">&quot;%SECURITY_POLICY_FILE%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto doSecurity\n\n//一般情况下都会执行到这个脚本语句\n%_EXECJAVA% %LOGGING_CONFIG% %LOGGING_MANAGER% %JAVA_OPTS% %CATALINA_OPTS% %DEBUG_OPTS% -classpath <span class="token string">&quot;%CLASSPATH%&quot;</span> -Dcatalina.base<span class="token operator">=</span><span class="token string">&quot;%CATALINA_BASE%&quot;</span> -Dcatalina.home<span class="token operator">=</span><span class="token string">&quot;%CATALINA_HOME%&quot;</span> -Djava.io.tmpdir<span class="token operator">=</span><span class="token string">&quot;%CATALINA_TMPDIR%&quot;</span> %MAINCLASS% %CMD_LINE_ARGS% %ACTION%\ngoto end\n:doSecurity\n%_EXECJAVA% %LOGGING_CONFIG% %LOGGING_MANAGER% %JAVA_OPTS% %CATALINA_OPTS% %DEBUG_OPTS% -classpath <span class="token string">&quot;%CLASSPATH%&quot;</span> -Djava.security.manager -Djava.security.policy<span class="token operator">==</span><span class="token string">&quot;%SECURITY_POLICY_FILE%&quot;</span> -Dcatalina.base<span class="token operator">=</span><span class="token string">&quot;%CATALINA_BASE%&quot;</span> -Dcatalina.home<span class="token operator">=</span><span class="token string">&quot;%CATALINA_HOME%&quot;</span> -Djava.io.tmpdir<span class="token operator">=</span><span class="token string">&quot;%CATALINA_TMPDIR%&quot;</span> %MAINCLASS% %CMD_LINE_ARGS% %ACTION%\ngoto end\n:doJpda\n<span class="token keyword">if</span> not <span class="token string">&quot;%SECURITY_POLICY_FILE%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto doSecurityJpda\n%_EXECJAVA% %LOGGING_CONFIG% %LOGGING_MANAGER% %JAVA_OPTS% %JPDA_OPTS% %CATALINA_OPTS% %DEBUG_OPTS% -classpath <span class="token string">&quot;%CLASSPATH%&quot;</span> -Dcatalina.base<span class="token operator">=</span><span class="token string">&quot;%CATALINA_BASE%&quot;</span> -Dcatalina.home<span class="token operator">=</span><span class="token string">&quot;%CATALINA_HOME%&quot;</span> -Djava.io.tmpdir<span class="token operator">=</span><span class="token string">&quot;%CATALINA_TMPDIR%&quot;</span> %MAINCLASS% %CMD_LINE_ARGS% %ACTION%\ngoto end\n:doSecurityJpda\n%_EXECJAVA% %LOGGING_CONFIG% %LOGGING_MANAGER% %JAVA_OPTS% %JPDA_OPTS% %CATALINA_OPTS% %DEBUG_OPTS% -classpath <span class="token string">&quot;%CLASSPATH%&quot;</span> -Djava.security.manager -Djava.security.policy<span class="token operator">==</span><span class="token string">&quot;%SECURITY_POLICY_FILE%&quot;</span> -Dcatalina.base<span class="token operator">=</span><span class="token string">&quot;%CATALINA_BASE%&quot;</span> -Dcatalina.home<span class="token operator">=</span><span class="token string">&quot;%CATALINA_HOME%&quot;</span> -Djava.io.tmpdir<span class="token operator">=</span><span class="token string">&quot;%CATALINA_TMPDIR%&quot;</span> %MAINCLASS% %CMD_LINE_ARGS% %ACTION%\ngoto end\n\n:end\n\n折叠 \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总结下catalina.bat的整个执行流程：</p><ul><li>检查并设置CATALINA_HOME环境变量，检测%CATALINA_HOME%\\bin\\catalina.bat这个脚本是否存在，不存在直接报错；</li><li>检测CATALINA_BASE是否存在，不存在就设置成和CATALINA_HOME一致；</li><li>如果%CATALINA_BASE%\\bin\\setenv.bat这个脚本存在，执行setenv.bat这个脚本,不存在的话执行%CATALINA_HOME%\\bin\\setenv.bat这个脚本来设置环境变量，都不存在继续往下执行；</li><li>如果%CATALINA_HOME%\\bin\\setclasspath.bat存在，执行setclasspath.bat，这个脚本的主要作用是检测 JAVA_HOME有没有正确设置；</li><li>将bootstrap.jar加入classpath；</li><li>设置CATALINA_TMPDIR=%CATALINA_BASE%\\temp；</li><li>将tomcat-juli.jar加入classpath；</li><li>如果没有设置环境变量JSSE_OPTS，默认设置JSSE_OPTS=&quot;-Djdk.tls.ephemeralDHKeySize=2048&quot; 再将JAVA_OPTS设置成&quot;JAVA_OPTS=%JAVA_OPTS% %JSSE_OPTS%&quot;</li><li>通过LOGGING_CONFIG变量，将日志配置文件设置成%CATALINA_BASE%\\conf\\logging.properties</li><li>配置默认的LOGGING_MANAGER；</li><li>拼写java执行命令。</li></ul><p>拼接命令的代码主要是下面这段：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>%_EXECJAVA% %LOGGING_CONFIG% %LOGGING_MANAGER% %JAVA_OPTS% %CATALINA_OPTS% %DEBUG_OPTS% -classpath <span class="token string">&quot;%CLASSPATH%&quot;</span> -Dcatalina.base<span class="token operator">=</span><span class="token string">&quot;%CATALINA_BASE%&quot;</span> -Dcatalina.home<span class="token operator">=</span><span class="token string">&quot;%CATALINA_HOME%&quot;</span> -Djava.io.tmpdir<span class="token operator">=</span><span class="token string">&quot;%CATALINA_TMPDIR%&quot;</span> %MAINCLASS% %CMD_LINE_ARGS% %ACTION%\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过这段代码我们可以看到Tomcat在启动的时候配置了哪些参数。我们执行下面的命令：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>startup.bat arg1 arg2\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实际执行的命令如下：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token string">&quot;start &quot;</span>Tomcat<span class="token string">&quot; &quot;</span>C:<span class="token punctuation">\\</span>Program Files<span class="token punctuation">\\</span>Java<span class="token punctuation">\\</span>jdk1.8.0_73<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>java.exe<span class="token string">&quot; -Djava.util.logging.config.file=&quot;</span>D:<span class="token punctuation">\\</span>software<span class="token punctuation">\\</span>tomcat-64<span class="token punctuation">\\</span>apache-tomcat-9.0.0.M21-windows-x64 <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">\\</span>apache-tomcat-9.0.0.M21<span class="token punctuation">\\</span>conf<span class="token punctuation">\\</span>logging.properties<span class="token string">&quot; -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager  &quot;</span>-Djdk.tls.ephemeralDHKeySize<span class="token operator">=</span><span class="token number">2048</span><span class="token string">&quot; -Djava.protocol.handler.pkgs=org.apache.catalina.webresources   -classpath &quot;</span>D:<span class="token punctuation">\\</span>software<span class="token punctuation">\\</span>tomcat-64<span class="token punctuation">\\</span>apache-tomcat-9.0.0.M21-windows-x64 <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">\\</span>apache-tomcat-9.0.0.M21<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>bootstrap.jar<span class="token punctuation">;</span>D:<span class="token punctuation">\\</span>software<span class="token punctuation">\\</span>tomcat-64<span class="token punctuation">\\</span>apache-tomcat-9.0.0.M21-windows-x64 <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">\\</span>apache-tomcat-9.0.0.M21<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>tomcat-juli.jar<span class="token string">&quot; -Dcatalina.base=&quot;</span>D:<span class="token punctuation">\\</span>software<span class="token punctuation">\\</span>tomcat-64<span class="token punctuation">\\</span>apache-tomcat-9.0.0.M21-windows-x64 <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">\\</span>apache-tomcat-9.0.0.M21<span class="token string">&quot; -Dcatalina.home=&quot;</span>D:<span class="token punctuation">\\</span>software<span class="token punctuation">\\</span>tomcat-64<span class="token punctuation">\\</span>apache-tomcat-9.0.0.M21-windows-x64 <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">\\</span>apache-tomcat-9.0.0.M21<span class="token string">&quot; -Djava.io.tmpdir=&quot;</span>D:<span class="token punctuation">\\</span>software<span class="token punctuation">\\</span>tomcat-64<span class="token punctuation">\\</span>apache-tomcat-9.0.0.M21-windows-x64 <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">\\</span>apache-tomcat-9.0.0.M21<span class="token punctuation">\\</span>temp<span class="token string">&quot; org.apache.catalina.startup.Bootstrap arg1 arg2 start&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令中开头的start Tomcat的意思是重新开启一个叫tomcat的窗口执行Java命令。</p><blockquote><p>我们看到上面的代码中，有个jpda模式，它是Java平台调试体系结构，可以提供很方便的远程调试，一般情况下我们不会用到这个模式。如果我们想启动这个模式的话可以执行catalina.bat jpda start这个命令。这个模式下我们可以对另外的环境变量JPDA_OPTS进行配置。</p></blockquote>',12),N={id:"_3-关于配置的一些建议",tabindex:"-1"},L=(0,t._)("a",{class:"header-anchor",href:"#_3-关于配置的一些建议","aria-hidden":"true"},"#",-1),w=(0,t.Uk)(" 3. 关于配置的一些建议"),O={href:"https://www.cnblogs.com/54chensongxia/p/13234398.html#3-%E5%85%B3%E4%BA%8E%E9%85%8D%E7%BD%AE%E7%9A%84%E4%B8%80%E4%BA%9B%E5%BB%BA%E8%AE%AE",target:"_blank",rel:"noopener noreferrer"},M=(0,t.Uk)("#"),D=(0,t.uE)('<p>通过上面的脚本，我们可以看到在启动过程中我们可以配置很多环境变量。</p><ul><li>CATALINA_HOME：可以不配置，默认使用安装目录；</li><li>CATALINA_BASE：建议不要自己配置，不配置的话会自动配置成和CATALINA_HOME一致；</li><li>CATALINA_OPTS：可以配置；</li><li>CATALINA_TMPDIR：建议不要自己配置，默认%CATALINA_BASE%\\temp；</li><li>JAVA_OPTS：可以配置；</li><li>JSSE_OPTS：不建议自己配置，默认值-Djdk.tls.ephemeralDHKeySize=2048；</li><li>LOGGING_CONFIG：建议不要自己配置，这个配置用于配置日志的配置文件，默认会使用LOGGING_CONFIG=&quot;-Djava.util.logging.config.file=%CATALINA_BASE%\\conf\\logging.properties&quot;</li><li>LOGGING_MANAGER：建议不要自己配置，默认会使用LOGGING_MANAGER=&quot;-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager&quot;</li></ul><p><strong>通过上面介绍我们发现大多数配置都不需要我们自己进行配置，一般情况下我们只需要配置CATALINA_OPTS和JAVA_OPTS这两个配置选项就可以了。这两个参数都可以配置Java运行时所需的一些参数，下面给出两个列子。</strong></p><p>在startup脚本中添加配置：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>//windows\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">JAVA_OPTS</span><span class="token operator">=</span>-server -Xms1024m -Xmx2048m -XX:PermSize<span class="token operator">=</span>256m -XX:MaxPermSize<span class="token operator">=</span>512m\n//Linux\n<span class="token assign-left variable">JAVA_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-server -Dfile.encoding=UTF-8 -Xms=512m -Xmx1024m -XX:PermSize=128m -XX:MaxPermSize=256m&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',5),P={id:"_4-shutdown-bat脚本分析",tabindex:"-1"},H=(0,t._)("a",{class:"header-anchor",href:"#_4-shutdown-bat脚本分析","aria-hidden":"true"},"#",-1),G=(0,t.Uk)(" 4. shutdown.bat脚本分析"),J={href:"https://www.cnblogs.com/54chensongxia/p/13234398.html#4-shutdownbat%E8%84%9A%E6%9C%AC%E5%88%86%E6%9E%90",target:"_blank",rel:"noopener noreferrer"},R=(0,t.Uk)("#"),x=(0,t.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>setlocal\n\nrem Guess CATALINA_HOME <span class="token keyword">if</span> not defined\n<span class="token builtin class-name">set</span> <span class="token string">&quot;CURRENT_DIR=%cd%&quot;</span>\n<span class="token keyword">if</span> not <span class="token string">&quot;%CATALINA_HOME%&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> goto gotHome\n<span class="token builtin class-name">set</span> <span class="token string">&quot;CATALINA_HOME=%CURRENT_DIR%&quot;</span>\n<span class="token keyword">if</span> exist <span class="token string">&quot;%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in<span class="token entity" title="\\c">\\c</span>atalina.bat&quot;</span> goto okHome\n<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>\n<span class="token builtin class-name">set</span> <span class="token string">&quot;CATALINA_HOME=%cd%&quot;</span>\n<span class="token builtin class-name">cd</span> <span class="token string">&quot;%CURRENT_DIR%&quot;</span>\n:gotHome\n<span class="token keyword">if</span> exist <span class="token string">&quot;%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in<span class="token entity" title="\\c">\\c</span>atalina.bat&quot;</span> goto okHome\n<span class="token builtin class-name">echo</span> The CATALINA_HOME environment variable is not defined correctly\n<span class="token builtin class-name">echo</span> This environment variable is needed to run this program\ngoto end\n:okHome\n\n<span class="token builtin class-name">set</span> <span class="token string">&quot;EXECUTABLE=%CATALINA_HOME%<span class="token entity" title="\\b">\\b</span>in<span class="token entity" title="\\c">\\c</span>atalina.bat&quot;</span>\n\nrem Check that target executable exists\n<span class="token keyword">if</span> exist <span class="token string">&quot;%EXECUTABLE%&quot;</span> goto okExec\n<span class="token builtin class-name">echo</span> Cannot <span class="token function">find</span> <span class="token string">&quot;%EXECUTABLE%&quot;</span>\n<span class="token builtin class-name">echo</span> This <span class="token function">file</span> is needed to run this program\ngoto end\n:okExec\n\nrem Get remaining unshifted <span class="token builtin class-name">command</span> line arguments and save them <span class="token keyword">in</span> the\n<span class="token builtin class-name">set</span> <span class="token assign-left variable">CMD_LINE_ARGS</span><span class="token operator">=</span>\n:setArgs\n<span class="token keyword">if</span> <span class="token string">&quot;&quot;</span>%1<span class="token string">&quot;&quot;</span><span class="token operator">==</span><span class="token string">&quot;&quot;</span>&quot;<span class="token string">&quot; goto doneSetArgs\nset CMD_LINE_ARGS=%CMD_LINE_ARGS% %1\nshift\ngoto setArgs\n:doneSetArgs\n//这边是关键\ncall &quot;</span>%EXECUTABLE%&quot; stop %CMD_LINE_ARGS%\n\n:end\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以发现shutdown.bat的逻辑和startup.bat的逻辑是一样的，也是先设置CATALINA_HOME，拼接命令行参数，不一样是最后执行的是catalina.bat stop。</p><p>这边还是有必要来分析下Tomcat的关闭原理的。我们知道，Tomcat中的工作线程都是demo线程，如果没有一个主线程的话那么Tomcat会立即停止运行的。（前台线程死亡后，demo线程会自动消失。）那么Tomcat是在哪里启动的这个主线程的呢？<strong>通过代码跟踪，我们发现是StandardServer这个类的await方法创建了这个主线程，这个线程hold了Tomcat程序不停止</strong>。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Negative values - don&#39;t wait on port - tomcat is embedded or we just don&#39;t like ports</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getPortWithOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// undocumented yet - for embedding apps that are around, alive.</span>\n            <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">//</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getPortWithOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                awaitThread <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>stopAwait<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span> <span class="token number">10000</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span> <span class="token class-name">InterruptedException</span> ex <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token comment">// continue and check the flag</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n                awaitThread <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// Set up a server socket to wait on</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            awaitSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token function">getPortWithOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                    <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;standardServer.awaitSocket.fail&quot;</span><span class="token punctuation">,</span> address<span class="token punctuation">,</span>\n                    <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token function">getPortWithOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token function">getPortOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            awaitThread <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// Loop waiting for a connection and a valid command</span>\n            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>stopAwait<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token class-name">ServerSocket</span> serverSocket <span class="token operator">=</span> awaitSocket<span class="token punctuation">;</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>serverSocket <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token comment">// Wait for the next connection</span>\n                <span class="token class-name">Socket</span> socket <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n                <span class="token class-name">StringBuilder</span> command <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                    <span class="token class-name">InputStream</span> stream<span class="token punctuation">;</span>\n                    <span class="token keyword">long</span> acceptStartTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                        socket <span class="token operator">=</span> serverSocket<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        socket<span class="token punctuation">.</span><span class="token function">setSoTimeout</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Ten seconds</span>\n                        stream <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SocketTimeoutException</span> ste<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token comment">// This should never happen but bug 56684 suggests that</span>\n                        <span class="token comment">// it does.</span>\n                        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;standardServer.accept.timeout&quot;</span><span class="token punctuation">,</span>\n                                <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> acceptStartTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ste<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">continue</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">AccessControlException</span> ace<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;StandardServer.accept security exception: &quot;</span>\n                                <span class="token operator">+</span> ace<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ace<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">continue</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>stopAwait<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            <span class="token comment">// Wait was aborted with socket.close()</span>\n                            <span class="token keyword">break</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;StandardServer.await: accept: &quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token keyword">break</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n\n                    <span class="token comment">// Read a set of characters from the socket</span>\n                    <span class="token keyword">int</span> expected <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span> <span class="token comment">// Cut off to avoid DoS attack</span>\n                    <span class="token keyword">while</span> <span class="token punctuation">(</span>expected <span class="token operator">&lt;</span> shutdown<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>random <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>\n                            random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        expected <span class="token operator">+=</span> <span class="token punctuation">(</span>random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                    <span class="token keyword">while</span> <span class="token punctuation">(</span>expected <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">int</span> ch <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n                        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                            ch <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;StandardServer.await: read: &quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                            ch <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                        <span class="token comment">// Control character or EOF (-1) terminates loop</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">&lt;</span> <span class="token number">32</span> <span class="token operator">||</span> ch <span class="token operator">==</span> <span class="token number">127</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            <span class="token keyword">break</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                        command<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> ch<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        expected<span class="token operator">--</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n                    <span class="token comment">// Close the socket now that we are done with it</span>\n                    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>socket <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token comment">// Ignore</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token comment">// Match against our command string</span>\n                <span class="token keyword">boolean</span> match <span class="token operator">=</span> command<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>shutdown<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;standardServer.shutdownViaPort&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">break</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span> <span class="token keyword">else</span>\n                    log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;StandardServer.await: Invalid command &#39;&quot;</span>\n                            <span class="token operator">+</span> command<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39; received&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n            <span class="token class-name">ServerSocket</span> serverSocket <span class="token operator">=</span> awaitSocket<span class="token punctuation">;</span>\n            awaitThread <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n            awaitSocket <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// Close the server socket and return</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>serverSocket <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                    serverSocket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token comment">// Ignore</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n折叠 \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>StandardServer默认监听的端口是8005端口（注意这个端口和Connector组件监听端口的区别），当发现监听到的连接的输入流中的内容与默认配置的值匹配（该值默认为字符串SHUTDOWN）则跳出循环。否则该方法会一直循环执行下去。所以只要没人向8005端口发送shutdown，这个线程就会一直运行，其他的守护线程也就不会消失。</p><p>当然我们可以将StandardServer的监听端口设置成-1（SpringBoot中内嵌的Tomcat就是这么做的），此时Tomcat不会再监听具体的端口，主线程会每10秒睡眠一次，知道我们手动将stopAwait设置为true。</p><p>知道了这个原理，我们只要将这个主线程结束掉，整个Tomcat程序就结束了。通过上面的分析，可以有两种方式来关闭Tomcat：</p><ul><li>通过shutdown.bat脚本，这个脚本最终会调用到Catalina的stopServer方法，这个方法中创建了一个Socket，并向StandardServer监听的端口发送了一个shutdown命令，主线程接收到后就退出了，其他守护线程也随之结束；</li></ul><p>如果我们将server.xml配置文件修改成：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Server</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8005<span class="token punctuation">&quot;</span></span> <span class="token attr-name">shutdown</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>GET /SHUTDOWN HTTP/1.1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',10),j=(0,t.Uk)("这样直接在浏览器中输入"),B={href:"http://localhost:8005/SHUTDOWN%E5%B0%B1%E5%8F%AF%E4%BB%A5%E5%85%B3%E9%97%ADTomcat%E4%BA%86%E3%80%82",target:"_blank",rel:"noopener noreferrer"},U=(0,t.Uk)("http://localhost:8005/SHUTDOWN就可以关闭Tomcat了。"),V=(0,t._)("ul",null,[(0,t._)("li",null,"另外的一种方式就是直接调用StandardServer的stop方法。")],-1),X={},F=(0,a(13860).Z)(X,[["render",function(n,s){const a=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[(0,t._)("h1",e,[i,o,(0,t._)("a",l,[p,(0,t.Wm)(a)])]),c,u,r,d,k,(0,t._)("h2",v,[m,b,(0,t._)("a",A,[g,(0,t.Wm)(a)])]),q,(0,t._)("p",null,[(0,t._)("a",h,[T,(0,t.Wm)(a)])]),_,(0,t._)("h2",E,[S,C,(0,t._)("a",f,[I,(0,t.Wm)(a)])]),y,(0,t._)("h2",N,[L,w,(0,t._)("a",O,[M,(0,t.Wm)(a)])]),D,(0,t._)("h2",P,[H,G,(0,t._)("a",J,[R,(0,t.Wm)(a)])]),x,(0,t._)("p",null,[j,(0,t._)("a",B,[U,(0,t.Wm)(a)])]),V])}]])},13860:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);