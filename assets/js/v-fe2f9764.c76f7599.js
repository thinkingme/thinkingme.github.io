"use strict";(self.webpackChunkcoding_road=self.webpackChunkcoding_road||[]).push([[8065],{41432:(a,e,i)=>{i.r(e),i.d(e,{data:()=>n});const n={key:"v-fe2f9764",path:"/coding-road/java-core/overview/hello-world.html",title:"第一个 Java 程序：Hello World",lang:"zh-CN",frontmatter:{category:["Java核心"],tag:["Java"],date:"2019-01-01T00:00:00.000Z",summary:"第一个 Java 程序：Hello World 一、安装集成开发环境 Intellij IDEA IntelliJ IDEA 简称 IDEA，是业界公认为最好的 Java 集成开发工具，尤其是在代码自动提示、代码重构、代码版本管理、单元测试、代码分析等方面有着亮眼的发挥。 IDEA 产于捷克，开发人员以严谨著称的东欧程序员为主，分为社区版和付费版两个版本。我",head:[["meta",{property:"og:url",content:"https://vuepress-theme-hope-v2-demo.mrhope.site/coding-road/java-core/overview/hello-world.html"}],["meta",{property:"og:site_name",content:"coding-rode"}],["meta",{property:"og:title",content:"第一个 Java 程序：Hello World"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:updated_time",content:"2022-06-04T08:56:49.000Z"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"article:tag",content:"Java"}],["meta",{property:"article:published_time",content:"2019-01-01T00:00:00.000Z"}],["meta",{property:"article:modified_time",content:"2022-06-04T08:56:49.000Z"}]]},excerpt:"",headers:[{level:2,title:"一、安装集成开发环境 Intellij IDEA",slug:"一、安装集成开发环境-intellij-idea",children:[{level:3,title:"01、下载 IDEA",slug:"_01、下载-idea",children:[]},{level:3,title:"02、安装 IDEA",slug:"_02、安装-idea",children:[]},{level:3,title:"03、启动 IDEA",slug:"_03、启动-idea",children:[]}]},{level:2,title:"二、Hello World",slug:"二、hello-world",children:[]},{level:2,title:"三、JDK 和 JRE 有什么区别？",slug:"三、jdk-和-jre-有什么区别",children:[{level:3,title:"01、JDK",slug:"_01、jdk",children:[]},{level:3,title:"02、JRE",slug:"_02、jre",children:[]}]}],git:{createdTime:1653617096e3,updatedTime:1654333009e3,contributors:[{name:"林振辉",email:"linzhenhui@apexsoft.com",commits:2},{name:"thinkingme",email:"linzhenhuigg@gmail.com",commits:1}]},readingTime:{minutes:7.22,words:2166},filePathRelative:"coding-road/java-core/overview/hello-world.md"}},29277:(a,e,i)=>{i.r(e),i.d(e,{default:()=>k});var n=i(95393);const t=(0,n.uE)('<h1 id="第一个-java-程序-hello-world" tabindex="-1"><a class="header-anchor" href="#第一个-java-程序-hello-world" aria-hidden="true">#</a> 第一个 Java 程序：Hello World</h1><h2 id="一、安装集成开发环境-intellij-idea" tabindex="-1"><a class="header-anchor" href="#一、安装集成开发环境-intellij-idea" aria-hidden="true">#</a> 一、安装集成开发环境 Intellij IDEA</h2><p>IntelliJ IDEA 简称 IDEA，是业界公认为最好的 Java 集成开发工具，尤其是在代码自动提示、代码重构、代码版本管理、单元测试、代码分析等方面有着亮眼的发挥。</p><p>IDEA 产于捷克，开发人员以严谨著称的东欧程序员为主，分为社区版和付费版两个版本。我们在学习阶段，社区版就足够用了。</p><p>回想起我最初学 Java 的时候，老师要求我们在记事本上敲代码，在命令行中编译和执行 Java 代码，搞得全班三分之二的同学都做好了放弃学习 Java 的打算。</p><p>鉴于此，我强烈推荐大家使用集成开发工具，比如说 IntelliJ IDEA 来学习。</p><p>IDEA 分为社区版和付费版两个版本。</p><h3 id="_01、下载-idea" tabindex="-1"><a class="header-anchor" href="#_01、下载-idea" aria-hidden="true">#</a> 01、下载 IDEA</h3>',8),l=(0,n.Uk)("IntelliJ IDEA 的官方下载地址为："),s={href:"https://www.jetbrains.com/idea/download",target:"_blank",rel:"noopener noreferrer"},p=(0,n.Uk)("https://www.jetbrains.com/idea/download/"),o=(0,n.uE)('<p><img src="https://cdn.jsdelivr.net/gh/itwanger/itwanger.github.io/assets/images/2019/11/java-idea-community-1.png" alt="" loading="lazy"></p><p>UItimate 为付费版，可以免费试用，主要针对的是 Web 和企业开发用户；Community 为免费版，可以免费使用，主要针对的是 Java 初学者和安卓开发用户。</p><p>功能上的差别如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/itwanger/itwanger.github.io/assets/images/2019/11/java-idea-community-2.png" alt="" loading="lazy"></p><p>本篇教程主要针对的是 Java 初学者，所以选择免费版为例，点击「Download」进行下载。</p><p>稍等一分钟时间，大概 580M。</p><h3 id="_02、安装-idea" tabindex="-1"><a class="header-anchor" href="#_02、安装-idea" aria-hidden="true">#</a> 02、安装 IDEA</h3><p>双击运行 IDEA 安装程序，一步步傻瓜式的下一步就行了。</p><p><img src="https://cdn.jsdelivr.net/gh/itwanger/itwanger.github.io/assets/images/2019/11/java-idea-community-3.png" alt="" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/itwanger/itwanger.github.io/assets/images/2019/11/java-idea-community-4.png" alt="" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/itwanger/itwanger.github.io/assets/images/2019/11/java-idea-community-5.png" alt="" loading="lazy"></p><p>为了方便启动 IDEA，可以勾选【64-bit launcher】复选框。为了关联 Java 源文件，可以勾选【.java】复选框。</p><p><img src="https://cdn.jsdelivr.net/gh/itwanger/itwanger.github.io/assets/images/2019/11/java-idea-community-6.png" alt="" loading="lazy"></p><p>点击【Install】后，需要静静地等待一会，大概一分钟的时间，趁机休息一下眼睛。</p><p><img src="https://cdn.jsdelivr.net/gh/itwanger/itwanger.github.io/assets/images/2019/11/java-idea-community-7.png" alt="" loading="lazy"></p><p>安装完成后的界面如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/itwanger/itwanger.github.io/assets/images/2019/11/java-idea-community-8.png" alt="" loading="lazy"></p><h3 id="_03、启动-idea" tabindex="-1"><a class="header-anchor" href="#_03、启动-idea" aria-hidden="true">#</a> 03、启动 IDEA</h3><p>回到桌面，双击运行 IDEA 的快捷方式，启动 IDEA。</p><p><img src="https://cdn.jsdelivr.net/gh/itwanger/itwanger.github.io/assets/images/2019/11/java-idea-community-9.png" alt="" loading="lazy"></p><p>假装阅读完条款后，勾选同意复选框，点击【Continue】</p><p><img src="https://cdn.jsdelivr.net/gh/itwanger/itwanger.github.io/assets/images/2019/11/java-idea-community-10.png" alt="" loading="lazy"></p><p>如果想要帮助 IDEA 收集改进信息，可以点击【Send Usage Statistics】；否则点击【Don&#39;t send】。</p><p><img src="https://cdn.jsdelivr.net/gh/itwanger/itwanger.github.io/assets/images/2019/11/java-idea-community-11.png" alt="" loading="lazy"></p><p>到此，Intellij IDEA 的安装就完成了，很简单。</p><h2 id="二、hello-world" tabindex="-1"><a class="header-anchor" href="#二、hello-world" aria-hidden="true">#</a> 二、Hello World</h2><p>第一个 Java 程序非常简单，代码如下：</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * <span class="token keyword">@author</span> 微信搜「沉默王二」，回复关键字 PDF\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;三妹，少看手机少打游戏，好好学，美美哒。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>IDEA 会自动保存，在代码编辑面板中右键，在弹出的菜单中选择「Run &#39;HelloWorld.main()&#39;」，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/four-01.png" alt="" loading="lazy"></p><p>等代码编译结束后，就可以在 Run 面板里看到下面的内容：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>三妹，少看手机少打游戏，好好学，美美哒。\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>“二哥，上面这段代码的输出结果虽然令我非常开心，但是有好多生疏的关键字令我感到困惑，能给我解释一下吗？”</p><p>“当然没问题啊。”</p><ul><li><p>class 关键字：用于在 Java 中声明一个类。</p></li><li><p>public 关键字：一个表示可见性的访问修饰符。</p></li><li><p>static 关键字：我们可以用它来声明任何一个方法，被 static 修饰后的方法称之为静态方法。静态方法不需要为其创建对象就能调用。</p></li><li><p>void 关键字：表示该方法不返回任何值。</p></li><li><p>main 关键字：表示该方法为主方法，也就是程序运行的入口。<code>main()</code> 方法由 Java 虚拟机执行，配合上 static 关键字后，可以不用创建对象就可以调用，可以节省不少内存空间。</p></li><li><p><code>String [] args</code>：<code>main()</code> 方法的参数，类型为 String 数组，参数名为 args。</p></li><li><p><code>System.out.println()</code>：一个 Java 语句，一般情况下是将传递的参数打印到控制台。System 是 java.lang 包中的一个 final 类，该类提供的设施包括标准输入，标准输出和错误输出流等等。out 是 System 类的静态成员字段，类型为 PrintStream，它与主机的标准输出控制台进行映射。println 是 PrintStream 类的一个方法，通过调用 print 方法并添加一个换行符实现的。</p></li></ul><h2 id="三、jdk-和-jre-有什么区别" tabindex="-1"><a class="header-anchor" href="#三、jdk-和-jre-有什么区别" aria-hidden="true">#</a> 三、JDK 和 JRE 有什么区别？</h2><h3 id="_01、jdk" tabindex="-1"><a class="header-anchor" href="#_01、jdk" aria-hidden="true">#</a> 01、JDK</h3><p>JDK 是 Java Development Kit 的首字母缩写，是提供给 Java 程序员的开发工具包，换句话说，没有 JDK，Java 程序员就无法使用 Java 语言编写 Java 程序。也就是说，JDK 是用于开发 Java 程序的最小环境。</p><p>想要成为一名 Java 程序员，首先就需要在电脑上安装 JDK。当然了，新版的 Intellij IDEA（公认最好用的集成开发环境）已经支持直接下载 JDK 了。</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/six-01.png" alt="" loading="lazy"></p><p>并且支持下载不同版本的 JDK，除了 Oracle 的 OpenJDK，还有社区维护版 AdoptOpenJDK，里面包含了目前使用范围最广的 HotSpot 虚拟机。</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/six-02.png" alt="" loading="lazy"></p><p>如果下载比较慢的话，可以直接在 AdoptOpenJDK 官网上下载。</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/six-03.png" alt="" loading="lazy"></p><p>如果还是比较慢的话，通过 Oracle 官网下载吧！</p>',45),r={href:"https://www.oracle.com/java/technologies/javase-jdk11-downloads.html",target:"_blank",rel:"noopener noreferrer"},d=(0,n.Uk)("https://www.oracle.com/java/technologies/javase-jdk11-downloads.html"),g=(0,n.Uk)("JDK 安装成功后，就可以编写 Java 代码了，小伙伴们可以参照上一篇文章《"),c={href:"https://mp.weixin.qq.com/s/GYDFndO0Q1Nqzcc_Te61gw",target:"_blank",rel:"noopener noreferrer"},h=(0,n.Uk)("Hello World"),m=(0,n.Uk)("》。"),v=(0,n.uE)('<p>JDK 包含了 JRE，同时还包含了编译 Java 源码的编译器 javac，以及其他的一些重要工具：</p><ul><li>keytool：用于操作 keystore 密钥；</li><li>javap：class 类文件的最基础的反编译器；</li><li>jstack：用于打印 Java 线程栈踪迹的工具；</li><li>jconsole：用于监视 Java 程序的工具；</li><li>jhat：用于 Java 堆分析的工具</li><li>jar：用于打包 Java 程序的工具；</li><li>javadoc：用于生成 Java 文档的工具；</li></ul><h3 id="_02、jre" tabindex="-1"><a class="header-anchor" href="#_02、jre" aria-hidden="true">#</a> 02、JRE</h3><p>JRE 是 Java Runtime Environment 的首字母缩写，是提供给 Java 程序运行的最小环境，换句话说，没有 JRE，Java 程序就无法运行。</p><p>Java 程序运行的正式环境一般会选择 Linux 服务器，因为更安全、更高效、更稳定。我们只需要在 Linux 服务器上安装 JRE 就可以运行 Java 程序，而不必安装 JDK，因为我们不需要在服务器上编译和调试 Java 源代码。</p><p>刚好我有一台闲置的阿里云服务器，这里就给小伙伴们演示一下 JRE 的安装过程。</p><p>第一步：使用以下命令列出服务器上可以安装的 Java 环境：</p><blockquote><p>yum list java*</p></blockquote><p>可以看到有这么一些（只列出 Java 11 的部分——最近一个 LTS 版本）：</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/six-04.png" alt="" loading="lazy"></p><p>其中 JRE 为 java-11-openjdk.x86_64，JDK 为 java-11-openjdk-devel.x86_64。</p><p>第二步，使用以下命令安装 JRE：</p><blockquote><p>yum install java-11-openjdk.x86_64</p></blockquote><p>第三步，使用以下命令测试是否安装成功：</p><blockquote><p>java -version</p></blockquote><p>如果出现以下结果，则表明安装成功：</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/six-05.png" alt="" loading="lazy"></p><p>由于 JRE 中不包含 javac，所以 <code>javac -version</code> 的结果如下所示：</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/six-06.png" alt="" loading="lazy"></p><p>那既然服务器上的 JRE 环境已经 OK 了，那我们就把之前的“Hello World”程序打成 jar 上传过去，让它跑起来。</p><p>第一步，Maven clean（对项目清理）：</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/six-07.png" alt="" loading="lazy"></p><p>第二步，Maven package（对项目打包）：</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/six-08.png" alt="" loading="lazy"></p><p>可以在 Run 面板中看到以下信息：</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/six-09.png" alt="" loading="lazy"></p><p>说明项目打包成功了。</p><p>第三步，使用 FileZilla 工具将 jar 包上传到服务器指定目录。</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/six-10.png" alt="" loading="lazy"></p><p>第四步，使用 iTerm2 工具连接服务器。</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/six-11.png" alt="" loading="lazy"></p><p>第五步，执行以下命令：</p><blockquote><p>java -cp TechSister-1.0-SNAPSHOT.jar com.itwanger.five.HelloWorld</p></blockquote><p>可以看到以下结果：</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/overview/six-12.png" alt="" loading="lazy"></p><p>“搞定了，三妹，今天我们就学到这吧。”转动了一下僵硬的脖子后，我对三妹说，“开发环境需要安装 JDK，因为既需要编写源代码，还需要打包和测试；生产环境只需要安装 JRE，因为只需要运行编译打包好的 jar 包即可。”</p><p><img src="https://cdn.jsdelivr.net/gh/thinkingme/thinkingme.github.io@master/images/xingbiaogongzhonghao.png" alt="" loading="lazy"></p>',37),u={},k=(0,i(13860).Z)(u,[["render",function(a,e){const i=(0,n.up)("ExternalLinkIcon");return(0,n.wg)(),(0,n.iD)("div",null,[t,(0,n._)("p",null,[l,(0,n._)("a",s,[p,(0,n.Wm)(i)])]),o,(0,n._)("blockquote",null,[(0,n._)("p",null,[(0,n._)("a",r,[d,(0,n.Wm)(i)])])]),(0,n._)("p",null,[g,(0,n._)("a",c,[h,(0,n.Wm)(i)]),m]),v])}]])},13860:(a,e)=>{e.Z=(a,e)=>{const i=a.__vccOpts||a;for(const[a,n]of e)i[a]=n;return i}}}]);