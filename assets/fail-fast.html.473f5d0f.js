import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.9b6c14fa.js";const p={},e=t(`<h1 id="\u4E3A\u4EC0\u4E48\u963F\u91CC\u5DF4\u5DF4\u5F3A\u5236\u4E0D\u8981\u5728foreach\u91CC\u6267\u884C\u5220\u9664\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u963F\u91CC\u5DF4\u5DF4\u5F3A\u5236\u4E0D\u8981\u5728foreach\u91CC\u6267\u884C\u5220\u9664\u64CD\u4F5C" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u963F\u91CC\u5DF4\u5DF4\u5F3A\u5236\u4E0D\u8981\u5728foreach\u91CC\u6267\u884C\u5220\u9664\u64CD\u4F5C</h1><p>\u90A3\u5929\uFF0C\u5C0F\u4E8C\u53BB\u963F\u91CC\u9762\u8BD5\uFF0C\u9762\u8BD5\u5B98\u8001\u738B\u4E00\u4E0A\u6765\u5C31\u7529\u7ED9\u4E86\u4ED6\u4E00\u9053\u9762\u8BD5\u9898\uFF1A\u4E3A\u4EC0\u4E48\u963F\u91CC\u7684 Java \u5F00\u53D1\u624B\u518C\u91CC\u4F1A\u5F3A\u5236\u4E0D\u8981\u5728 foreach \u91CC\u8FDB\u884C\u5143\u7D20\u7684\u5220\u9664\u64CD\u4F5C\uFF1F</p><hr><p>\u4E3A\u4E86\u9547\u697C\uFF0C\u5148\u642C\u4E00\u6BB5\u82F1\u6587\u6765\u89E3\u91CA\u4E00\u4E0B fail-fast\u3002</p><blockquote><p>In systems design, a fail-fast system is one which immediately reports at its interface any condition that is likely to indicate a failure. Fail-fast systems are usually designed to stop normal operation rather than attempt to continue a possibly flawed process. Such designs often check the system&#39;s state at several points in an operation, so any failures can be detected early. The responsibility of a fail-fast module is detecting errors, then letting the next-highest level of the system handle them.</p></blockquote><p>\u8FD9\u6BB5\u8BDD\u7684\u5927\u81F4\u610F\u601D\u5C31\u662F\uFF0Cfail-fast \u662F\u4E00\u79CD\u901A\u7528\u7684\u7CFB\u7EDF\u8BBE\u8BA1\u601D\u60F3\uFF0C\u4E00\u65E6\u68C0\u6D4B\u5230\u53EF\u80FD\u4F1A\u53D1\u751F\u9519\u8BEF\uFF0C\u5C31\u7ACB\u9A6C\u629B\u51FA\u5F02\u5E38\uFF0C\u7A0B\u5E8F\u5C06\u4E0D\u518D\u5F80\u4E0B\u6267\u884C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Wanger</span> wanger<span class="token punctuation">)</span> <span class="token punctuation">{</span>   
    <span class="token keyword">if</span> <span class="token punctuation">(</span>wanger <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;wanger \u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>wanger<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u65E6\u68C0\u6D4B\u5230 wanger \u4E3A null\uFF0C\u5C31\u7ACB\u9A6C\u629B\u51FA\u5F02\u5E38\uFF0C\u8BA9\u8C03\u7528\u8005\u6765\u51B3\u5B9A\u8FD9\u79CD\u60C5\u51B5\u4E0B\u8BE5\u600E\u4E48\u5904\u7406\uFF0C\u4E0B\u4E00\u6B65 <code>wanger.toString()</code> \u5C31\u4E0D\u4F1A\u6267\u884C\u4E86\u2014\u2014\u907F\u514D\u66F4\u4E25\u91CD\u7684\u9519\u8BEF\u51FA\u73B0\u3002</p><p>\u5F88\u591A\u65F6\u5019\uFF0C\u6211\u4EEC\u4F1A\u628A fail-fast \u5F52\u7C7B\u4E3A Java \u96C6\u5408\u6846\u67B6\u7684\u4E00\u79CD\u9519\u8BEF\u68C0\u6D4B\u673A\u5236\uFF0C\u4F46\u5176\u5B9E fail-fast \u5E76\u4E0D\u662F Java \u96C6\u5408\u6846\u67B6\u7279\u6709\u7684\u673A\u5236\u3002</p><p>\u4E4B\u6240\u4EE5\u6211\u4EEC\u628A fail-fast \u653E\u5728\u96C6\u5408\u6846\u67B6\u7BC7\u91CC\u4ECB\u7ECD\uFF0C\u662F\u56E0\u4E3A\u95EE\u9898\u6BD4\u8F83\u5BB9\u6613\u518D\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E00\u4E2A\u6587\u7AE0\u771F\u7279\u4E48\u6709\u8DA3\u7684\u7A0B\u5E8F\u5458&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		list<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6BB5\u4EE3\u7801\u770B\u8D77\u6765\u6CA1\u6709\u4EFB\u4F55\u95EE\u9898\uFF0C\u4F46\u8FD0\u884C\u8D77\u6765\u5C31\u62A5\u9519\u4E86\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/fail-fast-01.png" alt="" loading="lazy"></p><p>\u6839\u636E\u9519\u8BEF\u7684\u5806\u6808\u4FE1\u606F\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5B9A\u4F4D\u5230 ArrayList \u7684\u7B2C 901 \u884C\u4EE3\u7801\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>modCount <span class="token operator">!=</span> expectedModCount<span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u5C31\u662F\u8BF4\uFF0Cremove \u7684\u65F6\u5019\u89E6\u53D1\u6267\u884C\u4E86 <code>checkForComodification</code> \u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u5BF9 modCount \u548C expectedModCount \u8FDB\u884C\u4E86\u6BD4\u8F83\uFF0C\u53D1\u73B0\u4E24\u8005\u4E0D\u7B49\uFF0C\u5C31\u629B\u51FA\u4E86 <code>ConcurrentModificationException</code> \u5F02\u5E38\u3002</p><p>\u4E3A\u4EC0\u4E48\u4F1A\u6267\u884C <code>checkForComodification</code> \u65B9\u6CD5\u5462\uFF1F</p><p>\u662F\u56E0\u4E3A for-each \u672C\u8D28\u4E0A\u662F\u4E2A\u8BED\u6CD5\u7CD6\uFF0C\u5E95\u5C42\u662F\u901A\u8FC7<a href="%E6%88%B3%E9%93%BE%E6%8E%A5%F0%9F%94%97%EF%BC%8C%E8%AF%A6%E7%BB%86%E4%BA%86%E8%A7%A3%E4%B8%8B">\u8FED\u4EE3\u5668 Iterator</a> \u914D\u5408 while \u5FAA\u73AF\u5B9E\u73B0\u7684\uFF0C\u6765\u770B\u4E00\u4E0B\u53CD\u7F16\u8BD1\u540E\u7684\u5B57\u8282\u7801\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E00\u4E2A\u6587\u7AE0\u771F\u7279\u4E48\u6709\u8DA3\u7684\u7A0B\u5E8F\u5458&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Iterator</span> var2 <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span><span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>var2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        list<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6765\u770B\u4E00\u4E0B ArrayList \u7684 iterator \u65B9\u6CD5\u5427\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Itr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5185\u90E8\u7C7B Itr \u5B9E\u73B0\u4E86 Iterator \u63A5\u53E3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">Itr</span> <span class="token keyword">implements</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> cursor<span class="token punctuation">;</span>       <span class="token comment">// index of next element to return</span>
    <span class="token keyword">int</span> lastRet <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// index of last element returned; -1 if no such</span>
    <span class="token keyword">int</span> expectedModCount <span class="token operator">=</span> modCount<span class="token punctuation">;</span>

    <span class="token class-name">Itr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> cursor <span class="token operator">!=</span> size<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> cursor<span class="token punctuation">;</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData <span class="token operator">=</span> <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>elementData<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cursor <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> elementData<span class="token punctuation">[</span>lastRet <span class="token operator">=</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u5C31\u662F\u8BF4 <code>new Itr()</code> \u7684\u65F6\u5019 expectedModCount \u88AB\u8D4B\u503C\u4E3A modCount\uFF0C\u800C modCount \u662F List \u7684\u4E00\u4E2A\u6210\u5458\u53D8\u91CF\uFF0C\u8868\u793A\u96C6\u5408\u88AB\u4FEE\u6539\u7684\u6B21\u6570\u3002\u7531\u4E8E list \u6B64\u524D\u6267\u884C\u4E86 3 \u6B21 add \u65B9\u6CD5\u3002</p><ul><li>add \u65B9\u6CD5\u8C03\u7528 ensureCapacityInternal \u65B9\u6CD5</li><li>ensureCapacityInternal \u65B9\u6CD5\u8C03\u7528 ensureExplicitCapacity \u65B9\u6CD5</li><li>ensureExplicitCapacity \u65B9\u6CD5\u4E2D\u4F1A\u6267\u884C <code>modCount++</code></li></ul><p>\u6240\u4EE5 modCount \u7684\u503C\u5728\u7ECF\u8FC7\u4E09\u6B21 add \u540E\u4E3A 3\uFF0C\u4E8E\u662F <code>new Itr()</code> \u540E expectedModCount \u7684\u503C\u4E5F\u4E3A 3\u3002</p><p>\u6267\u884C\u7B2C\u4E00\u6B21\u5FAA\u73AF\u65F6\uFF0C\u53D1\u73B0\u201C\u6C89\u9ED8\u738B\u4E8C\u201D\u7B49\u4E8E str\uFF0C\u4E8E\u662F\u6267\u884C <code>list.remove(str)</code>\u3002</p><ul><li>remove \u65B9\u6CD5\u8C03\u7528 fastRemove \u65B9\u6CD5</li><li>fastRemove \u65B9\u6CD5\u4E2D\u4F1A\u6267\u884C <code>modCount++</code></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">fastRemove</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> numMoved <span class="token operator">=</span> size <span class="token operator">-</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>numMoved <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> elementData<span class="token punctuation">,</span> index<span class="token punctuation">,</span>
                         numMoved<span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData<span class="token punctuation">[</span><span class="token operator">--</span>size<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// clear to let GC do its work</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>modCount \u7684\u503C\u53D8\u6210\u4E86 4\u3002</p><p>\u6267\u884C\u7B2C\u4E8C\u6B21\u5FAA\u73AF\u65F6\uFF0C\u4F1A\u6267\u884C Itr \u7684 next \u65B9\u6CD5\uFF08<code>String str = (String) var3.next();</code>\uFF09\uFF0Cnext \u65B9\u6CD5\u5C31\u4F1A\u8C03\u7528 <code>checkForComodification</code> \u65B9\u6CD5\uFF0C\u6B64\u65F6 expectedModCount \u4E3A 3\uFF0CmodCount \u4E3A 4\uFF0C\u5C31\u53EA\u597D\u629B\u51FA ConcurrentModificationException \u5F02\u5E38\u4E86\u3002</p><p>\u90A3\u5176\u5B9E\u5728\u963F\u91CC\u5DF4\u5DF4\u7684 Java \u5F00\u53D1\u624B\u518C\u91CC\u4E5F\u63D0\u5230\u4E86\uFF0C\u4E0D\u8981\u5728 for-each \u5FAA\u73AF\u91CC\u8FDB\u884C\u5143\u7D20\u7684 remove/add \u64CD\u4F5C\u3002remove \u5143\u7D20\u8BF7\u4F7F\u7528 Iterator \u65B9\u5F0F\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/collection/fail-fast-02.png" alt="" loading="lazy"></p><p>\u90A3\u539F\u56E0\u5176\u5B9E\u5C31\u662F\u6211\u4EEC\u4E0A\u9762\u5206\u6790\u7684\u8FD9\u4E9B\uFF0C\u51FA\u4E8E fail-fast \u4FDD\u62A4\u673A\u5236\u3002</p><p><strong>\u90A3\u8BE5\u5982\u4F55\u6B63\u786E\u5730\u5220\u9664\u5143\u7D20\u5462</strong>\uFF1F</p><p><strong>1\uFF09remove \u540E break</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E00\u4E2A\u6587\u7AE0\u771F\u7279\u4E48\u6709\u8DA3\u7684\u7A0B\u5E8F\u5458&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		list<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>break \u540E\u5FAA\u73AF\u5C31\u4E0D\u518D\u904D\u5386\u4E86\uFF0C\u610F\u5473\u7740 Iterator \u7684 next \u65B9\u6CD5\u4E0D\u518D\u6267\u884C\u4E86\uFF0C\u4E5F\u5C31\u610F\u5473\u7740 <code>checkForComodification</code> \u65B9\u6CD5\u4E0D\u518D\u6267\u884C\u4E86\uFF0C\u6240\u4EE5\u5F02\u5E38\u4E5F\u5C31\u4E0D\u4F1A\u629B\u51FA\u4E86\u3002</p><p>\u4F46\u662F\u5462\uFF0C\u5F53 List \u4E2D\u6709\u91CD\u590D\u5143\u7D20\u8981\u5220\u9664\u7684\u65F6\u5019\uFF0Cbreak \u5C31\u4E0D\u5408\u9002\u4E86\u3002</p><p><strong>2\uFF09for \u5FAA\u73AF</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E00\u4E2A\u6587\u7AE0\u771F\u7279\u4E48\u6709\u8DA3\u7684\u7A0B\u5E8F\u5458&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">String</span> str <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		list<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>for \u5FAA\u73AF\u867D\u7136\u53EF\u4EE5\u907F\u5F00 fail-fast \u4FDD\u62A4\u673A\u5236\uFF0C\u4E5F\u5C31\u8BF4 remove \u5143\u7D20\u540E\u4E0D\u518D\u629B\u51FA\u5F02\u5E38\uFF1B\u4F46\u662F\u5462\uFF0C\u8FD9\u6BB5\u7A0B\u5E8F\u5728\u539F\u5219\u4E0A\u662F\u6709\u95EE\u9898\u7684\u3002\u4E3A\u4EC0\u4E48\u5462\uFF1F</p><p>\u7B2C\u4E00\u6B21\u5FAA\u73AF\u7684\u65F6\u5019\uFF0Ci \u4E3A 0\uFF0C<code>list.size()</code> \u4E3A 3\uFF0C\u5F53\u6267\u884C\u5B8C remove \u65B9\u6CD5\u540E\uFF0Ci \u4E3A 1\uFF0C<code>list.size()</code> \u5374\u53D8\u6210\u4E86 2\uFF0C\u56E0\u4E3A list \u7684\u5927\u5C0F\u5728 remove \u540E\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u4E5F\u5C31\u610F\u5473\u7740\u201C\u6C89\u9ED8\u738B\u4E09\u201D\u8FD9\u4E2A\u5143\u7D20\u88AB\u8DF3\u8FC7\u4E86\u3002\u80FD\u660E\u767D\u5417\uFF1F</p><p>remove \u4E4B\u524D <code>list.get(1)</code> \u4E3A\u201C\u6C89\u9ED8\u738B\u4E09\u201D\uFF1B\u4F46 remove \u4E4B\u540E <code>list.get(1)</code> \u53D8\u6210\u4E86\u201C\u4E00\u4E2A\u6587\u7AE0\u771F\u7279\u4E48\u6709\u8DA3\u7684\u7A0B\u5E8F\u5458\u201D\uFF0C\u800C <code>list.get(0)</code> \u53D8\u6210\u4E86\u201C\u6C89\u9ED8\u738B\u4E09\u201D\u3002</p><p><strong>3\uFF09\u4F7F\u7528 Iterator</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E00\u4E2A\u6587\u7AE0\u771F\u7279\u4E48\u6709\u8DA3\u7684\u7A0B\u5E8F\u5458&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> itr <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span>itr<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">String</span> str <span class="token operator">=</span> itr<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;\u6C89\u9ED8\u738B\u4E8C&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		itr<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4EC0\u4E48\u4F7F\u7528 Iterator \u7684 remove \u65B9\u6CD5\u5C31\u53EF\u4EE5\u907F\u5F00 fail-fast \u4FDD\u62A4\u673A\u5236\u5462\uFF1F\u770B\u4E00\u4E0B remove \u7684\u6E90\u7801\u5C31\u660E\u767D\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lastRet <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">checkForComodification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">ArrayList</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>lastRet<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cursor <span class="token operator">=</span> lastRet<span class="token punctuation">;</span>
        lastRet <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        expectedModCount <span class="token operator">=</span> modCount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IndexOutOfBoundsException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5220\u9664\u5B8C\u4F1A\u6267\u884C <code>expectedModCount = modCount</code>\uFF0C\u4FDD\u8BC1\u4E86 expectedModCount \u4E0E modCount \u7684\u540C\u6B65\u3002</p><hr><p>\u7B80\u5355\u5730\u603B\u7ED3\u4E00\u4E0B\uFF0Cfail-fast \u662F\u4E00\u79CD\u4FDD\u62A4\u673A\u5236\uFF0C\u53EF\u4EE5\u901A\u8FC7 for-each \u5FAA\u73AF\u5220\u9664\u96C6\u5408\u7684\u5143\u7D20\u7684\u65B9\u5F0F\u9A8C\u8BC1\u8FD9\u79CD\u4FDD\u62A4\u673A\u5236\u3002</p><p>\u90A3\u4E5F\u5C31\u662F\u8BF4\uFF0Cfor-each \u672C\u8D28\u4E0A\u662F\u4E00\u79CD\u8BED\u6CD5\u7CD6\uFF0C\u904D\u5386\u96C6\u5408\u65F6\u5F88\u65B9\u9762\uFF0C\u4F46\u5E76\u4E0D\u9002\u5408\u62FF\u6765\u64CD\u4F5C\u96C6\u5408\u4E2D\u7684\u5143\u7D20\uFF08\u589E\u5220\uFF09\u3002</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/xingbiaogongzhonghao.png" alt="" loading="lazy"></p>`,53),o=[e];function c(i,l){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","fail-fast.html.vue"]]);export{r as default};
